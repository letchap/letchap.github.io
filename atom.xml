<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>letchap</title><link href="https://letchap.github.io/" rel="alternate"/><link href="https://letchap.github.io/atom.xml" rel="self"/><id>https://letchap.github.io/</id><updated>2023-02-28T10:27:00+01:00</updated><subtitle>du Linux, du Python, un peu de Mac</subtitle><entry><title>Les travaux de rafraîchissement sur le blog</title><link href="https://letchap.github.io/2023/02/28/les-travaux-de-rafraichissement-sur-le-blog/" rel="alternate"/><published>2023-02-28T10:27:00+01:00</published><updated>2023-02-28T10:27:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2023-02-28:/2023/02/28/les-travaux-de-rafraichissement-sur-le-blog/</id><summary type="html">&lt;p&gt;Après presque 8 ans sans avoir touché au blog, il était nécessaire de faire un peu de dépoussiérage. Toutes les sources ont 8 ans, autant dire une éternité. Pour le blog, j'utilise :
* le CMS Pelican
* le framework Foundation pour les feuilles de style
* Github pour la publication des pages&lt;/p&gt;
&lt;p&gt;Pour …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Après presque 8 ans sans avoir touché au blog, il était nécessaire de faire un peu de dépoussiérage. Toutes les sources ont 8 ans, autant dire une éternité. Pour le blog, j'utilise :
* le CMS Pelican
* le framework Foundation pour les feuilles de style
* Github pour la publication des pages&lt;/p&gt;
&lt;p&gt;Pour remettre un petit coup de frais sur le blog, j'ai eu besoin de :
* récupérer les sources depuis Github
* faire la montée de version Pelican
* faire la montée de version de Foundation de la v5 vers la v6&lt;/p&gt;
&lt;h3&gt;Récupérer les sources&lt;/h3&gt;
&lt;p&gt;Mon dernier article a été écrit sur un iMac qui a rendu l'âme. Fort heureusement, les sources sont toujours disponibles sur mon dépôt Github. Dans le dépôt source sont présents les articles et le template du site au format Foundation 5 (mais pas les sources Pelican).&lt;/p&gt;
&lt;p&gt;Dans deux de mes articles précédents, j'avais expliqué comment travailler sur plusieurs ordinateurs différents grâce à Github et comment créer un environnement virtuel python pour bien gérer le projet en local. Cette fois, je me suis facilité la tâche en faisant les deux en même temps grâce à Pycharm. L'installation de Pycharm sur Ubuntu se fait à partir d'un dépôt snap. J'utlise la version community :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;snap&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pycharm-community&lt;span class="w"&gt; &lt;/span&gt;--classic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Une fois dans Pycharm, je peux créer un projet en clonant le dépôt Github. Pycharm va vous demander de vous connecter à votre compte Github, de sélectionner le dépôt à cloner, puis va créer le projet à partir du clone.&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="pycharm" href="https://letchap.github.io/images/pycharm.png" title="Ecran pycharm"&gt;&lt;img alt="Ecran pycham" src="https://letchap.github.io/images/pycharm.png" title="Ecran pycharm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dans Pycharm, je vais donc avoir les pages sources du blog, et l'ancien thème Foundation dans sa version 5.&lt;/p&gt;
&lt;p&gt;Je vais ensuite paramétrer un environnement virtuel avant d'installer la nouvelle version de Pelican. Pour cela je vais dans file/settings/projets/python interpreter, add interpreter et je choisis virtualenv environment.&lt;/p&gt;
&lt;h3&gt;Installer la nouvelle version de Pelican&lt;/h3&gt;
&lt;p&gt;Je peux maintenant procéder à l'installation de Pelican&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pelican
python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican[markdown]&amp;quot;&lt;/span&gt;
pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je lance le pelican-quickstart uniquement pour créer le squelette du site, je laisse les options par défaut. Je récupère mon ancien fichier de configuration pelican.conf pour écraser celui créer par pelican-quickstart&lt;/p&gt;
&lt;p&gt;Ce que j'ai trouvé extraordinaire avec Pelican, c'est que je n'ai quasiment pas eu besoin de modifier mon fichier de configuration pour pouvoir lancer la fabrication du site. Seul le module markdown a évolué, j'ai modifié les lignes concernant uniquement markdown dans le fichier.&lt;/p&gt;
&lt;p&gt;A titre d'exemple, mon fichier &lt;code&gt;pelicanconf.py&lt;/code&gt; :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;AUTHOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;letchap&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;letchap&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;du Linux, du Python, un peu de Mac&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://letchap.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Europe/Paris&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_METADATA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;downloads&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;ABSURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;letchap.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SIMPLE_SEARCH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://duckduckgo.com&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;MARKDOWN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extension_configs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.codehilite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.addcode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;output_format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;DISPLAY_PAGES_ON_MENU&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_CATEGORIES_ON_MENU&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fr&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;G-xxx&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/letchap/&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;atom.xml&amp;#39;&lt;/span&gt;



&lt;span class="c1"&gt;# Social&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mastodon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://mastodon.social/@letchap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/letchap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Pagination&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;SUMMARY_MAX_LENGTH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Paramètrage du thème&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;F6-theme&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Paramètrage de l&amp;#39;URL&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;}/{slug}/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;}/{slug}/index.html&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/pelicanconf.py" title="Télécharger pelicanconf.py"&gt;Télécharger pelicanconf.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dans le fichier conf, j'ai une petite ligne custom car j'ai créé une extension markdown personnelle qui me permet de récupérer le contenu d'un fichier script pour le mettre sous forme de bloc de code dans un article. Les explications sont &lt;a href="https://letchap.github.io/2014/04/05/mon-extension-markdown-pour-inclure-du-code-a-partir-dun-fichier/"&gt;dans cet article&lt;/a&gt; qui a été mis à jour pour l'occasion.&lt;/p&gt;
&lt;p&gt;.pipe(gulp.dest('static/css'))&lt;/p&gt;
&lt;h3&gt;Installer la nouvelle version 6 de foundation et adapter le thème du site&lt;/h3&gt;
&lt;p&gt;Alors là, ce fut le gros morceau. Tout a changé en 7 ans : l'installation, les composants, ... L'enfer.&lt;/p&gt;
&lt;h4&gt;L'installation&lt;/h4&gt;
&lt;p&gt;En clonant mon dépôt github, j'ai récupéré le thème Foundation dans sa version 5. Je vais installer la version 6 de foundation à coté, dans mon projet Pelican. J'ai choisi la version basic car je n'ai pas besoin de javascript Foundation, je n'utilise pas de composant le requérant. L'installation m'a semblé plus simple que dans la version 5, 3 petites lignes suffisent pour l'installation, la quatrième permet de visualiser les modifications en temps réel. J'ai installé Foundation dans un répertoire que j'ai appelé F6-theme.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/foundation/foundation-sites-template F6-theme
cd F6-theme
yarn install
yarn start # pour voir les modifications sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;J'en ai profité pour faire l'adaptation de la structure du répertoire Foundation à celle de Pelican (&lt;a href="https://letchap.github.io/2014/08/29/utiliser-foundation-et-sass-avec-pelican/"&gt;petit rappel ici&lt;/a&gt;) en modifiant le fichier gulpfile.js pour que le fichier app.css se crée dans un répertoire &lt;code&gt;static/css&lt;/code&gt; et non &lt;code&gt;css&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Les composants&lt;/h4&gt;
&lt;p&gt;Le plus gros changement concerne les composants de la version 6 de Foundation et il m'a fallu un bon moment pour adapter le site au format V5 en V6. Je vais faire un billet dédié sur les différents changements car il y en a beaucoup, en particulier, la gestion des grilles.&lt;/p&gt;
&lt;h3&gt;Le nouveau site Pelican&lt;/h3&gt;
&lt;p&gt;Une fois que tout est installé la structure de mon projet Pelican comprend :
* les articles au format markdown récupéré de mon dépôt github dans le dossier content
* un répertoire newpost qui me permet de créer automatique un squelette d'article
* un répertoire F6-theme qui contient mon nouveau thème Foundation
* un répertoire output qui va se créer en lançant la génération du site par un &lt;code&gt;make html&lt;/code&gt;
* un répertoire venv qui contient les sources Pelican et mon extension markdown pour insérer du code dans les articles&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="blog-pycharm" href="https://letchap.github.io/images/blog-pycharm.png" title="blog-pycharm"&gt;&lt;img alt="Ecran blog-pycharm" src="https://letchap.github.io/images/blog-pycharm.png" title="Ecran blog-pycharm"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Foundation"/><category term="Pycharm"/><category term="Github"/><category term="CMS"/></entry><entry><title>Monter un disque externe Freebox sur Linux</title><link href="https://letchap.github.io/2023/02/15/monter-un-disque-externe-freebox-sur-linux/" rel="alternate"/><published>2023-02-15T15:17:00+01:00</published><updated>2023-02-15T15:17:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2023-02-15:/2023/02/15/monter-un-disque-externe-freebox-sur-linux/</id><summary type="html">&lt;p&gt;Mon ordinateur a une capacité de stockage du disque dur très limitée. Pour sauvegarder des fichiers, je suis contraint de brancher un disque dur externe, et ce n'est pas très pratique pour un portable.&lt;/p&gt;
&lt;p&gt;Comme je possède une Freebox mini 4K, l'idée va être de brancher un disque externe sur …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mon ordinateur a une capacité de stockage du disque dur très limitée. Pour sauvegarder des fichiers, je suis contraint de brancher un disque dur externe, et ce n'est pas très pratique pour un portable.&lt;/p&gt;
&lt;p&gt;Comme je possède une Freebox mini 4K, l'idée va être de brancher un disque externe sur la box et de monter le disque sur le PC pour qu'il soit accessible tout le temps, comme un disque interne.&lt;/p&gt;
&lt;p&gt;La première étape consiste à brancher le disque externe sur la freebox et à le formater via l'interface de la freebox. La procédure est expliquée sur &lt;a href="https://assistance.free.fr/articles/freebox-os-formater-mon-disque-dur-ou-mon-peripherique-usb-807"&gt;le site de l'assistance de free&lt;/a&gt;. C'est important de ne pas manquer cette étape, car le disque va être renommé en 'Freebox', ce qui est important pour la suite.&lt;/p&gt;
&lt;p&gt;Pour la suite, tout est très bien expliqué sur &lt;a href="https://alexbacher.fr/unixlinux/acces-disque-freebox-ubuntu/"&gt;le site suivant&lt;/a&gt;. Je ne vais faire que paraphraser.&lt;/p&gt;
&lt;p&gt;Tout d'abord sur l'interface de la freebox, il est nécessaire de cocher les options de partage windows.&lt;/p&gt;
&lt;p&gt;&lt;img alt="interface Freebox" src="https://letchap.github.io/images/interface_freebox.png" title="Interface Freebox"&gt;&lt;/p&gt;
&lt;p&gt;Dans le terminal, on commence par installer le paquet &lt;code&gt;cifs&lt;/code&gt; qui va permettre de dialoguer avec le serveur freebox&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install cifs-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comme pour le tutoriel sur &lt;a href="https://letchap.github.io/2023/02/09/transferer-des-donnees-de-liphone-sur-ubuntu/"&gt;le montage de l'iPhone&lt;/a&gt;, on crée un point de montage pour la Freebox :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mkdir /media/Freebox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La partie maintenant qui me dérange le plus, il faut créer un fichier de credentials en clair sur le PC. Je pense qu'il doit y avoir une solution plus propre avec &lt;code&gt;pam_mount&lt;/code&gt; mais je n'ai pas encore trouvé la solution.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pluma /home/$USER/.smbcredentials
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dans le fichier nouvellement créé, on ajoute les éléments de login :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;username=freebox
password=XXXXXXX
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis, on donne les droits sur le fichier :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo chmod 777 /home/$USER/.smbcredentials
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enfin, pour que le disque monte à chaque redémarrage du PC, il faut ajouter la ligne suivante au fichier &lt;code&gt;fstab&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pluma /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et on ajoute les lignes suivantes :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;#&lt;/span&gt;mount freebox
//192.168.1.254/Freebox /media/Freebox cifs _netdev,rw,users,credentials=/home/VOTRE_UTILISATEUR/.smbcredentials,iocharset=utf8,uid=1000,sec=ntlmv2,file_mode=0777,dir_mode=0777,vers=2.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;C'est là qu'il est important d'avoir bien formaté le disque externe via l'interface Freebox, pour que le disque à monter s'appelle bien Freebox à l'adresse 192.168.1.254 (c'est adresse IP de la Freebox, elle peut varier en fonction des box, mais vous pouvez la retrouver dans l'interface / paramètre de la Freebox / mode réseau)&lt;/p&gt;</content><category term="Freebox"/><category term="Freebox"/><category term="Linux"/><category term="cifs"/></entry><entry><title>Transférer des données de l'iPhone sur Ubuntu</title><link href="https://letchap.github.io/2023/02/09/transferer-des-donnees-de-liphone-sur-ubuntu/" rel="alternate"/><published>2023-02-09T18:52:00+01:00</published><updated>2023-02-09T18:52:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2023-02-09:/2023/02/09/transferer-des-donnees-de-liphone-sur-ubuntu/</id><summary type="html">&lt;p&gt;Il est toujours compliqué de brancher un iPhone sur un ordinateur Linux. A chaque fois je me demande comment faire. Je me note donc la procédure une bonne fois pour toute.&lt;/p&gt;
&lt;p&gt;Tout d'abord vérifier que les packages suivants sont bien installés :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install libimobiledevice6 libimobiledevice-utils
sudo apt install ifuse …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Il est toujours compliqué de brancher un iPhone sur un ordinateur Linux. A chaque fois je me demande comment faire. Je me note donc la procédure une bonne fois pour toute.&lt;/p&gt;
&lt;p&gt;Tout d'abord vérifier que les packages suivants sont bien installés :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install libimobiledevice6 libimobiledevice-utils
sudo apt install ifuse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis créer un répertoire sur lequel monter l'iPhone :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mkdir /media/iPhone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Afin monter le téléphone :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ifuse /media/iPhone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;J'ai trouvé les informations sur &lt;a href="https://www.maketecheasier.com/easily-mount-your-iphone-as-an-external-drive-in-ubuntu/"&gt;ce lien&lt;/a&gt;&lt;/p&gt;</content><category term="Linux"/><category term="Linux"/><category term="Ubuntu"/><category term="iPhone"/></entry><entry><title>Récupérer la sauvegarde Time Machine sur Linux</title><link href="https://letchap.github.io/2023/02/08/recuperer-la-sauvegarde-time-machine-sur-linux/" rel="alternate"/><published>2023-02-08T20:27:00+01:00</published><updated>2023-02-08T20:27:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2023-02-08:/2023/02/08/recuperer-la-sauvegarde-time-machine-sur-linux/</id><summary type="html">&lt;p&gt;Mon iMac ayant rendu l'âme, j'ai besoin de récupérer certaines données sauvegardées sur Time Machine pour les utiliser sur mon ordinateur tournant sous Ubuntu&lt;/p&gt;
&lt;p&gt;J'ai trouvé un petit script qui fonctionne très bien à &lt;a href="https://gist.github.com/vjt/5183305"&gt;cette adresse&lt;/a&gt;. Le script date de 2014 mais il est toujours d'actualité. J'ai simplement ajouté une …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mon iMac ayant rendu l'âme, j'ai besoin de récupérer certaines données sauvegardées sur Time Machine pour les utiliser sur mon ordinateur tournant sous Ubuntu&lt;/p&gt;
&lt;p&gt;J'ai trouvé un petit script qui fonctionne très bien à &lt;a href="https://gist.github.com/vjt/5183305"&gt;cette adresse&lt;/a&gt;. Le script date de 2014 mais il est toujours d'actualité. J'ai simplement ajouté une petite modification pour que le programme continue même s'il rencontre une erreur avec un &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp&lt;span class="w"&gt; &lt;/span&gt;-van&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$entry&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$dest&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il suffit de lui passer en paramètre le répertoire Time Machine à récupérer (en général dans le répertoire "latest") et le répertoire de destination.&lt;/p&gt;
&lt;p&gt;Je mets à télécharger le script modifié.&lt;/p&gt;
&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/copy-from-time-machine.sh" title="copy-from-time-machine.sh"&gt;Télécharger copy-from-time-machine.sh&lt;/a&gt;&lt;/p&gt;</content><category term="Linux"/><category term="Linux"/><category term="Mac OS X"/><category term="Time Machine"/></entry><entry><title>Nouveau gestionnaire de commentaires</title><link href="https://letchap.github.io/2023/02/05/nouveau-gestionnaire-de-commentaires/" rel="alternate"/><published>2023-02-05T15:31:00+01:00</published><updated>2023-02-05T15:31:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2023-02-05:/2023/02/05/nouveau-gestionnaire-de-commentaires/</id><summary type="html">&lt;p&gt;Avec la remise en vie du site, je voulais réinstaller un service de commentaires. Je ne veux pas utiliser Disqus (et encore moins depuis qu'ils ont introduit de la publicité) et j'ai la flemme de réinstaller Isso.&lt;/p&gt;
&lt;p&gt;j'ai trouvé un petit utilitaire de commentaires, &lt;a href="https://cusdis.com/"&gt;cusdis&lt;/a&gt;, qu'il est possible d'herbéger soi-même …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Avec la remise en vie du site, je voulais réinstaller un service de commentaires. Je ne veux pas utiliser Disqus (et encore moins depuis qu'ils ont introduit de la publicité) et j'ai la flemme de réinstaller Isso.&lt;/p&gt;
&lt;p&gt;j'ai trouvé un petit utilitaire de commentaires, &lt;a href="https://cusdis.com/"&gt;cusdis&lt;/a&gt;, qu'il est possible d'herbéger soi-même, mais moi j'ai pris l'option facile dans un premier temps et pour aller vite. Il suffit de cliquer sur l'option hosted service, de créer un compte et de coller le code suivant dans sa page html.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cusdis_thread&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;data-host=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cusdis.com&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;data-app-id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;l&amp;#39;id fourni&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;data-page-id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;PAGE_ID&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;data-page-url=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;PAGE_URL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;data-page-title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;PAGE_TITLE&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;async&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;defer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cusdis.com/js/cusdis.es.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il y a un petit écran permettant de gérer les commentaires (approbation, rejet) et la possibilité de recevoir des alertes par mail.&lt;/p&gt;
&lt;p&gt;Ca prend 2 minutes chrono.&lt;/p&gt;
&lt;p&gt;C'est gratuit.&lt;/p&gt;
&lt;p&gt;Je n'ai besoin de rien de plus.&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="cusdis"/><category term="disqus"/></entry><entry><title>Le grand retour</title><link href="https://letchap.github.io/2023/02/04/le-grand-retour/" rel="alternate"/><published>2023-02-04T22:17:00+01:00</published><updated>2023-02-04T22:17:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2023-02-04:/2023/02/04/le-grand-retour/</id><summary type="html">&lt;p&gt;Presque huit années sans avoir écrit un seul article. Et puis l'envie est revenue, aidé par les circonstances. Le fait que mon iMac de 2010 rende l'âme a été le facteur déclenchant. &lt;/p&gt;
&lt;p&gt;Je n'avais plus que le PC UNOWHY Y13 de la région île de France sous la main (de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Presque huit années sans avoir écrit un seul article. Et puis l'envie est revenue, aidé par les circonstances. Le fait que mon iMac de 2010 rende l'âme a été le facteur déclenchant. &lt;/p&gt;
&lt;p&gt;Je n'avais plus que le PC UNOWHY Y13 de la région île de France sous la main (de mes enfants, mauvais père), pas l'envie de racheter un iMac à plus de 2 000 euros, la solution était toute trouvée : Virer Windows 10 du PC et installer une distribution Linux.&lt;/p&gt;
&lt;p&gt;Pour cela il faut connaître le code BIOS du PC, pour pouvoir booter sur une clé USB et installer un nouvel OS. Sur le PC 2019-2022, le code BIOS est connu. Vous pouvez le trouver sur le site &lt;a href="https://unocrack.cf" title="trouver le code BIOS du PC UNOWHY"&gt;unocrack.cf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Restait le choix de la distribution et du bureau Linux, choix que je n'ai jamais pu faire depuis 10 ans que j'utilise Linux. Comme ce PC est amené à être utilisé par toute la famille, il fallait quelque chose nécessitant peu d'intervention et léger pour la config. C'est donc un Ubuntu avec un bureau Mate. Et je dois dire après quelques semaines d'utilisation que j'en suis très content. Et le plus extraordinaire, c'est que cela a transformé le Y13 de PC poussif sous Windows 10 à bête de course&lt;/p&gt;
&lt;p&gt;Après 8 ans d'inactivité, il a fallu faire quelques mises à niveau, notamment du CMS que j'utilise, &lt;a href="https://getpelican.com/" title="Pelican CMS"&gt;Pelican&lt;/a&gt; et le framework &lt;a href="https://get.foundation/"&gt;Foundation&lt;/a&gt; pour l'habillage du blog.&lt;/p&gt;
&lt;p&gt;Je m'arrête là pour aujourd'hui, trop heureux de réécrire et vite publier un article. Mais je vais bientôt parler Foundation, Pelican, récupération des données Mac sur Linux, et gestion des photos&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Foundation"/></entry><entry><title>Déploiement automatique de Isso sur Openshift</title><link href="https://letchap.github.io/2015/05/19/deploiement-automatique-de-isso-sur-openshift/" rel="alternate"/><published>2015-05-19T19:46:00+02:00</published><updated>2015-05-19T19:46:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2015-05-19:/2015/05/19/deploiement-automatique-de-isso-sur-openshift/</id><summary type="html">&lt;p&gt;Je viens à peine de &lt;a href="https://letchap.github.io/2015/05/01/jai-dedisqusise-mon-pelican/"&gt;déployer le service de commentaire Isso à la mimine&lt;/a&gt; que, pouf, un nouveau dépôt vient de sortir pour installer en une ligne de commande Isso sur Openshift. Je ne l'ai pas testé (puisque je viens de me fader l'install à la main), mais par contre …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Je viens à peine de &lt;a href="https://letchap.github.io/2015/05/01/jai-dedisqusise-mon-pelican/"&gt;déployer le service de commentaire Isso à la mimine&lt;/a&gt; que, pouf, un nouveau dépôt vient de sortir pour installer en une ligne de commande Isso sur Openshift. Je ne l'ai pas testé (puisque je viens de me fader l'install à la main), mais par contre, c'est à essayer !!! &lt;a href="https://github.com/avinassh/isso-openshift" title="Isso sur Openshift"&gt;Et c'est à cette adresse&lt;/a&gt;&lt;/p&gt;</content><category term="Openshift"/><category term="Openshift"/><category term="Isso"/></entry><entry><title>J'ai dédisqusisé mon Pelican</title><link href="https://letchap.github.io/2015/05/01/jai-dedisqusise-mon-pelican/" rel="alternate"/><published>2015-05-01T16:19:00+02:00</published><updated>2015-05-01T16:19:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2015-05-01:/2015/05/01/jai-dedisqusise-mon-pelican/</id><summary type="html">&lt;p&gt;Deuxième étape dans la recherche de solutions libres autour de mon blog Pelican : remplacer le gestionnaire de commentaires Disquss par Isso.&lt;/p&gt;
&lt;p&gt;Isso est un gestionnaire de commentaires open source et écrit en Python. Autant dire qu'il est donc parfait. Pour plus d'information vous pouvez aller voir sur le &lt;a href="http://posativ.org/isso/" title="Isso"&gt;site d'Isso …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Deuxième étape dans la recherche de solutions libres autour de mon blog Pelican : remplacer le gestionnaire de commentaires Disquss par Isso.&lt;/p&gt;
&lt;p&gt;Isso est un gestionnaire de commentaires open source et écrit en Python. Autant dire qu'il est donc parfait. Pour plus d'information vous pouvez aller voir sur le &lt;a href="http://posativ.org/isso/" title="Isso"&gt;site d'Isso&lt;/a&gt; dès maintenant mais nous allons largement y revenir.&lt;/p&gt;
&lt;p&gt;Ma seule difficulté, comme d'habitude, est de ne pas avoir de serveur à la maison, donc, encore une fois, je vais utiliser openshift. Et là, contrairement à l'installation de piwik sur openshift qui se fait de manière très simple en 3 lignes de commandes grâce à la disponibilité d'un cartrigde piwik, pour Isso, il faut tout faire à la main.&lt;/p&gt;
&lt;h3&gt;J'ai commencé par tatonner&lt;/h3&gt;
&lt;p&gt;Sur le site de Isso, deux procédures d'installation sont décrites : une en utilisant &lt;code&gt;pip install&lt;/code&gt;, et une plus manuelle&lt;/p&gt;
&lt;p&gt;Ma première erreur fut de croire que Isso s'installe sur Openshift comme avec un simple &lt;code&gt;pip install&lt;/code&gt;. La procédure que je m'attendais à appliquer était :
    rhc app create isso python-3.3&lt;/p&gt;
&lt;p&gt;Je mets à jour les fichiers de paramétrage wsgi.py et isso.conf comme indiqué sur le site de Isso puis :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add.
git commit -m &amp;quot;isso my love&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et là, comme par miracle, j'aurais eu isso installé. Que nenni, il manque les fichiers javascript &lt;code&gt;embed.min.js&lt;/code&gt; et &lt;code&gt;count.min.js&lt;/code&gt; indispensables pour faire tourner le client.&lt;/p&gt;
&lt;p&gt;Pour s'en apercevoir, la commande super utile à consommer sans modération est :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rhc app tail -a isso
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;qui permet de lire les logs (en particulier d'erreur) de l'application sur Openshift. Et là, on a une belle erreur &lt;code&gt;400 fichier non trouvé&lt;/code&gt; sur le &lt;code&gt;GET embed.min.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Je n'ai pas compris pourquoi avec &lt;code&gt;pip install&lt;/code&gt; en local, j'ai bien la création de mes fichiers javascript mais pas en créant l'application sur Openshift, en attendant, passage au plan B, l'installation manuelle de Isso sur openshift.&lt;/p&gt;
&lt;h3&gt;La procédure garantie à 100% pour l'installation de Isso sur openshift est la suivante :&lt;/h3&gt;
&lt;p&gt;Je me suis largement inspiré du dépôt &lt;a href="https://github.com/commentedit/commented.it/wiki/How-to-install-on-OpenShift" title="Commentedit"&gt;commentedit&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Je crée une application Isso sur Openshift&lt;/h4&gt;
&lt;p&gt;Dans une fenêtre du terminal, j'entre la commande suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rhc app create isso python-3.3 --from-code https://github.com/posativ/isso.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Je paramètre mon application&lt;/h4&gt;
&lt;p&gt;Je me place dans le répertoire de mon application nouvellement créée :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd isso
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Première chose à faire, récupérer l'UUID de mon application, grâce à la commande &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;rhc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;isso&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je crée un répertoire share et un fichier de configuration &lt;code&gt;/share/isso.conf&lt;/code&gt; avec le contenu suivant :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[general]&lt;/span&gt;
&lt;span class="na"&gt;dbpath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/var/lib/openshift/UUID/app-root/data/comment.db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://letchap.github.io&lt;/span&gt;
&lt;span class="na"&gt;max-age&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;15m&lt;/span&gt;
&lt;span class="na"&gt;notify&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;smtp&lt;/span&gt;
&lt;span class="na"&gt;log-file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="k"&gt;[moderation]&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;purge-after&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;30d&lt;/span&gt;

&lt;span class="k"&gt;[server]&lt;/span&gt;
&lt;span class="na"&gt;listen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://localhost:8080&lt;/span&gt;
&lt;span class="na"&gt;reload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;off&lt;/span&gt;
&lt;span class="na"&gt;profile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;off&lt;/span&gt;

&lt;span class="k"&gt;[smtp]&lt;/span&gt;
&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;$username&lt;/span&gt;
&lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;$password&lt;/span&gt;
&lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;smtp.gmx.com&lt;/span&gt;
&lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;25&lt;/span&gt;
&lt;span class="na"&gt;security&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;starttls&lt;/span&gt;
&lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;$mail&lt;/span&gt;
&lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;$mail&lt;/span&gt;
&lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;10&lt;/span&gt;

&lt;span class="k"&gt;[guard]&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;ratelimit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;2&lt;/span&gt;
&lt;span class="na"&gt;direct-reply&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;3&lt;/span&gt;
&lt;span class="na"&gt;reply-to-self&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;false&lt;/span&gt;

&lt;span class="k"&gt;[markup]&lt;/span&gt;
&lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;strikethrough, autolink, fenced_code, no_intra_emphasis&lt;/span&gt;
&lt;span class="na"&gt;allowed-elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="na"&gt;allowed-attributes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="k"&gt;[hash]&lt;/span&gt;
&lt;span class="na"&gt;salt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Eech7co8Ohloopo9Ol6baimi&lt;/span&gt;
&lt;span class="na"&gt;algorithm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;pbkdf2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il est important de tout renseigner, sinon il y aura des problèmes de lecture de fichier.&lt;/p&gt;
&lt;p&gt;Puis je crée un fichier wsgi.py avec le contenu suivant :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;site&lt;/span&gt;
&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addsitedir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPENSHIFT_PYTHON_DIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/virtenv/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;isso&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;make_app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPENSHIFT_REPO_DIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/share/isso.conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Enfin je supprime ces quelques lignes dans .gitignore puisque je vais créer les fichiers manuellement et les pousser sur openshift :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/isso/js/embed.min.js
/isso/js/embed.dev.js
/isso/js/count.min.js
/isso/js/count.dev.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Je créé mes fichiers javascript&lt;/h4&gt;
&lt;p&gt;Il faut créer les fichiers javascript &lt;code&gt;embed.min.js&lt;/code&gt; et &lt;code&gt;count.min.js&lt;/code&gt; manuellement avec la commande suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make init &amp;amp;&amp;amp;
make js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En ayant préalablement installer requirejs et uglyfyjs.&lt;/p&gt;
&lt;h4&gt;Ne reste plus qu'à pousser&lt;/h4&gt;
&lt;p&gt;Il ne reste plus qu'à pousser le tout sur openshift &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add .
git commit -m &amp;quot;Et c&amp;#39;est parti...&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Et le client ...&lt;/h3&gt;
&lt;p&gt;Sur le client, il suffit d'ajouter ces quelques lignes &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;data-isso=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://commentedit-YOUR_DOMAIN.rhcloud.com/&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://isso-letchap.rhcloud.com/js/embed.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;isso-thread&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;L'import des données Disqus&lt;/h3&gt;
&lt;p&gt;La dernière étape est d'importer les commentaires de Disqus. Pour cela, il faut d'abord aller sur le site de Disqus et exporter les commentaires.&lt;/p&gt;
&lt;p&gt;Après, je l'ai fait un peu brutal. Je me suis connecté en ssh sur openshift par un &lt;code&gt;rhc ssh isso&lt;/code&gt; et j'ai créé un fichier disqus.xml dans le répertoire &lt;code&gt;app-root/data&lt;/code&gt; et j'ai collé le contenu de mon fichier d'export.&lt;/p&gt;
&lt;p&gt;Puis j'ai lancé la commande :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;isso&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;isso&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disqus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et voilà, c'est fini. Ne reste plus qu'à supprimer son compte Disqus.&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Isso"/><category term="Disqus"/><category term="Openshift"/></entry><entry><title>Petite blague suite à la clean install Yosemite</title><link href="https://letchap.github.io/2015/03/21/petite-blague-suite-a-la-clean-install-yosemite/" rel="alternate"/><published>2015-03-21T11:32:00+01:00</published><updated>2015-03-21T11:32:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2015-03-21:/2015/03/21/petite-blague-suite-a-la-clean-install-yosemite/</id><summary type="html">&lt;p&gt;Après une clean install de Yosemite sur mon iMac mi-2010, j'ai rencontré un problème de consommation excessive de CPU par le programme "Distributeur des actions de dossier".&lt;/p&gt;
&lt;p&gt;La solution de contournenment pour retrouver un ordinateur qui fonctionne normalement est de décocher l'utilisation des actions de dossiers :&lt;/p&gt;
&lt;p&gt;Dans le finder faire …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Après une clean install de Yosemite sur mon iMac mi-2010, j'ai rencontré un problème de consommation excessive de CPU par le programme "Distributeur des actions de dossier".&lt;/p&gt;
&lt;p&gt;La solution de contournenment pour retrouver un ordinateur qui fonctionne normalement est de décocher l'utilisation des actions de dossiers :&lt;/p&gt;
&lt;p&gt;Dans le finder faire un clic droit sur un dossier, n'importe lequel.&lt;/p&gt;
&lt;p&gt;&lt;img alt="clic droit dossier" src="https://letchap.github.io/images/blagueyosemite/clicdroit.png"&gt;&lt;/p&gt;
&lt;p&gt;Puis aller dans service et cliquer sur "configuration des actions de dossier"&lt;/p&gt;
&lt;p&gt;&lt;img alt="service" src="https://letchap.github.io/images/blagueyosemite/service.png"&gt;&lt;/p&gt;
&lt;p&gt;Enfin décocher la case "Activer les actions de ce dossier"&lt;/p&gt;
&lt;p&gt;&lt;img alt="désactiver" src="https://letchap.github.io/images/blagueyosemite/desactiver.png"&gt;&lt;/p&gt;
&lt;p&gt;Il ne reste plus qu'à redémarrer.&lt;/p&gt;
&lt;p&gt;Mais l'intérêt est aussi de savoir pourquoi ce processus s'emballe. Je me note deux petites actions que j'ai faite sans bien être sûr de leur efficacité, néanmoins, ça a l'air de fonctionner :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mettre à jour les caches partagés dyld (avec Onyx par exemple dans l'onglet automation)&lt;/li&gt;
&lt;li&gt;supprimer les fichiers .scpt inutilisés. A la suppression des certaines applications, je me suis aperçu que des fichiers applescript de ces applications n'étaient pas supprimés. Dans le terminal, un petit &lt;code&gt;locate *.scpt&lt;/code&gt; fera l'affaire, puis &lt;code&gt;rm -rf /path/to/fichier.scpt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Mac OS X"/><category term="Yosemite"/><category term="clean install"/><category term="action de dossier"/><category term="CPU"/></entry><entry><title>Installer Archlinux avec XFCE</title><link href="https://letchap.github.io/2015/03/11/installer-archlinux-avec-xfce/" rel="alternate"/><published>2015-03-11T19:30:00+01:00</published><updated>2015-03-11T19:30:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2015-03-11:/2015/03/11/installer-archlinux-avec-xfce/</id><summary type="html">&lt;p&gt;L'annonce de l'arrêt de Crunchbang, une distribution basée sur Debian et Openbox, ma distribution par défaut, m'a fait prendre conscience que j'avais tout intérêt à me monter tout seul la distribution qui me convient, avec une solution pérenne.&lt;/p&gt;
&lt;p&gt;A partir de ce moment, je bute sur l'éternelle question : Que choisir …&lt;/p&gt;</summary><content type="html">&lt;p&gt;L'annonce de l'arrêt de Crunchbang, une distribution basée sur Debian et Openbox, ma distribution par défaut, m'a fait prendre conscience que j'avais tout intérêt à me monter tout seul la distribution qui me convient, avec une solution pérenne.&lt;/p&gt;
&lt;p&gt;A partir de ce moment, je bute sur l'éternelle question : Que choisir ?&lt;/p&gt;
&lt;p&gt;J'ai besoin d'une distribution légère, récente, pérenne. Je veux pouvoir installer uniquement ce dont j'ai besoin. &lt;/p&gt;
&lt;p&gt;J'ai refait un énième tour des disributions existantes, et j'ai choisi par élimination :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Récente : je vais quitter un peu Debian qui a des cycles de livraison très espacés&lt;/li&gt;
&lt;li&gt;Pérenne : une distribution majeure : Debian, Fedora, OpenSUSE, Ubuntu, ...&lt;/li&gt;
&lt;li&gt;Une distribution légère : exit Mageia, Linux Mint, Centos, Ubuntu, Fedora, ...&lt;/li&gt;
&lt;li&gt;Un bureau léger : XFCE ou LXDE ou Openbox&lt;/li&gt;
&lt;li&gt;Joli : avec XFCE, j'ai un bureau uniforme avec des applications par défaut adaptés à l'environnement graphique de XFCE, pas besoin de me battre avec les différentes version de GTK ou QT. Et personnalisable à l'envie.&lt;/li&gt;
&lt;li&gt;Pas d'installation par défaut : Archlinux ou Gentoo pour pouvoir choisir et installer exactement ce dont j'ai besoin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ce sera donc une Archlinux avec un bureau XFCE.&lt;/p&gt;
&lt;p&gt;Archlinux, c'est quand même plus pour les barbus. Mais avec un peu de patience et de longueur de temps, rien n'est impossible. &lt;a href="https://wiki.archilinux.fr/Installation" title="Installation Archlinux en français"&gt;La documentation d'installation en français est très bien faite&lt;/a&gt;, il ne manque que très peu d'information pour y arriver même sans tout comprendre. Un minimum de connaissance de la ligne de commande est nécessaire malgré tout.&lt;/p&gt;
&lt;p&gt;Je ne vais donc pas paraphraser ce qui est dans le guide d'installation qui est parfait, je vais simplement noter les quelques points sur lesquels j'ai butés et compléter avec l'installation sur virtualbox et avec le bureau xfce car le guide d'installation s'arrête juste avant l'installation du bureau.&lt;/p&gt;
&lt;h3&gt;Trucs et astuces pendant l'installation&lt;/h3&gt;
&lt;h4&gt;Partitionnement&lt;/h4&gt;
&lt;p&gt;Personnellement j'ai utilisé fdisk.&lt;/p&gt;
&lt;p&gt;Il suffit d'un petit &lt;code&gt;fdisk /dev/sda&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Puis créer les nouvelles partitions avec la commande &lt;code&gt;n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Laisser les choix par défaut et ne renseigner que la taille des partitions&lt;/p&gt;
&lt;p&gt;Sauvegarder avec la commande &lt;code&gt;w&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Amorçage&lt;/h4&gt;
&lt;p&gt;J'ai utilisé GRUB, simplement parce que je le connais alors que je ne connais pas syslinux.&lt;/p&gt;
&lt;h4&gt;SOS installation&lt;/h4&gt;
&lt;p&gt;Une faute de frappe est si vite arrivée, en cas problème sur le système que vous venez de construire, il est toujours possible de redémarrer sur l'iso puis de monter la partition contenant le système et de "chrooter" dessus.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mount /dev/sda3 /mnt
arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A partir de là, vous pouvez corriger les petites erreurs sans être obligé de tout reconstruire.&lt;/p&gt;
&lt;p&gt;A la fin de la procédure d'installation, vous avez Archlinux installé avec un compte root et un utilisateur, sans environnement graphique. Il est temps d'installer xfce.&lt;/p&gt;
&lt;h3&gt;Installation de l'environnement graphique&lt;/h3&gt;
&lt;p&gt;Au redémarrage, nous allons nous connecter en root pour les installations suivantes&lt;/p&gt;
&lt;h4&gt;Réseau&lt;/h4&gt;
&lt;p&gt;A la fin de la procédure d'installation, après le démarrage, il ne faut pas oublier de démarrer le service dhcpcd pour avoir accès au réseau.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl enable dhcpcd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Virtualbox&lt;/h4&gt;
&lt;p&gt;En toute logique, la première étape avant l'installation de Xfce, c'est d'installer le système graphique Xorg. Mais là, je vais utiliser une voie un peu détournée, je vais directement installer les additions invité de virtualbox qui embarque le serveur xorg. Il ne va prendre que les éléments dont il a besoin, sans installer tous les drivers video. De plus, pas besoin de monter l'iso des additions invité, cela se fait par l'installation de paquets. Vraiment hyper pratique&lt;/p&gt;
&lt;p&gt;Avec un simple :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacman -S virtualbox-guest-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;j'aurais mon serveur Xorg, mesa, virtualbox-guest-modules, etc...&lt;/p&gt;
&lt;p&gt;J'ai buté par contre sur plusieurs petit trucs bêtes pour le partage de répertoire avec le host :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;il faut créer un répertoire /media qui n'existe pas à l'installation de Archlinux. C'est là que par défaut est monté le répertoire partagé&lt;/li&gt;
&lt;li&gt;pour un montage automatique, il faut démarrer le service virtualboxclient par un &lt;code&gt;systemctl enable virtualboxclient&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour le reste, il suffit de suivre &lt;a href="https://wiki.archlinux.org/index.php/VirtualBox 'Wiki Archlinux sur VirtualBox en anglais"&gt;le wiki d'Archlinux sur virtualbox&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Xfce&lt;/h4&gt;
&lt;p&gt;Le plus facile, installer xfce :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacman -S xfce4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;puis pour le démarrer :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;startxfce4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Un peu de confort&lt;/h3&gt;
&lt;h4&gt;slim&lt;/h4&gt;
&lt;p&gt;J'ai installé un petit gestionnaire de démarrage pour lancer xfce tout seul. J'ai choisi slim, là encore parce que je le connais.&lt;/p&gt;
&lt;p&gt;Pour l'installer : &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacman -S slim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comme j'ai crée mon utilisateur avant d'installer xorg-init, je dois d'abord copier le fichier .xinitrc sur mon répertoire&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp {/ect/skel,~/}.xinitrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ensuite, penser à décommenter la ligne dans $HOME/.xinitrc &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;startxfce4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour un login automatique, aller dans le fichier &lt;code&gt;/etc/slim.conf&lt;/code&gt; et décommenter la ligne &lt;code&gt;auto_login&lt;/code&gt; en remplaçant &lt;code&gt;no&lt;/code&gt;par &lt;code&gt;yes&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;sudo&lt;/h4&gt;
&lt;p&gt;La commande sudo devient vite indispensable quand vous êtes connectés avec votre compte et que vous voulez installer des paquets.&lt;/p&gt;
&lt;p&gt;Elle s'installe tout simplement avec :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacman -S sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis, il convient d'aller dans le fichier &lt;code&gt;/etc/sudoers&lt;/code&gt; et d'ajouter la ligne suivante.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;monuser ALL=(ALL) ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vous pouvez aussi installer gksu, très pratique si vous voulez lancer thunar en root.&lt;/p&gt;</content><category term="Archlinux"/><category term="Archlinux"/><category term="XFCE"/><category term="Virtualbox"/></entry><entry><title>J'arrive pas à me décider</title><link href="https://letchap.github.io/2015/03/10/jarrive-pas-a-me-decider/" rel="alternate"/><published>2015-03-10T22:16:00+01:00</published><updated>2015-03-10T22:16:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2015-03-10:/2015/03/10/jarrive-pas-a-me-decider/</id><summary type="html">&lt;p&gt;Le papa de ma distribution préférée vient d'annoncer la fin de l'aventure Crunchbang. Me voilà donc à la recherche d'une solution de remplacement.&lt;/p&gt;
&lt;p&gt;C'est trop facile, il y a tellement de choix...&lt;/p&gt;
&lt;p&gt;Cette fois, j'arrête la bidouille, je me prends une distribution clé en main. Hop, va pour Ubuntu. En …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Le papa de ma distribution préférée vient d'annoncer la fin de l'aventure Crunchbang. Me voilà donc à la recherche d'une solution de remplacement.&lt;/p&gt;
&lt;p&gt;C'est trop facile, il y a tellement de choix...&lt;/p&gt;
&lt;p&gt;Cette fois, j'arrête la bidouille, je me prends une distribution clé en main. Hop, va pour Ubuntu. En fait non, je n'aime pas le bureau Unity. Ce sera plutôt Mageia. C'est sympa, mais vraiment trop clé en main, il faut que je puisse bidouiller un minimum quand même.&lt;/p&gt;
&lt;p&gt;Revenons aux basiques, une Debian minimale avec Openbox, comme Crunchbang. Mais si c'est pour mettre du Gnome dedans pour avoir un bureau un peu joli... Qu'à cela ne tienne, une Debian minimale avec XFCE alors. Oui mais bon, attendre plusieurs années pour avoir la dernière version de XFCE, c'est long.&lt;/p&gt;
&lt;p&gt;Je vais plutôt choisir une rolling release. Je me monte une Archinux avec la toute dernière version XFCE. Enfin, faut voir, une rolling release, ça reste un peu moins stable.&lt;/p&gt;
&lt;p&gt;J'ai trouvé, un dérivé d'Ubuntu pour être sur les dernières versions et un joli bureau. ElementaryOS par exemple, c'est joli.&lt;/p&gt;
&lt;p&gt;Non, mais en fait, j'ai aussi besoin de quelquechose de léger, plutôt Wattos ou LXDE.&lt;/p&gt;
&lt;p&gt;J'ai dit qu'il fallait que je reste sur une distribution majeure pour la pérennité. Ubuntu alors. Ah mais non, j'avais dit pas Unity ...&lt;/p&gt;
&lt;p&gt;C'est trop dur, il y a tellement de choix...&lt;/p&gt;</content><category term="Linux"/><category term="Ubuntu"/><category term="Archlinux"/><category term="Debian"/><category term="XFCE"/><category term="Openbox"/><category term="Unity"/><category term="LXDE"/><category term="Mageia"/></entry><entry><title>J'ai dégooglisé mon Pelican</title><link href="https://letchap.github.io/2014/12/29/jai-degooglise-mon-pelican/" rel="alternate"/><published>2014-12-29T21:41:00+01:00</published><updated>2014-12-29T21:41:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-12-29:/2014/12/29/jai-degooglise-mon-pelican/</id><summary type="html">&lt;p&gt;Mon blog Pelican est libre, mais il cache des solutions propriétaires :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;il est hébergé par Github&lt;/li&gt;
&lt;li&gt;il gère les commentaires avec Disqus&lt;/li&gt;
&lt;li&gt;le trafic est analysé par Google analytics&lt;/li&gt;
&lt;li&gt;il utilise google search pour les recherches sur le site&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Je vais dans cet article me concentrer sur la dégooglisation, à …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mon blog Pelican est libre, mais il cache des solutions propriétaires :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;il est hébergé par Github&lt;/li&gt;
&lt;li&gt;il gère les commentaires avec Disqus&lt;/li&gt;
&lt;li&gt;le trafic est analysé par Google analytics&lt;/li&gt;
&lt;li&gt;il utilise google search pour les recherches sur le site&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Je vais dans cet article me concentrer sur la dégooglisation, à savoir, remplacer Google analytics et Google search.&lt;/p&gt;
&lt;h3&gt;J'ai remplacé Google analytics par Piwik&lt;/h3&gt;
&lt;p&gt;Pendant longtemps j'ai buté sur le fait que je ne suis pas auto-hébergé et donc, difficile de monter des solutions libres dans ce cas. Et puis j'ai découvert Openshift de Red Hat. Cela me permet d'avoir une infrastructure cloud sous licence libre (Apache licence 2.0) sur laquelle je peux installer jusqu'à trois applications gratuitement.&lt;/p&gt;
&lt;p&gt;La plateforme va me permettre dans un premier temps d'héberger ma solution d'analyse de trafic, puis de commentaires, et finalement mon site.&lt;/p&gt;
&lt;p&gt;Chaque chose en son temps, je commence par l'analyse de trafic et le remplacement de google analytics. La solution sera Piwik. Piwik est un outil d'analyse de trafic web opensource (licence GPL v3). Pour plus d'information sur Piwik, vous pouvez vous rendre sur leur site &lt;a href="http://fr.piwik.org" title="Piwik"&gt;à cette adresse&lt;/a&gt;. La seule contrainte de Piwik est de posséder son propre serveur, ou d'en utiliser un. Pour moi, ce sera donc le Pass (Plateform as a service) d'Openshift.&lt;/p&gt;
&lt;h4&gt;Créer un compte Openshift et installer Piwik&lt;/h4&gt;
&lt;p&gt;Le tutoriel est &lt;a href="https://github.com/openshift/piwik-openshift-quickstart" title="Piwik Openshift Quickstart"&gt;à cette adresse&lt;/a&gt;. Je ne peux pas mieux expliquer, donc, le plus simple, c'est de suivre le lien.&lt;/p&gt;
&lt;p&gt;Quelques petits conseils néanmoins :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Il faut vérifier que la bonne version de Ruby est bien installée&lt;/li&gt;
&lt;li&gt;L'installation se fait par le terminal, pas par le site openshift&lt;/li&gt;
&lt;li&gt;Il faut bien vérifier l'échange de clé ssh. Si vous avez déjà utilisé git, le concept ne doit pas poser de problème.&lt;/li&gt;
&lt;li&gt;Une fois Piwik installé, penser à configurer votre site&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Remplacer Google analytics par Piwik dans Pelican&lt;/h4&gt;
&lt;p&gt;Pour installer piwik, il suffit d'installer ce script à la place du script de google analytics.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;_paq&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;_paq&lt;span class="w"&gt; &lt;/span&gt;||&lt;span class="w"&gt; &lt;/span&gt;[];
&lt;span class="w"&gt;  &lt;/span&gt;_paq.push([&amp;#39;trackPageView&amp;#39;]);
&lt;span class="w"&gt;  &lt;/span&gt;_paq.push([&amp;#39;enableLinkTracking&amp;#39;]);
&lt;span class="w"&gt;  &lt;/span&gt;(function()&lt;span class="w"&gt; &lt;/span&gt;{
&lt;span class="w"&gt;    &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;u=&amp;quot;//piwik-letchap.rhcloud.com/&amp;quot;;
&lt;span class="w"&gt;    &lt;/span&gt;_paq.push([&amp;#39;setTrackerUrl&amp;#39;,&lt;span class="w"&gt; &lt;/span&gt;u+&amp;#39;piwik.php&amp;#39;]);
&lt;span class="w"&gt;    &lt;/span&gt;_paq.push([&amp;#39;setSiteId&amp;#39;,&lt;span class="w"&gt; &lt;/span&gt;1]);
&lt;span class="w"&gt;    &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;d=document,&lt;span class="w"&gt; &lt;/span&gt;g=d.createElement(&amp;#39;script&amp;#39;),&lt;span class="w"&gt; &lt;/span&gt;s=d.getElementsByTagName(&amp;#39;script&amp;#39;)[0];
&lt;span class="w"&gt;    &lt;/span&gt;g.type=&amp;#39;text/javascript&amp;#39;;&lt;span class="w"&gt; &lt;/span&gt;g.async=true;&lt;span class="w"&gt; &lt;/span&gt;g.defer=true;&lt;span class="w"&gt; &lt;/span&gt;g.src=u+&amp;#39;piwik.js&amp;#39;;&lt;span class="w"&gt; &lt;/span&gt;s.parentNode.insertBefore(g,s);
&lt;span class="w"&gt;  &lt;/span&gt;})();
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;noscript&amp;gt;&amp;lt;p&amp;gt;&amp;lt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//piwik-letchap.rhcloud.com/piwik.php?idsite=1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;border:0;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Je suis complétement dégooglisé&lt;/h3&gt;
&lt;p&gt;Pour finir, j'avais un formulaire de recherche sur le site qui utilisait google :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;navbar-form navbar-right&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://google.com/search&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;fieldset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;q&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site:letchap.github.io&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;form-control col-lg-8&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;q&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;results=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Search&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;J'ai remplacé google par Duckduckgo, ce qui se traduit dans le formulaire par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://duckduckgo.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;row collapse&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;large-9 small-10 columns&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;q&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;results=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Search&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sites&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;letchap.github.io&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Au prochaine épisode, nous essaierons de nous passer de Disqus.&lt;/p&gt;</content><category term="Pelican"/><category term="degooglisons"/><category term="piwik"/><category term="openshift"/><category term="duckduckgo"/></entry><entry><title>Utilisation de Sass avec Pelican et Foundation</title><link href="https://letchap.github.io/2014/11/29/utilisation-de-sass-avec-pelican-et-foundation/" rel="alternate"/><published>2014-11-29T15:27:00+01:00</published><updated>2014-11-29T15:27:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-11-29:/2014/11/29/utilisation-de-sass-avec-pelican-et-foundation/</id><summary type="html">&lt;p&gt;Dans le dernier billet, nous avons vu comment nous mettre à l’aise avec Pelican et Foundation tout en nous préparant à utiliser Sass. Nous allons tirer profit de tout cela pour simplifier le fichier de configuration css personnel attaché au site.&lt;/p&gt;
&lt;p&gt;Pour rappel, voici le fichier d’origine :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;/* Fichier …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Dans le dernier billet, nous avons vu comment nous mettre à l’aise avec Pelican et Foundation tout en nous préparant à utiliser Sass. Nous allons tirer profit de tout cela pour simplifier le fichier de configuration css personnel attaché au site.&lt;/p&gt;
&lt;p&gt;Pour rappel, voici le fichier d’origine :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;/* Fichier de personalisation de foundation 5&lt;/span&gt;
&lt;span class="c"&gt;   par letchap&lt;/span&gt;
&lt;span class="c"&gt;   */&lt;/span&gt;

&lt;span class="c"&gt;/* Gestion de la barre de recherche */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;top-bar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.35&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.35&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.75&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Gestion d&amp;#39;un bandeau sous la topbar */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;myheader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;myheader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#074e68&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Gestion des blocs de code */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;linenodiv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#f2f2f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;codehilitetable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;table-layout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;vertical-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;linenos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;code&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Monaco&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Menlo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Consolas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Courier New&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#f2f2f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.25&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#333333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;word-break&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;break-all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#f2f2f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c"&gt;/* Gestion des images pour les diaporamas */&lt;/span&gt;
&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;

&lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c"&gt;/* Gestion de la taille des icones */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-14&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.4&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-18&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-21&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.4&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-36&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.6&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-48&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;4.8&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-60&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;6.0&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;size-72&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;7.2&lt;/span&gt;&lt;span class="kt"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Un peu de nettoyage&lt;/h3&gt;
&lt;p&gt;Première étape, avec la nouvelle version de Foundation, plus besoin de bidouille pour la barre de recherche dans la top-bar. Nous pouvons supprimer le code css dans la feuille de style&lt;/p&gt;
&lt;p&gt;Deuxième étape : l’utilisation de pygments et de l’extension markdown. Je n’avais rien compris et j’avais monté une usine à gaz pour essayer d’avoir un tableau avec deux colonnes de largeur fixe et un texte qui pouvait déborder horizontalement en essayant de jouer avec la valeur witdh. Alors je ne sais pas si c’est la lib markdown de python et celle de pygments qui gère la table, mais dans tous les cas, il n’y a rien à faire pour gérer la largeur de la table de deux colonnes. Exit la bidouille sur la table.&lt;/p&gt;
&lt;p&gt;Dernière étape : j’ai supprimé aussi la petite verrue .include que j’utilisais avec le plugin include que j’ai remplacé par ma propre extension markdown pour gérer les inclusions de code à partir d'un fichier.&lt;/p&gt;
&lt;p&gt;Nous voilà avec un fichier un peu plus propre. Passons à Sass.&lt;/p&gt;
&lt;h3&gt;Configuration avec Sass&lt;/h3&gt;
&lt;p&gt;Bon, passés tous ces préliminaires, attaquons l’utilisation de Sass proprement dite. Pour cela nous alors avoir besoin du fichier _setting.scss et de notre feuille perso _style.scss&lt;/p&gt;
&lt;p&gt;Sass est très puissant, cependant, dans un premier temps, je ne vais utiliser que les possibilités offertes par les variables. Je définis une variable dans mon fichier _settings.scss et je l’utilise dans le fichier _style.scss.&lt;/p&gt;
&lt;p&gt;Pour illustrer cela, prenons comme exemple la police de caractère des lignes de code.&lt;/p&gt;
&lt;p&gt;Je vais commencer par définir dans _settings.sccs les polices de caractère que je souhaite utiliser sur l'ensemble du site. Pour cela, je copie la ligne &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// $code-font-family: Consolas, &amp;#39;Liberation Mono&amp;#39;, Courier, monospace;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je supprime la mise en commentaire et je mets définis les polices que je veux :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;code-font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Source Code Pro&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;monospace&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;Consolas&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il est important de dupliquer la ligne plutôt que de la modifier directement, afin de pouvoir retrouver facilement le paramétrage d'origine&lt;/p&gt;
&lt;p&gt;Maintenant que j'ai défini ma police de caractère pour les blocs de code dans la variable $code-font-family, je vais pouvoir la réutiliser dans _style.scss pour définir le tag &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;code-font-family&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le fichier après passage à la moulinette sass ressemblera alors à ça :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;normalement&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;je&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;en ai pas besoin*/&lt;/span&gt;

&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Fichier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;personalisation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foundation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;letchap&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;

&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Gestion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;un bandeau sous la topbar */&lt;/span&gt;

&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;myheader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;myheader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#074e68;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Gestion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blocs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;


&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;kevinyap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;styling&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;using&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;/*/&lt;/span&gt;


&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;codehilitetable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#fdf6e3;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linenos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;secondary&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;codehilite&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;white&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;secondary&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.3&lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;white&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Gestion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pour&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;les&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;diaporamas&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;

&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Gestion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;la&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;taille&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;icones&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;

&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Plus concis quand même.&lt;/p&gt;
&lt;h3&gt;rem-calc&lt;/h3&gt;
&lt;p&gt;Petit détour sur la fonction rem-calc que l'on retrouve un peu partout dans foundation. Elle permet de ramener une valeur relative à une valeur en px :&lt;/p&gt;
&lt;p&gt;Foundation définit une taille de police de base de 16px&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// This is the default html and body font-size for the base rem value.&lt;/span&gt;
&lt;span class="c1"&gt;// $rem-base: 16px;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Quand je vais écrire font-size = 1rem, ma valeur sera de 16px, pour avoir une taille de 14px par exemple je devrais écrire font-size= 0.875rem. Pas super pratique. Pour éviter de s’embêter avec ça, on va faire comme si on écrivait directement la taille en px avec font-size=rem-calc(14), ce qui veut dire font-size=14px. Vous allez me dire, pourquoi ne pas écrire directement font-size=14px. Tout simplement car si on veut changer la taille de police de base, on n'aura à le faire qu'une seule fois. Petit extrait de _settings.scss:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Since the typical default browser font-size is 16px, that makes the calculation for grid size.&lt;/span&gt;
&lt;span class="c1"&gt;// If you want your base font-size to be different and not have it affect the grid breakpoints,&lt;/span&gt;
&lt;span class="c1"&gt;// set $rem-base to $base-font-size and make sure $base-font-size is a px value.&lt;/span&gt;
&lt;span class="c1"&gt;// $base-font-size: 100%;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hyper pratique !&lt;/p&gt;</content><category term="Foundation"/><category term="Foundation"/><category term="Sass"/><category term="Pelican"/></entry><entry><title>Utiliser Foundation et Sass avec Pelican</title><link href="https://letchap.github.io/2014/08/29/utiliser-foundation-et-sass-avec-pelican/" rel="alternate"/><published>2014-08-29T21:38:00+02:00</published><updated>2014-08-29T21:38:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-08-29:/2014/08/29/utiliser-foundation-et-sass-avec-pelican/</id><summary type="html">&lt;p&gt;Lorsque j'ai créé le site avec Pelican, j'ai cherché un framework responsive et le premier sur lequel je suis tombé sans trop chercher fut &lt;a href="http://getbootstrap.com" title="Bootstrap"&gt;Bootstrap&lt;/a&gt;. En testant le CMS &lt;a href="https://gitorious.org/get_microbe" title="Get Microbe"&gt;Microbe&lt;/a&gt;, j'ai découvert un nouveau framework : &lt;a href="http://foundation.zurb.com" title="Foundation"&gt;Foundation&lt;/a&gt;. Voyant du Bootstrap partout, je me suis décidé à passer sur Foundation. En terme …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lorsque j'ai créé le site avec Pelican, j'ai cherché un framework responsive et le premier sur lequel je suis tombé sans trop chercher fut &lt;a href="http://getbootstrap.com" title="Bootstrap"&gt;Bootstrap&lt;/a&gt;. En testant le CMS &lt;a href="https://gitorious.org/get_microbe" title="Get Microbe"&gt;Microbe&lt;/a&gt;, j'ai découvert un nouveau framework : &lt;a href="http://foundation.zurb.com" title="Foundation"&gt;Foundation&lt;/a&gt;. Voyant du Bootstrap partout, je me suis décidé à passer sur Foundation. En terme de fonctionnalités, il n'existe pas une énorme différence entre les deux, dans tous les cas un système de grille permet de gérer les différentes tailles d'écran en partant du principe que le site est d'abord créé pour des écrans mobiles,  un fichier style de base très complet est fourni en standard et quelques applets javascript agrémente le tout. Le passage de Bootstrap à Foundation n'était motivé que par l'esthétique pour ne pas avoir un site "qui a le même look que les autres".&lt;/p&gt;
&lt;p&gt;Comme la logique entre Bootstrap et Fondation est la même, la migration de l'un vers l'autre se fait sans douleur.&lt;/p&gt;
&lt;p&gt;Foundation apporte néanmoins deux fonctionnalités supplémentaires assez intéressantes : l'utilisation de &lt;a href="http://sass-lang.com" title="Sass"&gt;Sass&lt;/a&gt; et de &lt;a href="http://gruntjs.com" title="Grunt"&gt;Grunt&lt;/a&gt;. Sur le site de Foundation, &lt;a href="http://foundation.zurb.com/docs/sass.html"&gt;une page est dédiée à l'installation&lt;/a&gt; de ces deux fonctionnalités qui sont liées. Ils existent pas mal de tutoriels en anglais qui expliquent comment créer un nouveau projet Fondation avec Sass. &lt;/p&gt;
&lt;p&gt;Ce que nous allons voir plus particulièrement ensemble est l'utilisation de ces deux outils avec Pelican. Mais tout d'abord ...&lt;/p&gt;
&lt;h3&gt;Installation de Sass et automatisation des tâches avec Grunt&lt;/h3&gt;
&lt;p&gt;L'installation de Foundation dans sa version Sass est assez fastidieuse. Pas compliquée, mais fastidieuse. Cela m'a freiné pendant un petit moment. Pourquoi installer tout un bazar alors que le site fonctionne très bien avec css. Ce qui m'a finalement convaincu dans un premier temps, ce sont plus les possibilités d'automatisation apportées par Grunt que Sass lui-même.&lt;/p&gt;
&lt;p&gt;Pourquoi fastidieux, parce qu'il faut installer un certain nombre de modules. Sass et Foundation sont des gems de Ruby. Donc, il faut avoir Ruby, donc rvm ou rbenv pour installer les gems. Ensuite, il faut installer Grunt, mais pour installer Grunt, il faut avoir npm. Plus compliqué que de simplement gérer une feuille de style.&lt;/p&gt;
&lt;p&gt;Je vous renvoie à nouveau à la procédure complète sur &lt;a href="http://foundation.zurb.com/docs/sass.html" title="Getting start with Sass"&gt;le site de Foundation&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Par contre, une fois que tout est installé, c'est le bonheur.&lt;/p&gt;
&lt;h4&gt;Création d'un nouveau projet&lt;/h4&gt;
&lt;p&gt;Pour créer un nouveau projet, il suffit de se positionner dans le répertoire de son choix et de lancer la commande :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;foundation new project_name ‐‐libsass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le projet contient alors :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bower_components : ensemble des fichiers scss de Foundation ainsi que les javascripts&lt;/li&gt;
&lt;li&gt;css : le répertoire de sortie des fichiers scss après conversion en css&lt;/li&gt;
&lt;li&gt;js : nos propres javascripts&lt;/li&gt;
&lt;li&gt;node_modules : contient essentiellement grunt &lt;/li&gt;
&lt;li&gt;scss : nos fichiers scss&lt;/li&gt;
&lt;li&gt;Gruntfile.js : j'y reviens juste après, le fichier permettant l'automatisation de nos tâches&lt;/li&gt;
&lt;li&gt;index.html : un fichier permettant de tester les modification de style&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Mise à jour de Foundation&lt;/h4&gt;
&lt;p&gt;Si vous souhaitez bénéficier des dernières versions de Foundation, il suffit de lancer la commande suivante dans le répertoire projet :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;foundation update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cela ne met à jour que le répertoire bower_components, avec les tous derniers fichiers scss ou javascript. C'est &lt;strong&gt;TRES&lt;/strong&gt; important pour la suite.&lt;/p&gt;
&lt;h4&gt;Utilisation de Sass et Grunt&lt;/h4&gt;
&lt;p&gt;Le véritable intérêt réside dans la mise à jour du style avec Sass et Grunt. Pour bien comprendre comment cela fonctionne, il faut faire un petit tour dans les fichiers gruntfile.js et scss/app.css.&lt;/p&gt;
&lt;p&gt;Le contenu de gruntfile.js :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exports&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;package.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;includePaths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bower_components/foundation/scss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;outputStyle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;compressed&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;css/app.css&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;scss/app.scss&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Gruntfile.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;sass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;scss/**/*.scss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grunt-sass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grunt-contrib-watch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registerTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grunt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registerTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;watch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dans ce fichier sont définies deux tâches : une tâche de transformation de fichier app.scss en app.css à travers la commande &lt;code&gt;sass&lt;/code&gt; et une tâche de mise à jour de notre fichier css à chaque modification du fichier scss avec la commande &lt;code&gt;watch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ce qui veut dire concrètement que, lorsque nous aurons créé notre projet, nous allons lancer dans le terminal la commande &lt;code&gt;grunt&lt;/code&gt; qui va à la fois créer notre premier fichier app.css à partir du fichier app.scss et nous permettre de visualiser en temps réel sur notre page html toutes les modifications que nous pourrons apporter au fichier app.scss.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grunt
Running &amp;quot;sass:dist&amp;quot; (sass) task
File &amp;quot;static/css/app.css&amp;quot; created.

Running &amp;quot;watch&amp;quot; task
Waiting...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nous sommes maintenant prêt à apporter les modifications de style à notre site. Pour cela, regardons maintenant le contenu du fichier app.scss&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selectively&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;components&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nd"&gt;@import&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/accordion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/alert-boxes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/block-grid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/breadcrumbs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/button-groups&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/buttons&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/clearing&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/dropdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/dropdown-buttons&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/flex-video&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/forms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/grid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/inline-lists&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/joyride&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/keystrokes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/labels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/magellan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/orbit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/pagination&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/panels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/pricing-tables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/progress-bars&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/reveal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/side-nav&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/split-buttons&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/sub-nav&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/switch&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/tables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/tabs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/thumbs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/tooltips&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/top-bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/offcanvas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foundation/components/visibility&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notre fichier app.scss (et par construction app.css) et construit à partir de l'ensemble des fonctions par défaut de Foundation qui se trouvent dans le répertoire bower_components (si si regardez bien le includePaths du fichier gruntfile.js) et des modifications que nous pourrions apporter à ces fonctions par défaut à partir du fichier _settings.scss.&lt;/p&gt;
&lt;p&gt;Dit autrement, si on ne touche à rien, le fichier app.css est identique au fichier foundation.min.css classique.&lt;/p&gt;
&lt;p&gt;Les modifications de style vont donc se faire en enlevant simplement des commentaires sur certaines lignes de _settings.scss.&lt;/p&gt;
&lt;h3&gt;L'utilisation de Fondation avec Pelican&lt;/h3&gt;
&lt;p&gt;Un projet Pelican est structuré de la manière suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Mon-site
    |__ content
    |__ mon-theme-zf-css
    |   |__ static
    |   |   |__ css
    |   |   |__ js
    |   |__ template
    |__ output
    |__ pelicanconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lorsque que je crée un projet Foundation, je crée mon-theme-zf-sass, qui va avoir une structure différente de celle attendue par Pelican :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mon-theme-zf-sass
    |__ bower_components
    |__ css
    |__ js
    |__ node_modules
    |__ scss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Après la création de mon-theme-zf-sass, je vais commencer par modifier le répertoire pour le rendre compatible avec la structure Pelican comme ceci :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mon-theme-zf-sass
    |__ bower_components
    |__ static
    |  |__ css
    |  |__ js
    |__ node_modules
    |__ scss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je dois alors modifier le fichier gruntfile.js pour qu'il prenne en compte la modification de destination du fichier css en remplaçant la ligne &lt;code&gt;'css/app.css': 'scss/app.scss'&lt;/code&gt; par &lt;code&gt;'static/css/app.css': 'scss/app.scss'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;J'ai déjà un thème Foundation css personnalisé. Il est composé de deux fichiers css, un fichier foundation.min.css qui contient les valeurs par défaut de fondation et un fichier style.css qui contient ma personnalisation. Je vais commencer par mettre exactement à l'identique mon thème Foundation css et mon thème Foundation Sass. Pour cela, il faut simplement :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;copier le fichier style.css dans le répertoire scss et le renommer _style.scss sans en modifier le contenu. Je transforme mon fichier style.css en "partial" scss pour qu'il puisse être intégré lors du traitement sass. Le preprocesseur sass sait très bien lire du contenu css.&lt;/li&gt;
&lt;li&gt;ajouter &lt;code&gt;@import "style"&lt;/code&gt;dans le fichier app.scss. Je paramètre l'import de mon "partial"&lt;/li&gt;
&lt;li&gt;ne pas toucher au fichier _settings.scss&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le fichier app.css en sortie du traitement sass sera à l'identique de la somme de mes fichiers foundation.min.css et style.css. Cela est possible grâce à la possibilité offerte par sass de constituer un fichier css à partir de plusieurs fichiers scss, et parce qu'un fichier style.css est un fichier style.scss qui s'ignore.&lt;/p&gt;
&lt;p&gt;Petit bonus, il est possible aussi d'ajouter le fichier normalize.scss, ce qui nous donne (en respectant bien cet ordre) :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;normalize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;settings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fondation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;@import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;style&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si je souhaite bénéficier de nouvelles fonctionnalités Foundation, je n'ai qu'à faire un &lt;code&gt;foundation update&lt;/code&gt; qui mettra à jour le répertoire bower_components, sans toucher aux autres répertoires ou fichiers de mon-theme-zf-sass. Pratique.&lt;/p&gt;
&lt;p&gt;Dernier point, il ne faut pas oublier dans le fichier base.html de modifier l'appel aux feuilles de style en remplaçant normalize.css, foundation.min.css et style.css par app.css.&lt;/p&gt;
&lt;p&gt;Voilà, tout est prêt pour utiliser Pelican avec Foundation et Sass. Pour faire les modifciations et voir le résultat en direct, il suffit de faire :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd mon-blog
make devserver
cd mon-theme-zf-sass
grunt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis lancer le navigateur sur localhost:8000. Et à chaque modification de n'importe quel fichier Pelican, les modifcations apparaîtrons immédiatement sur le site. C'est magique !&lt;/p&gt;
&lt;p&gt;Maintenant, il ne me reste plus qu'à essayer de "tuer" mon fichier style.css pour exploiter tout le potentiel de Sass. Ce sera pour de prochains épisodes.&lt;/p&gt;
&lt;h3&gt;Un dernier point avec git&lt;/h3&gt;
&lt;p&gt;A la création d'un nouveau projet Foundation, un dépôt git est automatiquement créé (pour grunt je crois). Comme il se crée à l'intérieur de mon dépôt git existant (celui qui contient mon site pelican), ça met un peu le bazar quand je veux committer mes modifications. La solution la plus simple que j'ai trouvée jusqu'à présent est de supprimer le répertoire .git de mon projet Foundation, ce qui n'empêche pas les mises à jour futures avec grunt.&lt;/p&gt;</content><category term="Foundation"/><category term="Pelican"/><category term="Foundation"/><category term="Sass"/><category term="Grunt"/></entry><entry><title>Bien démarrer un projet Python</title><link href="https://letchap.github.io/2014/08/07/bien-demarrer-un-projet-python/" rel="alternate"/><published>2014-08-07T21:42:00+02:00</published><updated>2014-08-07T21:42:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-08-07:/2014/08/07/bien-demarrer-un-projet-python/</id><summary type="html">&lt;p&gt;Après quelques mois de pratique de Python, je viens enfin de comprendre à quoi servent les environnements virtuels. C'est un peu toujours la même chose. On lit, on expérimente, on ne comprend pas bien pourquoi on fait telle action, et un jour, on a le déclic. Evidemment, j'ai bien lu …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Après quelques mois de pratique de Python, je viens enfin de comprendre à quoi servent les environnements virtuels. C'est un peu toujours la même chose. On lit, on expérimente, on ne comprend pas bien pourquoi on fait telle action, et un jour, on a le déclic. Evidemment, j'ai bien lu un peu partout que les environnements virtuels c'est super, que ça permet d'isoler des sources, que cela ne pollue pas le reste du système, etc ... Jusqu'à présent, pour moi, cela ne restait que des mots. Et facta est lux.&lt;/p&gt;
&lt;h3&gt;La création d'un projet dans un environnement virtuel avec un dépôt git&lt;/h3&gt;
&lt;p&gt;Quelque soit le projet, la méthode que je suis est désormais la suivante :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;je crée un répertoire&lt;/li&gt;
&lt;li&gt;je me positionne dans le répertoire et je crée un dépôt git&lt;/li&gt;
&lt;li&gt;je crée un environnement virtuel en choisissant ma version Python&lt;/li&gt;
&lt;li&gt;j'exclue les sources et bibliothèques de l'environnement virtuel de mon dépôt&lt;/li&gt;
&lt;li&gt;je fais un premier commit de mon dépôt&lt;/li&gt;
&lt;li&gt;je peux activer l'environnement virtuel et installer les sources dont j'ai besoin pour travailler&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ce qui nous donne :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;monprojet
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;monprojet
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;init
$&lt;span class="w"&gt; &lt;/span&gt;virtualenv&lt;span class="w"&gt; &lt;/span&gt;‐p&lt;span class="w"&gt; &lt;/span&gt;python2.7&lt;span class="w"&gt; &lt;/span&gt;monprojet-env&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# par défaut, version de Python installé sur l&amp;#39;OS&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;monprojet-env&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;.gitignore
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*.pyc&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;.gitignore
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.gitignore
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;‐m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Création du projet en ignorant les bibliothèques Python installées&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;monprojet-env/bin/activate
$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour sortir d'un environnement virtuel, la commande est &lt;code&gt;deactivate&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;D'accord, mais à quoi ça sert ?&lt;/h3&gt;
&lt;p&gt;Première chose, l'environnement virtuel ne va concerner que la bibliothèque standard python dans la version que vous aurez choisi au moment de faire &lt;code&gt;virtualenv&lt;/code&gt; et les bibliothèques tierces que vous aurez installé via &lt;code&gt;pip install&lt;/code&gt; par exemple. Un petit tour dans le dossier &lt;code&gt;monprojet-env&lt;/code&gt; vous permettra de le constater. Ce qui veut dire (ça a l'air évident mais j'avais pas percuté tout de suite), qu'il ne contient rien d'autre, surtout pas les sources de votre projet ou les sources des autres langages de programmation, comme par exemple, au hasard, Ruby.&lt;/p&gt;
&lt;p&gt;Et maintenant, place au cas pratique :&lt;/p&gt;
&lt;p&gt;Mon site est généré grâce au CMS Pelican écrit en python. Actuellement il est en version 3.4 et tourne en Python 2.7. Les sources de Python et Pelican sont dans un environnement virtuel. Les sources du site sont dans un dépôt git. J'utilise également Ruby et notamment le gem Sass, qui eux sont installés sur le système.&lt;/p&gt;
&lt;p&gt;Je veux tester la version 3.4 de Pelican en Python 3.3, sans toucher à l'existant, puis si l'essai est concluant, en faire la version de production.&lt;/p&gt;
&lt;p&gt;Les différentes étapes vont être les suivantes :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;récuperer la liste des bibliothèques tierces installées sur l'environnement virtuel de départ&lt;/li&gt;
&lt;li&gt;bien mettre à jour le dépôt avec les sources du site&lt;/li&gt;
&lt;li&gt;cloner les sources du site dans un nouveau dossier&lt;/li&gt;
&lt;li&gt;créer un nouvel environnement virtuel&lt;/li&gt;
&lt;li&gt;y installer Python 3.3, Pelican 3.4 et les autres bibliothèques nécessaires au fonctionnement de Pelican&lt;/li&gt;
&lt;li&gt;faire les tests avec ce nouvel environnement, donc sans toucher à l'ancien&lt;/li&gt;
&lt;li&gt;si tout est bon, ça devient le nouvel environnement, vous pouvez suprimmer l'ancien&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ce qui nous donne&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blog2.7
$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;freeze&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;source.txt
$&lt;span class="w"&gt; &lt;/span&gt;virtualenv&lt;span class="w"&gt; &lt;/span&gt;‐p&lt;span class="w"&gt; &lt;/span&gt;python3.3&lt;span class="w"&gt; &lt;/span&gt;pelican3.4-env
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pelican3.4-env&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;.gitignore
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.gitignore
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;‐m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;J&amp;#39;exclue les sources python 3.3 du dépôt&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pelican3.4-env/bin/activate
$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;source.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Voilà, il ne reste plus qu'à tester le site sous ce nouvel environnement, et si vous êtes content du résultat, supprimer l'ancien environnement. Si vous n'êtes pas satisfait, il suffit de supprimer le nouvel environnement et d'annuler les modifications dans git.&lt;/p&gt;</content><category term="Python"/><category term="Python"/><category term="git"/><category term="virtualenv"/><category term="Pelican"/></entry><entry><title>Utiliser locate sur OSX</title><link href="https://letchap.github.io/2014/08/06/utiliser-locate-sur-osx/" rel="alternate"/><published>2014-08-06T20:56:00+02:00</published><updated>2014-08-06T20:56:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-08-06:/2014/08/06/utiliser-locate-sur-osx/</id><summary type="html">&lt;p&gt;J'aime bien la commande locate pour rechercher un élément sur le ou les disques de mon ordinateur. Elle permet de chercher des fichiers système que ne connait pas spotlight. Par rapport à la commande find, elle est beaucoup plus rapide car elle crée une base de données avec l'ensemble des …&lt;/p&gt;</summary><content type="html">&lt;p&gt;J'aime bien la commande locate pour rechercher un élément sur le ou les disques de mon ordinateur. Elle permet de chercher des fichiers système que ne connait pas spotlight. Par rapport à la commande find, elle est beaucoup plus rapide car elle crée une base de données avec l'ensemble des fichiers et le chemin associée.&lt;/p&gt;
&lt;p&gt;Seule contrainte : avoir une base de données à jour. Et là, grosse surprise, ma base n'est pas à jour, la commande locate ne sert à rien. La misère !&lt;/p&gt;
&lt;p&gt;Reprenons par le commencement. Pour activer la commande locate qui ne l'est pas par défaut, il faut lancer cette commande dans le terminal :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;launchctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;load&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;LaunchDaemons&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apple&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;locate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plist&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour savoir comment fonctionne la programmation de travaux avec launchd, je vous renvoie &lt;a href="https://letchap.github.io/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/" title="démarrage automatique de travaux avec launchd"&gt;à un précédent article.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Que contient le fichier plist ? Pour le savoir :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/System/Library/LaunchDaemons/com.apple.locate.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ce qui donne :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Label&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.apple.locate&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Disabled&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProgramArguments&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;/usr/libexec/locate.updatedb&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;LowPriorityIO&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Nice&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;KeepAlive&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;PathState&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;/var/db/locate.database&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;false/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;StartCalendarInterval&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Hour&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Minute&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;15&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Weekday&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;AbandonProcessGroup&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et là, oh surprise, la commande de mise à jour de la base à savoir &lt;code&gt;/usr/libexec/locate.updatedb&lt;/code&gt; ne se déclenche que le samedi à 3h15. Aucune chance d'avoir une base de données à jour.&lt;/p&gt;
&lt;p&gt;Heureusement, il est toujours possible de lancer la mise à jour à la main avec&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;/usr/libexec/locate.updatedb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;C'est un peu long, mais au moins, je suis sûr du résultat du locate.&lt;/p&gt;</content><category term="Mac OS X"/><category term="locate"/><category term="launchctl"/><category term="Mac OS X"/></entry><entry><title>Quel langage de programmation choisir pour débuter</title><link href="https://letchap.github.io/2014/04/28/quel-langage-de-programmation-choisir-pour-debuter/" rel="alternate"/><published>2014-04-28T22:36:00+02:00</published><updated>2014-04-28T22:36:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-04-28:/2014/04/28/quel-langage-de-programmation-choisir-pour-debuter/</id><summary type="html">&lt;p&gt;Il y a de cela un an et demi, après avoir installé mon premier Linux, j'ai cherché un langage de programmation pour débutant. Je voulais réaliser des petits programmes simples pour me faciliter certaines tâches comme récupérer des documents sur internet ou convertir des fichiers.&lt;/p&gt;
&lt;p&gt;La toute première question que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Il y a de cela un an et demi, après avoir installé mon premier Linux, j'ai cherché un langage de programmation pour débutant. Je voulais réaliser des petits programmes simples pour me faciliter certaines tâches comme récupérer des documents sur internet ou convertir des fichiers.&lt;/p&gt;
&lt;p&gt;La toute première question que je me suis posé fut : "Mais quel langage je vais bien pouvoir choisir ?". Question d'autant plus ardue que je n'y connaissais vraiment rien.&lt;/p&gt;
&lt;p&gt;Evidemment, j'avais entendu parlé de certains langages comme Java ou C++, mais dès les premières recherches, je lis qu'en Java, tout objet est une classe. Rédhibitoire pour moi, les classes, quand on n'a jamais fait de programmation, ce n'est pas instinctif.&lt;/p&gt;
&lt;p&gt;De la même manière, je connaissais php de nom, mais rapidement, je me rends compte que c'est surtout utile pour monter un site web.&lt;/p&gt;
&lt;p&gt;Le premier langage sur lequel je tombe alors est Perl. Et dès l'introduction, je lis la devise Perl qui décomplexe n'importe quel amateur "Il y a toujours plusieurs façons de faire". Je me dis alors que je suis sur la bonne voie. Malheureusement, je pense que pour un débutant, Perl est un peu aride car très condensé. En une seule ligne, il est possible d'effectuer beaucoup de tâches, du coup, la relecture du code est un peu complexe. Il y a un gros ticket d'entrée.&lt;/p&gt;
&lt;p&gt;Et puis, au hasard d'une lecture, en l'occurrence full circle magazine, je tombe sur &lt;a href="http://www.fullcirclemag.fr/?post/2012/06/07/Numéro-spécial-PYTHON%2C-volume-1"&gt;un tutoriel pour Python&lt;/a&gt;. Le premier article d'une longue série concerne le programme "Hello world" qui tient dans la ligne suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;print(&amp;quot;Hello world!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Difficile de faire plus simple.&lt;/p&gt;
&lt;p&gt;A titre de comparaison, les "Hello world" en Perl, Java et C++ paraissent plus trapus.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Perl&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;Java&lt;/span&gt;
&lt;span class="kr"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;HelloWorld&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kr"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;

&lt;span class="kr"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, new world!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Encore un petit exemple pour illustrer la facilité d'utilisation de Python : pour déclarer une variable, il suffit de faire :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;x=&amp;#39;toto&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nous avons déclaré la variable x en lui affectant la valeur &lt;code&gt;toto&lt;/code&gt;. Un jeu d'enfant !&lt;/p&gt;
&lt;p&gt;Python est un langage bien adapté pour les débutants car :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;comme nous venons de le voir, sa syntaxe est très simple,&lt;/li&gt;
&lt;li&gt;il n'exige pas l'utilisation de classes. Il est possible de très rapidement de faire un programme complet sans une seule classe,&lt;/li&gt;
&lt;li&gt;il est multi-plateforme. Pour moi qui travaille à la fois sur Linux et sur OSX, je n'ai pas besoin de réécrire de code, il tourne sur les deux systèmes (et sur Windows bien sûr même si je ne l'ai jamais expérimenté),&lt;/li&gt;
&lt;li&gt;il est très documenté. Il est toujours possible également d'attrappé de bouts de code à droite à gauche qui vont faire le travail sans avoir forcément tout compris au début,&lt;/li&gt;
&lt;li&gt;Il y a des informations partout, y compris en français, ce qui est plus facile pour démarrer, même si on est familier de la langue de Shakespeare,&lt;/li&gt;
&lt;li&gt;il est capable de tout faire : du web, des maths, des interfaces, ... rien ne lui est interdit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour vous donner un petit exemple, en partant de zéro, j'ai pu au bout de quatre mois à écrire un petit programme qui se connecte sur un site internet et qui récupère un fichier. &lt;a href="https://letchap.github.io/2013/02/25/wget-en-python-3-avec-gestion-des-cookies-et-du-post/"&gt;Le programme se trouve ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ensuite, comme j'ai pu le lire un peu partout, il faut sans doute 10 ans pour maîtriser un langage. Et c'est là encore un gros avantage de Python, il permet d'appendre à son rythme sans attendre 10 ans pour se faire plaisir. On peut commencer à écrire des programmes simples et puis, avec un peu plus d'expérience, on attaque les classes. Mais encore une fois, ce n'est pas une obligation. De la même manière, on peut appendre module par module : le module de traitement d'image, le module d'interface graphique, la connexion à une base de données ... A son rythme je vous dis... Et si un jour vous voulez l'utiliser de manière professionnelle, pas de soucis, il est aussi fait pour ça.&lt;/p&gt;
&lt;p&gt;Si vous êtes convaincu par Python, quelques petites astuces pour démarrer :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apprendre à utiliser la ligne de commande en parallèle (si vous êtes sur Linux ou Mac). C'est important pour lancer un programme python, mais également pour installer des modules complémentaires python (via la commande &lt;code&gt;pip&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;lire, lire et lire&lt;/li&gt;
&lt;li&gt;faire des essais, se tromper, lire, refaire des essais, et miracle, ça fonctionne&lt;/li&gt;
&lt;li&gt;utiliser la ligne de commande python pour tester son script en direct&lt;/li&gt;
&lt;li&gt;bien comprendre le système d'encodage (aka c'est quoi UTF8 ?)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Des liens utiles :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org"&gt;le site officiel de python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fr.openclassrooms.com/informatique/python/cours"&gt;Openclassroom (ex site du Zéro)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"/><category term="Python"/><category term="Java"/><category term="C++"/><category term="Perl"/></entry><entry><title>Mon extension markdown pour inclure du code à partir d'un fichier</title><link href="https://letchap.github.io/2014/04/05/mon-extension-markdown-pour-inclure-du-code-a-partir-dun-fichier/" rel="alternate"/><published>2014-04-05T10:51:00+02:00</published><updated>2014-04-05T10:51:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-04-05:/2014/04/05/mon-extension-markdown-pour-inclure-du-code-a-partir-dun-fichier/</id><summary type="html">&lt;p&gt;&lt;em&gt;Article mis à jour le 8 Février 2023 pour prendre en compte la montée de version Pelican&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;J'adore mon Pelican. Comme il est écrit en Python, il est vraiment facile de le customizer pour l'adapter au maximum à mes besoins.&lt;/p&gt;
&lt;p&gt;Sur mon blog, j'ai régulièrement besoin d'insérer des blocs de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Article mis à jour le 8 Février 2023 pour prendre en compte la montée de version Pelican&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;J'adore mon Pelican. Comme il est écrit en Python, il est vraiment facile de le customizer pour l'adapter au maximum à mes besoins.&lt;/p&gt;
&lt;p&gt;Sur mon blog, j'ai régulièrement besoin d'insérer des blocs de code. Pour que l'opération soit la plus simple pour la maintenance du site et pour le lecteur qui souhaiterait utiliser le code, je mets le code dans un fichier que je rends téléchargeable.&lt;/p&gt;
&lt;p&gt;Malheureusement, il n'est pas possible avec la syntaxe Markdown d'intégrer le contenu d'un fichier source.&lt;/p&gt;
&lt;p&gt;Jusqu'à présent, pour contourner ce problème, j'utilisais un plugin Pelican nommé liquid_tags, inspiré du plugin liquid d'Octopress.&lt;/p&gt;
&lt;p&gt;Pour moi, cela restait une façon de contourner une absence de fonctionnalité de markdown par ailleurs offerte par ReStructered Text dans une de ces directives. Pourquoi markdown ne pourrait - il pas interpréter un tag comme par exemple {% include_code file.py %} ? La réponse est assez simple : ce n'est pas fait pour ça.&lt;/p&gt;
&lt;p&gt;En revanche, avec un peu de python, ça va devenir possible ...&lt;/p&gt;
&lt;h3&gt;Un petit détour par le module markdown de python.&lt;/h3&gt;
&lt;p&gt;Le module markdown de Python, en plus de pouvoir interpréter la syntaxe classique markdown, offre un certain nombre d'extensions comme par exemple la possibilité d'ajouter une coloration syntaxique sur un bloc de code. Par défaut, Pelican prend en compte ces extensions. Il est possible de les paramétrer plus finement dans le fichier pelicanconf.py.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MARKDOWN = {
&amp;#39;extension_configs&amp;#39;: {
    &amp;#39;markdown.extensions.codehilite&amp;#39;: {},
    &amp;#39;markdown.extensions.extra&amp;#39;: {},
    &amp;#39;markdown.extensions.meta&amp;#39;: {},
},
&amp;#39;output_format&amp;#39;: &amp;#39;html5&amp;#39;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;}
J'utilise déjà ces extensions (l'extension attribute lists) pour ajouter un attribut dans des balises &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, comme je le décris &lt;a href="https://letchap.github.io/2013/12/11/realiser-une-galerie-dimages-avec-pelican-et-bootstrap/"&gt;dans ce post&lt;/a&gt;, chose que ne permet évidemment pas nativement markdown.&lt;/p&gt;
&lt;p&gt;En plus de ces extensions "standard", il est possible de créer ces propres extensions markdown en python. C'est exactement ce que nous allons faire pour insérer le contenu d'un fichier source dans notre fichier markdown. Puis, une fois cette extension personnelle créée, nous allons la déclarer à Pelican.&lt;/p&gt;
&lt;h3&gt;Créons notre extension markdown&lt;/h3&gt;
&lt;p&gt;Pour créer sa propre extension markdown, il est indispensable de se rendre sur le site python et &lt;a href="http://pythonhosted.org/Markdown/extensions/api.html"&gt;de lire le chapitre sur l'API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La logique de mon extension est la suivante : "Avant de passer mon fichier au processeur markdown, je vais lire le contenu de mon fichier markdown, et dès que je tombe sur le tag {% addcode content/monfichier.py %}, je récupère le contenu du fichier source, que j'indente. Ensuite, je rends la main au processeur markdown".&lt;/p&gt;
&lt;p&gt;Concrètement, en python, cela donne les quelques lignes suivantes, les commentaires sont dans le code.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;markdown.extensions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Extension&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;markdown.preprocessors&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Preprocessor&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;codecs&lt;/span&gt;


&lt;span class="c1"&gt;# L&amp;#39;expression régulière permettant de trouver le tag dans le texte&lt;/span&gt;

&lt;span class="n"&gt;CODE_RE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\{&lt;/span&gt;&lt;span class="si"&gt;% a&lt;/span&gt;&lt;span class="s1"&gt;ddcode ?(?P&amp;lt;src&amp;gt;[^\}]*) \%}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;AddCodePreprocessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Preprocessor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

&lt;span class="c1"&gt;# Le pré-processor&lt;/span&gt;
&lt;span class="c1"&gt;# Je lis les lignes de mon fichier markdown&lt;/span&gt;
&lt;span class="c1"&gt;# Je les mets une à une dans une liste&lt;/span&gt;
&lt;span class="c1"&gt;# Dès que je trouve une correspondance à mon expression régulière&lt;/span&gt;
&lt;span class="c1"&gt;# J&amp;#39;ouvre le fichier source&lt;/span&gt;
&lt;span class="c1"&gt;# Je le lis ligne à ligne en ajoutant une indentation de 4 espaces pour # le bloc de code markdown&lt;/span&gt;
&lt;span class="c1"&gt;# Je complète ma liste avec ces lignes&lt;/span&gt;
&lt;span class="c1"&gt;# Quand j&amp;#39;ai tout lu, je renvoie la liste pour la suite du traitement&lt;/span&gt;
&lt;span class="c1"&gt;# markdown&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;new_lines&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CODE_RE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;filein&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filein&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;new_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;    &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;new_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;new_lines&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;AddCodeExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="c1"&gt;# Déclaration de mon extension&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;extendMarkdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preprocessors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AddCodePreprocessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;addcode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registerExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;makeExtension&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AddCodeExtension&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/addcode.py" title="addcode.py"&gt;Télécharger addcode.py&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Testons cette extension&lt;/h3&gt;
&lt;p&gt;Pour tester cette extension, vous pouvez lancer la commande suivante dans le terminal.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;markdown_py -x addcode montexte.txt &amp;gt; output.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Installons l'extension&lt;/h3&gt;
&lt;p&gt;Pour installer cette extension, il suffit de la copier dans le répertoire contenant les extensions markdown python.&lt;/p&gt;
&lt;h3&gt;Utilisons cette extension avec Pelican&lt;/h3&gt;
&lt;p&gt;Pour installer cette extension avec Pelican, il suffit de la déclarer dans le fichier pelicanconf.py.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MARKDOWN = {
&amp;#39;extension_configs&amp;#39;: {
    &amp;#39;markdown.extensions.codehilite&amp;#39;: {},
    &amp;#39;markdown.extensions.extra&amp;#39;: {},
    &amp;#39;markdown.extensions.meta&amp;#39;: {},
    &amp;#39;markdown.extensions.addcode&amp;#39;: {},
    },
&amp;#39;output_format&amp;#39;: &amp;#39;html5&amp;#39;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Cherry on ze cake&lt;/h3&gt;
&lt;p&gt;J'aimerais bien avoir un joli bouton pour télécharger mon fichier source. Nous allons donc utiliser l'extension attribute list dont nous parlions précédemment pour ajouter une classe bouton à notre lien html (en l'occurrence un bouton foundation) :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[Télécharger monfichier.py]({filename}/content/monfichier.py){: class=&amp;quot;button&amp;quot; title=&amp;quot;Télécharger monfichier.py&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le tour est joué, plus besoin de plugin Pelican, l'extension sera disponible pour tous vos projets markdown.&lt;/p&gt;</content><category term="Python"/><category term="Python"/><category term="Pelican"/><category term="Markdown"/></entry><entry><title>Connexion ssh avec VirtualBox</title><link href="https://letchap.github.io/2014/03/20/connexion-ssh-avec-virtualbox/" rel="alternate"/><published>2014-03-20T22:03:00+01:00</published><updated>2014-03-20T22:03:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-03-20:/2014/03/20/connexion-ssh-avec-virtualbox/</id><summary type="html">&lt;p&gt;En conservant le paramétrage par défaut de VirtualBox, il n'est pas possible de créer une connection SSH avec un invité Linux.&lt;/p&gt;
&lt;p&gt;Pour rendre possible cette connection SSH, il faut modifier le paramétrage de l'onglet réseau dans VirtualBox pour le positionner sur "Accès par pont". Cela vous permettra d'avoir une adresse …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En conservant le paramétrage par défaut de VirtualBox, il n'est pas possible de créer une connection SSH avec un invité Linux.&lt;/p&gt;
&lt;p&gt;Pour rendre possible cette connection SSH, il faut modifier le paramétrage de l'onglet réseau dans VirtualBox pour le positionner sur "Accès par pont". Cela vous permettra d'avoir une adresse au format 192.168.0.xx.&lt;/p&gt;
&lt;p&gt;Pour rappel sur Linux, vous aurez auparavant installé openssh et démarré le service par &lt;code&gt;service ssh start&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;N'oublier de préciser de port 22 lors de votre connection SFTP.&lt;/p&gt;</content><category term="VirtualBox"/><category term="VirtualBox"/><category term="SSH"/><category term="Crunchbang"/></entry><entry><title>Microbe</title><link href="https://letchap.github.io/2014/03/17/microbe/" rel="alternate"/><published>2014-03-17T20:11:00+01:00</published><updated>2014-03-17T20:11:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-03-17:/2014/03/17/microbe/</id><summary type="html">&lt;p&gt;Vous avez un serveur à la maison : votre ordinateur est allumé en permanence ou vous avez un raspberry pi.&lt;/p&gt;
&lt;p&gt;Vous aimez vous auto - héberger, pour le mail, les dépôts, le contenu multimedia, votre site web.&lt;/p&gt;
&lt;p&gt;Vous avez testé Pelican, Flask, Octopress, Jekyll, mais finalement vous avez autre chose à faire …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vous avez un serveur à la maison : votre ordinateur est allumé en permanence ou vous avez un raspberry pi.&lt;/p&gt;
&lt;p&gt;Vous aimez vous auto - héberger, pour le mail, les dépôts, le contenu multimedia, votre site web.&lt;/p&gt;
&lt;p&gt;Vous avez testé Pelican, Flask, Octopress, Jekyll, mais finalement vous avez autre chose à faire et vous n'avez pas envie de passer beaucoup de temps à configurer un site web.&lt;/p&gt;
&lt;p&gt;Vous êtes allergique à tous ce qui est priopriétaire : Disqus, Github, ...&lt;/p&gt;
&lt;p&gt;Microbe est fait pour vous.&lt;/p&gt;
&lt;p&gt;Pour paraphraser son auteur Microbe c'est :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Aucune base de données&lt;/li&gt;
&lt;li&gt;Facilement installable et exécutable via Pip&lt;/li&gt;
&lt;li&gt;Rendu dynamique en HTML de pages markdown stockées sur le serveur&lt;/li&gt;
&lt;li&gt;Gestion de commentaires&lt;/li&gt;
&lt;li&gt;Génération de flux atom&lt;/li&gt;
&lt;li&gt;Multi utilisateurs&lt;/li&gt;
&lt;li&gt;Interface de configuration (qui se veut) simple&lt;/li&gt;
&lt;li&gt;Création de nouvelles pages/articles à partir d'une interface dédiée&lt;/li&gt;
&lt;li&gt;Upload de fichiers à partir d'une interface pour pouvoir les utiliser dans les articles&lt;/li&gt;
&lt;li&gt;Disponible en anglais ou en français&lt;/li&gt;
&lt;li&gt;Pagination côté serveur&lt;/li&gt;
&lt;li&gt;Page d'archive&lt;/li&gt;
&lt;li&gt;Pages de tag&lt;/li&gt;
&lt;li&gt;Page de catégorie&lt;/li&gt;
&lt;li&gt;Multi thèmes&lt;/li&gt;
&lt;li&gt;Moteur de recherche&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En quelques secondes (je vous promets que je n'exagère pas), vous avez paramétré votre site, écrit et publié votre premier post.&lt;/p&gt;
&lt;p&gt;Si vous sentez l'âme créative, faire votre propre thème &lt;a href="http://foundation.zurb.com"&gt;foundation&lt;/a&gt; ne vous prendra que peu de temps.&lt;/p&gt;
&lt;p&gt;A essayer d'urgence !&lt;/p&gt;
&lt;p&gt;Pour les infos, c'est ici :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pip : &lt;a href="https://pypi.python.org/pypi/Microbe/1.0"&gt;https://pypi.python.org/pypi/Microbe/1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Doc : &lt;a href="http://microbe.joacodepel.tk/"&gt;http://microbe.joacodepel.tk/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code : &lt;a href="https://hg.joacodepel.tk/get_microbe/microbe/"&gt;https://hg.joacodepel.tk/get_microbe/microbe/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thèmes : &lt;a href="https://hg.joacodepel.tk/get_microbe/microbe-themes/"&gt;https://hg.joacodepel.tk/get_microbe/microbe-themes/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Microbe"/><category term="Python"/><category term="CMS"/><category term="Microbe"/></entry><entry><title>Créer un fichier pdf avec Python et Reportlab</title><link href="https://letchap.github.io/2014/03/06/creer-un-fichier-pdf-avec-python-et-reportlab/" rel="alternate"/><published>2014-03-06T21:36:00+01:00</published><updated>2014-03-06T21:36:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-03-06:/2014/03/06/creer-un-fichier-pdf-avec-python-et-reportlab/</id><summary type="html">&lt;p&gt;Dans un billet précédent, pour créer un document pdf, &lt;a href="https://letchap.github.io/2013/11/25/transformer-un-texte-chinois-en-pdf/"&gt;j'avais utilisé la bibliothèque tierce pyfpdf&lt;/a&gt;. Si cette bibliothèque s'avère extrèmement facile à prendre en main pour créer un fichier pdf à partir d'un fichier texte, elle présente à l'utilisation deux inconvénients majeures :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la création d'une document d'une centaine de page …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Dans un billet précédent, pour créer un document pdf, &lt;a href="https://letchap.github.io/2013/11/25/transformer-un-texte-chinois-en-pdf/"&gt;j'avais utilisé la bibliothèque tierce pyfpdf&lt;/a&gt;. Si cette bibliothèque s'avère extrèmement facile à prendre en main pour créer un fichier pdf à partir d'un fichier texte, elle présente à l'utilisation deux inconvénients majeures :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la création d'une document d'une centaine de page est très longs, plusieurs minutes&lt;/li&gt;
&lt;li&gt;pour une raison que je ne m'explique pas, la conversion de certains caractères chinois est incorrecte au moment de la création du fichier pdf.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Il me fallait donc trouver une autre solution.&lt;/p&gt;
&lt;p&gt;J'avais bien repéré la bibliothèque Reportlab pour Python, qui est la bibliothque de référence pour la création de fichier pdf. Mais comme je n'avais pas obtenu de résultats probants aussi rapidement qu'avec pyfpdf, je l'avais mis de coté. Grave erreur.&lt;/p&gt;
&lt;p&gt;C'est de la faute à la doc reportlab aussi. Je dois transformer du texte en pdf et je vois un chapître entièrement consacrer à la transformation de texte en pdf. Chouette, je vais utiliser cette fonctionalité : "text objet method". Et bien, surtout pas. Il faut se prendre la tête à positionner un curseur, il n'y a pas nativement de multipage, la mise en page est inexistante. Une galère.&lt;/p&gt;
&lt;p&gt;En revanche, il y a une fonctionnalité géniale, PLATYPUS : Page Layout and Typography Using Scripts. Et là, ça déchire.&lt;/p&gt;
&lt;p&gt;Comme un petit script vaut mieux qu'un long discours, voyons comment créer un fichier pdf à partir d'un fichier texte avec reportlab :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.lib.pagesizes&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;A4&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.lib.units&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.platypus&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Paragraph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SimpleDocTemplate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Spacer&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.lib.styles&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;getSampleStyleSheet&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.lib.styles&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ParagraphStyle&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.pdfbase&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pdfmetrics&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.pdfbase.cidfonts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UnicodeCIDFont&lt;/span&gt;
&lt;span class="n"&gt;pdfmetrics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registerFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UnicodeCIDFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;STSong-Light&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filein&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filein&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;docpdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpleDocTemplate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                               &lt;span class="n"&gt;pagesize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getSampleStyleSheet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ParagraphStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Chinese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;fontName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;STSong-Light&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                             &lt;span class="n"&gt;wordWrap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CJK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;story&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;paragraphs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;para&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;paragraphs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;story&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Paragraph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;para&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Chinese&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;story&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;.3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;docpdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;story&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Utilisation : &amp;lt;script&amp;gt; textfile pdffile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;filein&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;fileout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filein&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Commençons par les imports :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l'import de sys est uniquement pour gérer les fichiers d'entrée et de sortie&lt;/li&gt;
&lt;li&gt;ensuite, nous importons diférents modules de reportlab pour gérer le format de la feuille, et l'unité de mesure&lt;/li&gt;
&lt;li&gt;puis, nous importons l'ensemble des modules de PLATYPUS qui vont nous permettre de gérer le style du document et des paragraphes&lt;/li&gt;
&lt;li&gt;enfin le dernier bloc d'import sert à gérer une police unicode pour les caractères chinois.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Concernant le code lui-même :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;en ligne 15, nous ouvrons le fichier en lecture&lt;/li&gt;
&lt;li&gt;puis en ligne 16 nous définissons les caractéristiques de notre document&lt;/li&gt;
&lt;li&gt;en ligne 18 à 23 nous créons un style auquel nous apportons des caractéristiques particulières comme la police, la taille de la police, et surtout, le plus important pour l'écriture chinoise, un flag 'CJK' pour les ruptures en bout de ligne. Sans cela, la ligne dépasserait le cadre de la page. Toutes les possibilités de paramétrages du style sont décrites dans la documentation reportlab disponible &lt;a href="http://www.reportlab.com/docs/reportlab-userguide.pdf" title="reportlab"&gt;à cette adresse&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Par défaut, le multi-pages est géré.&lt;/li&gt;
&lt;li&gt;à partir de la ligne 25 et jusqu'à la ligne 30, nous lisons ligne à ligne notre texte et nous alimentons une liste, liste qui sera à son tour lue pour constituer le document pdf en applicant le style défini plus haut.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Par rapport à pyfpdf, je n'ai plus de problème de changement intempestif de caractères chinois et surtout, cela va beaucoup, beaucoup plus vite. Quelques secondes pour un fichier d'une centaine de pages.&lt;/p&gt;
&lt;p&gt;Moralité, il ne faut pas refuser l'obstacle, la satisfaction est au bout de l'effort.&lt;/p&gt;</content><category term="Python"/><category term="Python"/><category term="Reportlab"/><category term="pyfpdf"/></entry><entry><title>Créer automatiquement un modèle pré-rempli d'article sur Pelican</title><link href="https://letchap.github.io/2014/01/09/creer-automatiquement-un-modele-pre-rempli-d-article-sur-pelican/" rel="alternate"/><published>2014-01-09T22:25:00+01:00</published><updated>2014-01-09T22:25:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-01-09:/2014/01/09/creer-automatiquement-un-modele-pre-rempli-d-article-sur-pelican/</id><summary type="html">&lt;p&gt;Depuis mon passage d'Octopress à Pelican, un petit outil me manque : la possibilité de créer un squelette d'article automatiquement à partir du titre, et directement dans le bon répertoire. Sur Octopress, cela se fait par la commande &lt;code&gt;rake new_post['Mon super post!']&lt;/code&gt;. Par cette commande, l'en-tête est renseignée avec un …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Depuis mon passage d'Octopress à Pelican, un petit outil me manque : la possibilité de créer un squelette d'article automatiquement à partir du titre, et directement dans le bon répertoire. Sur Octopress, cela se fait par la commande &lt;code&gt;rake new_post['Mon super post!']&lt;/code&gt;. Par cette commande, l'en-tête est renseignée avec un certain nombre d'informations comme le titre ou la date, le nom du fichier est généré automatiquement et "slugifié", tout ça dans le bon répertoire.&lt;/p&gt;
&lt;p&gt;Jusqu'à présent, sur Pelican, pour créer un nouvel article, je faisais un copier-coller d'un ancien post, et je modifiais tout à la main. Pas terrible.&lt;/p&gt;
&lt;p&gt;Qu'à cela ne tienne, nous allons faire notre propre script Python pour automatiser tout ça. Le script, le voici, les commentaires sont dedans :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf8 -*-&lt;/span&gt;
&lt;span class="c1"&gt;#---------------------&lt;/span&gt;
&lt;span class="c1"&gt;#newpost.py&lt;/span&gt;
&lt;span class="c1"&gt;#Cree par letchap&lt;/span&gt;
&lt;span class="c1"&gt;#---------------------&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;unidecode&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unidecode&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;titre&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="c1"&gt;# je m&amp;#39;assure d&amp;#39;avoir de l&amp;#39;unicode&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;titre&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# je transforme mon texte en ascii&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unidecode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# je supprime les caractères spéciaux, je normalise les espaces, je mets en minuscule&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[^\w\s-]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# je rajoute les tirets et je renvoie le titre slugifié&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[-\s]+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;newpost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;titre&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;titre&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;content/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Ce fichier existe déjà&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# bon, comme son nom l&amp;#39;indique, c&amp;#39;est pour tester les doublons&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
		&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;content/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# si je n&amp;#39;ai pas de doublon, je crée le fichier et le squelette de mon post dans content&lt;/span&gt;
			&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Title: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;titre&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Date: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Category: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Tags: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
			&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Slug: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
		&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Précisez le titre du post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
		&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
		&lt;span class="n"&gt;titre&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
		&lt;span class="n"&gt;newpost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;titre&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/newpost.py" title="Télécharger newpost.py"&gt;Télécharger newpost.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En résumé, ce script, à partir d'un titre passé en paramètre va générer un nom de fichier "slugifié", c'est à dire sans caratère accentué, en minuscule et séparé par des tirets, ainsi que l'en-tête de notre fichier. Le fichier de sortie ressemblera à ça :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Mon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ce script fonctionne pour un fichier markdown, et pour un article. Rien ne vous empêche de modifier le script à la marge pour une page et en ReST.&lt;/p&gt;
&lt;p&gt;Dernière étape, comment lancer ce script ?&lt;/p&gt;
&lt;p&gt;J'ai d'abord regardé du côté des outils fournis par Pelican, à savoir make et fabric. Malheureusement, il n'est pas possible de faire un &lt;code&gt;make newpost 'Mon super post!'&lt;/code&gt; ou un &lt;code&gt;fab newpost:'Mon super post!'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En revanche, aucun problème pour faire &lt;code&gt;python newpost.py 'Mon super post!'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Le dernier petit truc pour pouvoir faire plus simplement &lt;code&gt;python newpost 'Mon super post!'&lt;/code&gt;, il suffit de créer un répertoire &lt;code&gt;newpost&lt;/code&gt; à la racine du blog, et de mettre notre script python dans ce répertoire en le nommant &lt;code&gt;__main__.py&lt;/code&gt;.&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Octopress"/><category term="Fabric"/><category term="slug"/><category term="slugify"/></entry><entry><title>Envoyer une notification utilisateur à partir d'une commande root</title><link href="https://letchap.github.io/2014/01/06/envoyer-une-notification-utilisateur-a-partir-d-une-commande-root/" rel="alternate"/><published>2014-01-06T22:36:00+01:00</published><updated>2014-01-06T22:36:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2014-01-06:/2014/01/06/envoyer-une-notification-utilisateur-a-partir-d-une-commande-root/</id><summary type="html">&lt;p&gt;Vous allez me dire, à quoi ça sert ? On ne devrait jamais se connecter en root ! C'est dangereux et cela signifie que les droits sont mal gérés. Si je veux envoyer une notification utilisateur, je lance la commande en tant qu'utilisateur, un point c'est tout. Malheureusement, cela ne fonctionne pas …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vous allez me dire, à quoi ça sert ? On ne devrait jamais se connecter en root ! C'est dangereux et cela signifie que les droits sont mal gérés. Si je veux envoyer une notification utilisateur, je lance la commande en tant qu'utilisateur, un point c'est tout. Malheureusement, cela ne fonctionne pas avec anacron qui ne s'exécute qu'en root, à moins de créer une instance non root spécialement &lt;a href="https://letchap.github.io/2013/10/25/lancer-anacron-comme-simple-utilisateur/"&gt;ce que je détaille ici&lt;/a&gt;. Et là patatras, un job lancé par anacron en root n'enverra jamais de message sur une session utilisateur.&lt;/p&gt;
&lt;p&gt;Pour la suite de l'article, il faut avoir en tête qu'à chaque utilisateur est associé une session du serveur X qui gère notammenent l'interface graphique. Par défaut, le root n'a pas le droit de se connecter au serveur X d'un utilisateur non-root.&lt;/p&gt;
&lt;p&gt;Heureusement, il est possible de forcer un job lancé en root à envoyer un message sur une session du serveur X. Pour cela nous allons modifier la variable d'environnement DISPLAY du root que nous allons fusionner avec celle de l'utilisateur le temps de l'exécution de la commande.&lt;/p&gt;
&lt;p&gt;La variable d'environnement DISPLAY contient les éléments suivants :
    &lt;code&gt;machine:numéro_display.numéro_écran&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pour un simple utilisateur comme moi, pas de nom de machine, un seul écran, elle va donc s'afficher avec &lt;code&gt;:0.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maintenant, comment rappatrier l'authentification au serveur X de l'utilisateur et le passer au root : en utilisant la commande &lt;code&gt;xauth&lt;/code&gt;. &lt;code&gt;xauth&lt;/code&gt; est utilisé pour éditer et fournir les authorisations d'un serveur X. Associé à la commande &lt;code&gt;merge&lt;/code&gt;, elle va permettre de récupérer les authorisations de l'utilisateur et les passer au root.&lt;/p&gt;
&lt;p&gt;Enfin, pour ne faire cette opération que le temps de l'exécution de la commande, nous allons utiliser la commande &lt;code&gt;env&lt;/code&gt; qui permet justement de définir une variable le temps de la commande.&lt;/p&gt;
&lt;p&gt;Un dernier point avant d'afficher la solution. Mais où récupère t-on les authorisations de l'utlisateur ?&lt;/p&gt;
&lt;p&gt;Pour cela, il faut connaître son gestionnaire d'affichage, ou Display Manager dans la langue de Stallman. Les plus connus sont gdm ou kdm. Bon sur Crunchbang, c'est slim (sur Archlinux aussi d'ailleurs). Pour s'en assurer, il suffit de faire :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/etc/X11/default-display-manager
/usr/bin/slim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Les informations qui nous intéressent vont se trouver dans le fichier &lt;code&gt;/etc/slim.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/etc/slim.conf
&lt;span class="c1"&gt;# Xauth file for server&lt;/span&gt;
authfile&lt;span class="w"&gt;           &lt;/span&gt;/var/run/slim.auth
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Voilà, les authorisations de l'utilisateur se trouvent dans le fichier &lt;code&gt;/var/run/slim.auth&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Il ne reste plus qu'à compiler tout ça, et la solution est :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;env&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;:0&lt;span class="w"&gt; &lt;/span&gt;xauth&lt;span class="w"&gt; &lt;/span&gt;merge&lt;span class="w"&gt; &lt;/span&gt;/var/run/slim.auth&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ma_commande
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Shell"/><category term="shell"/><category term="terminal"/><category term="slim"/><category term="crunchbang"/><category term="xauth"/></entry><entry><title>Programmer des travaux avec Automator et iCal</title><link href="https://letchap.github.io/2013/12/19/programmer-des-travaux-avec-automator-et-ical/" rel="alternate"/><published>2013-12-19T20:54:00+01:00</published><updated>2013-12-19T20:54:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-12-19:/2013/12/19/programmer-des-travaux-avec-automator-et-ical/</id><summary type="html">&lt;p&gt;Il y a toujours plusieurs façons de faire.&lt;/p&gt;
&lt;p&gt;Il y a quelques mois, nous avons vu comment programmer de manière périodique, sur Mac OS X, &lt;a href="https://letchap.github.io/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/"&gt;l'exécution d'un programme Python avec launchd&lt;/a&gt;, ce programme Python envoyant alors &lt;a href="https://letchap.github.io/2013/08/29/envoyer-une-notification-au-centre-de-notification-de-mountain-lion-avec-python/"&gt;une notification au centre de notification grâce à un décorateur&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Et bien, tout ça …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Il y a toujours plusieurs façons de faire.&lt;/p&gt;
&lt;p&gt;Il y a quelques mois, nous avons vu comment programmer de manière périodique, sur Mac OS X, &lt;a href="https://letchap.github.io/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/"&gt;l'exécution d'un programme Python avec launchd&lt;/a&gt;, ce programme Python envoyant alors &lt;a href="https://letchap.github.io/2013/08/29/envoyer-une-notification-au-centre-de-notification-de-mountain-lion-avec-python/"&gt;une notification au centre de notification grâce à un décorateur&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Et bien, tout ça ne sert à rien. Dans OS X Mavericks, la programmation périodique et l'envoi d'une notification peut se gérer grâce à Automator. Nous repartons de notre programme Python dans lequel nous enlevons tout ce qui concerne l'envoi d'une notification. Et voici comment programmer le tout :&lt;/p&gt;
&lt;h3&gt;Création d'un workflow calendrier dans iCal&lt;/h3&gt;
&lt;p&gt;Nous lançons Automator en choisissant "Alarme Calendrier"&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="automator" href="https://letchap.github.io/images/ical/automator.png" title="Automator"&gt;&lt;img alt="Automator" src="https://letchap.github.io/images/ical/automator.png" title="Automator"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Création d'un workflow Automator&lt;/h3&gt;
&lt;p&gt;Puis, nous définissons notre processus Automator avec l'execution d'un programme Ptyhon à partir du termenial et l'envoi d'une notification.&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="automator" href="https://letchap.github.io/images/ical/shell.png" title="Workflow Automator"&gt;&lt;img alt="Shell" src="https://letchap.github.io/images/ical/shell.png" title="Automator"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Sauvegarde du workflow&lt;/h3&gt;
&lt;p&gt;Nous enregistrons le processus qui va s'inscrire dans iCal.&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="automator" href="https://letchap.github.io/images/ical/save.png" title="Sauvegarde du Workflow"&gt;&lt;img alt="Save" src="https://letchap.github.io/images/ical/save.png" title="Save"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Dans iCal&lt;/h3&gt;
&lt;p&gt;Il ne reste plus qu'à programmer sa périodicité.&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="automator" href="https://letchap.github.io/images/ical/ical.png" title="iCal"&gt;&lt;img alt="iCal" src="https://letchap.github.io/images/ical/ical.png" title="iCal"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="automator" href="https://letchap.github.io/images/ical/periode.png" title="Périodicité"&gt;&lt;img alt="Périodicité" src="https://letchap.github.io/images/ical/periode.png" title="Périodicité"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;C'est plus simple, mais évidemment, beaucoup moins fun que de tout faire à la main.&lt;/p&gt;</content><category term="Mac OS X"/><category term="Mac OS X"/><category term="Mavericks"/><category term="Python"/><category term="Automator"/><category term="iCal"/><category term="notification center"/></entry><entry><title>Réaliser une galerie d'images avec Pelican et Bootstrap</title><link href="https://letchap.github.io/2013/12/11/realiser-une-galerie-dimages-avec-pelican-et-bootstrap/" rel="alternate"/><published>2013-12-11T11:54:00+01:00</published><updated>2013-12-11T11:54:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-12-11:/2013/12/11/realiser-une-galerie-dimages-avec-pelican-et-bootstrap/</id><summary type="html">&lt;p&gt;Nous allons voir aujourd'hui comment afficher les images sous forme de diaporama sur un site généré avec Pelican. L'idée est de rendre cliquable une image qui s'affiche alors au-dessus du site, et de faire défiler les images sous la forme d'un diaporama pour une galerie d'images. Vous avez un petit …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nous allons voir aujourd'hui comment afficher les images sous forme de diaporama sur un site généré avec Pelican. L'idée est de rendre cliquable une image qui s'affiche alors au-dessus du site, et de faire défiler les images sous la forme d'un diaporama pour une galerie d'images. Vous avez un petit exemple de ce que cela peut donner pour une image simple sur &lt;a href="https://letchap.github.io/2013/11/26/lancer-un-programme-python-depuis-automator/"&gt;un autre de mes billets&lt;/a&gt; ou pour &lt;a href="https://letchap.github.io/2013/04/09/virtualiser-mageia-2-sur-os-x-mountain-lion-avec-virtualbox/"&gt;une galerie sur un autre billet ici&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour cela, nous avons besoin du plugin Lightbox pour Bootstrap ainsi que de la possibilité offerte par Pelican d'utiliser les extensions pour markdown de Python.&lt;/p&gt;
&lt;p&gt;Cela ne s'applique que si vous utiliser la syntaxe Markdown pour rédiger vos billets. Je suppose que c'est également réalisable en syntaxe reStructuredTex.&lt;/p&gt;
&lt;h3&gt;Installer le plugin lightbox&lt;/h3&gt;
&lt;p&gt;Le plugin lightbox pour bootstrap est disponible &lt;a href="http://lokeshdhakar.com/projects/lightbox2/" title="Lightbox V2"&gt;à cette adresse&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Pour installer ligthbox dans votre thème pelican, il faut : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;copier le répertoire img dans le répertoire &lt;code&gt;/static&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;copier les fichiers jquery-1.10.2.min.js et lightbox-2.6.min.js dans le répertoire &lt;code&gt;/static/js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;copier lightbox.css dans le répertoire &lt;code&gt;/css&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;déclarer les scripts js et le fichier css dans le fichier base.hmtl&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/theme/js/jquery-1.10.2.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/theme/js/lightbox-2.6.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/theme/css/lightbox.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La syntaxe html pour activer lightbox est la suivante : &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/path/to/monimage.png&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-lightbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;monimage&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/path/to/monimage.png&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour avoir une galerie d'image, il suffit de toutes les déclarer avec la même attribut data-lightbox.&lt;/p&gt;
&lt;p&gt;Seulement, nous sommes sous Pelican, nous rédigeons en Markdown, nous n'allons pas insérer du code html dans notre fichier markdown quand même !!! Bien sûr, c'est tout à fait possible de le faire puisque markdown accepte du code html. Mais voyons comment tout faire en markdown.&lt;/p&gt;
&lt;h3&gt;Les extensions Markdown Python&lt;/h3&gt;
&lt;p&gt;Pour un petit cours de rattrapage sur la syntaxe Markdown, &lt;a href="https://letchap.github.io/2013/03/01/memo-markdown-en-francais/" title="memo markdown"&gt;c'est ici.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour rédiger notre texte entièrement en Markdown, nous allons devoir résoudre deux problèmes :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;créer un lien sur une image&lt;/li&gt;
&lt;li&gt;ajouter un attribut data-lightbox sur notre lien, ce que n'autorise pas nativement Markdown&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Créer un lien sur une image en Markdown&lt;/h4&gt;
&lt;p&gt;Pour créer un lien, la syntaxe Markdown est la suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lien&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ou&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pelican&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pour&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;un&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lien&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;interne&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lien&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monarticle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour insérer une image :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ou&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pelican&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour créer un lien sur une image, nous allons simplement combiner les deux &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)]({&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ce qui nous donnera bien en sortie html :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/path/to/monimage.png&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;path/to/monimage.png&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alt text&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Ajouter un attribut sur le lien&lt;/h4&gt;
&lt;p&gt;Comme je le disais en début d'article, il n'est pas possible nativement d'insérer un attribut sur un lien avec Markdown. Heureusement, les extensions Markdown pour Python offrent cette possibilité. Et Pelican inclus l'utilisation des extensions Markdown.&lt;/p&gt;
&lt;p&gt;Pour plus d'information sur les extensions Markdown, vous pouvez vous rendre sur &lt;a href="http://pythonhosted.org/Markdown/extensions/" title="Markdown Python"&gt;la documentation Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pour insérer un ou plusieurs attributs dans un lien, il ne reste plus qu'à écrire les accolades suivantes, sans espace avec les parenthèses :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lien&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lightbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;monimage&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ce qui se traduira par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;path/to/monimage.png&amp;quot; data-lightbox=&amp;quot;monimage&amp;quot; title=&amp;quot;Mon Image&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;On assemble le tout&lt;/h4&gt;
&lt;p&gt;Pour une image cliquable avec un effet diaporama, il faut donc écrire en Markdown :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Mon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]({&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monimage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lightbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;monimage&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour obtenir :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/path/to/monimage.png&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-lightbox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;monimage&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/path/to/monimage.png&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Mon Image&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bon, d'accord, ce n'est pas beaucoup plus simple, mais c'est tellement plus gratifiant.&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Bootstrap"/><category term="lightbox"/><category term="Markdown"/><category term="Python"/></entry><entry><title>Lancer un programme python depuis automator</title><link href="https://letchap.github.io/2013/11/26/lancer-un-programme-python-depuis-automator/" rel="alternate"/><published>2013-11-26T13:41:00+01:00</published><updated>2013-11-26T13:41:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-11-26:/2013/11/26/lancer-un-programme-python-depuis-automator/</id><summary type="html">&lt;p&gt;&lt;a href="https://letchap.github.io/2013/11/25/transformer-un-texte-chinois-en-pdf/"&gt;J'ai un joli script python qui me permet de décoder un texte chinois en UTF8 tout en le tranformant en pdf&lt;/a&gt;. Maintenant, j'aimerais bien pouvoir le lancer d'un simple clic droit, voir même plusieurs fichiers d'un coup.&lt;/p&gt;
&lt;p&gt;Pour cela, sur Mac OS X, il existe un utilitaire sympa, Automator. Il …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://letchap.github.io/2013/11/25/transformer-un-texte-chinois-en-pdf/"&gt;J'ai un joli script python qui me permet de décoder un texte chinois en UTF8 tout en le tranformant en pdf&lt;/a&gt;. Maintenant, j'aimerais bien pouvoir le lancer d'un simple clic droit, voir même plusieurs fichiers d'un coup.&lt;/p&gt;
&lt;p&gt;Pour cela, sur Mac OS X, il existe un utilitaire sympa, Automator. Il va nous permettre de créer un service qui lancera le traitement de notre ou de nos fichiers grâce à un clic droit.&lt;/p&gt;
&lt;p&gt;Des éléments complémentaires sont disponibles sur le site &lt;a href="https://developer.apple.com/library/mac/documentation/AppleApplications/Conceptual/AutomatorConcepts/Articles/ShellScriptActions.html"&gt;d'apple developper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour créer un service, je commence par choisir "service" dans automator puis, je choisis "exécuter un script Shell" &lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="automator" href="https://letchap.github.io/images/automator.png" title="Automator"&gt;&lt;img alt="Automator" src="https://letchap.github.io/images/automator.png" title="Automator"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A ce stade, vous avez deux possibilités : vous pouvez au choix saisir vos lignes de script python en sélectionnant /usr/bin/python dans l'interpréteur, ou alors vous pouvez préférez un script shell permettant de lancer le programme python. Je préfère nettement cette deuxième solution pour deux raisons : il n'existe qu'une seule version du programme python, et vous pouvez trapper les erreurs dans un fichier de log.&lt;/p&gt;
&lt;p&gt;Nous saisissons donc notre script d'appel au programme python en shell, tout en oubliant pas de sélectionner "fichier ou dossier", "dans n'importe quelle application" ainsi que "comme arguments".&lt;/p&gt;
&lt;p&gt;Pour passer le fichier d'entrée au programme python, nous utilisons la variable magique "$@".&lt;/p&gt;
&lt;p&gt;Pour débugger le programme, il est bien sûr possible de renvoyer les sorties standard et erreur vers un fichier de log par un petit &lt;code&gt;&amp;gt;&amp;gt; log 2&amp;gt;&amp;amp;1&lt;/code&gt;, ce qui peut s'avérer pratique.&lt;/p&gt;
&lt;p&gt;Pour traiter plusieurs fichiers en entrée, il suffit de faire une petite boucle for dans le script shell.&lt;/p&gt;
&lt;p&gt;Cerise sur le gateau, nous allons ajouter une petite notification en fin de traitement pour nous signaler que ce dernier est terminé. C'est beau.&lt;/p&gt;</content><category term="Mac OS X"/><category term="Mac OS X"/><category term="Mavericks"/><category term="Automator"/><category term="Python"/><category term="shell"/></entry><entry><title>Transformer un texte chinois en pdf</title><link href="https://letchap.github.io/2013/11/25/transformer-un-texte-chinois-en-pdf/" rel="alternate"/><published>2013-11-25T17:05:00+01:00</published><updated>2013-11-25T17:05:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-11-25:/2013/11/25/transformer-un-texte-chinois-en-pdf/</id><summary type="html">&lt;p&gt;Nous sommes tous confrontés un jour au problème de l'encodage, aka "c'est quoi tous ces hiéroglyphes bizarres dans mon document au lieu de mon beau texte en chinois (ou en suédois, en russe, en arabe, ou même en français....)?"&lt;/p&gt;
&lt;p&gt;Bon, je ne vais pas faire un cours sur l'encodage, sachez …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nous sommes tous confrontés un jour au problème de l'encodage, aka "c'est quoi tous ces hiéroglyphes bizarres dans mon document au lieu de mon beau texte en chinois (ou en suédois, en russe, en arabe, ou même en français....)?"&lt;/p&gt;
&lt;p&gt;Bon, je ne vais pas faire un cours sur l'encodage, sachez juste que si vous avez des hiéroglyphes, que vous êtes sur Mac ou Linux, il y a des fortes chances que votre document ne soit pas en unicode mais dans un encodage régional, comme par exemple pour un texte chinois GB2312 (chinois simplifié) ou BIG5 (chinois traditionnel).&lt;/p&gt;
&lt;p&gt;Qu'à cela ne tienne, nous allons convertir notre texte dans un format unicode universel, dans sa version UTF8. Et puis, pour pouvoir lire le texte en toute circonstance et sur toute plateforme, nous allons en faire un pdf&lt;/p&gt;
&lt;p&gt;Pour cela, nous allons utiliser deux bibliothèques tierces de Python, chardet qui permet de deviner l'encodage de notre fichier texte de départ (très pratique si nous ne le connaissons pas) et pyfpdf qui permet de créer un fichier pdf (plus simple à utiliser que reportlab). Les deux bibliothèques s'installent avec pip. la documentation pyfpdf est &lt;a href="http://code.google.com/p/pyfpdf/"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Allez, le programme python. Les commentaires sont dans le code.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf8 -*-&lt;/span&gt;
&lt;span class="c1"&gt;#---------------------&lt;/span&gt;
&lt;span class="c1"&gt;#txt2pdf.py&lt;/span&gt;
&lt;span class="c1"&gt;#Crée par letchap&lt;/span&gt;
&lt;span class="c1"&gt;#---------------------&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;chardet&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fpdf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FPDF&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decodage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

	&lt;span class="c1"&gt;# Je cherche l&amp;#39;encodage de mon fichier grâce à chardet&lt;/span&gt;
	&lt;span class="n"&gt;rawdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;codage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chardet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rawdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codage&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;encoding&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

	&lt;span class="c1"&gt;# Je prépare mon PDF, j&amp;#39;utilise pyfpdf&lt;/span&gt;
	&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FPDF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_page&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
	&lt;span class="c1"&gt;# J&amp;#39;utlise une jolie police de caractère dont je doit indiqué le chemin (sur Mac OSX)&lt;/span&gt;
	&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fireflysung&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/Library/Fonts/fireflysung.ttf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uni&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fireflysung&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="c1"&gt;# Je décode et j&amp;#39;encode mon texte&lt;/span&gt;
	&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="c1"&gt;# Je retravaille le nom du fichier&lt;/span&gt;
	&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# j&amp;#39;enlève le chemin&lt;/span&gt;
	&lt;span class="n"&gt;namefile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# j&amp;#39;enlève l&amp;#39;extension&lt;/span&gt;
	&lt;span class="c1"&gt;# Je finalise le pdf&lt;/span&gt;
	&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/path/to/new_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;namefile&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;#############################################################################################&lt;/span&gt;
&lt;span class="c1"&gt;#                           Le main                                                         #&lt;/span&gt;
&lt;span class="c1"&gt;#############################################################################################&lt;/span&gt;
&lt;span class="c1"&gt;# Je teste le nombre d&amp;#39;arguments de la ligne de commande&lt;/span&gt;
&lt;span class="c1"&gt;# 0 = premier paramètre, le nom du programme&lt;/span&gt;
&lt;span class="c1"&gt;# 1 = deuxième paramètre, ici le nom du fichier.&lt;/span&gt;
&lt;span class="c1"&gt;# Si j&amp;#39;ai strictement moins de 2 paramètres, j&amp;#39;ai oublié le nom de fichier&lt;/span&gt;
&lt;span class="c1"&gt;# Je sors alors en erreur sys.exit(1), (0 pas d&amp;#39;erreur, 2 erreur de synthaxe de la ligne de commande)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
		&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Précisez le fichier à décoder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
		&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
		&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
		&lt;span class="n"&gt;decodage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/txt2pdf.py" title="Télécharger txt2pdf.py"&gt;Télécharger txt2pdf.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Voilà, il n'y a plus qu'à lancer le programme par un beau&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./txt2pdf.py&lt;span class="w"&gt; &lt;/span&gt;montexte.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Evidemment, pour tout être normalement constitué, lancer un décodage de cette manière, en ligne de commande, ce n'est pas très pratique, un clic droit sur un ou plusieurs fichiers serait le bienvenue. C'est que nous allons faire tout de suite &lt;a href="https://letchap.github.io/2013/11/26/lancer-un-programme-python-depuis-automator/"&gt;dans ce billet&lt;/a&gt;&lt;/p&gt;</content><category term="Python"/><category term="UTF8"/><category term="decodage"/><category term="encodage"/><category term="GB2312"/><category term="BIG5"/><category term="python"/><category term="chardet"/><category term="pyfpdf"/></entry><entry><title>Lancer anacron comme simple utilisateur</title><link href="https://letchap.github.io/2013/10/25/lancer-anacron-comme-simple-utilisateur/" rel="alternate"/><published>2013-10-25T16:44:00+02:00</published><updated>2013-10-25T16:44:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-10-25:/2013/10/25/lancer-anacron-comme-simple-utilisateur/</id><summary type="html">&lt;p&gt;Sous Linux, il existe un utilitaire qui permet de déclencher des travaux de manière périodique. Il s'agit de cron. Cet utilitaire très pratique présente pour moi un énorme inconvient, il nécessite d'avoir un ordinateur constamment allumé. Heureusement, il existe un deuxième utilitaire anacron qui lui permet de lancer des travaux …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sous Linux, il existe un utilitaire qui permet de déclencher des travaux de manière périodique. Il s'agit de cron. Cet utilitaire très pratique présente pour moi un énorme inconvient, il nécessite d'avoir un ordinateur constamment allumé. Heureusement, il existe un deuxième utilitaire anacron qui lui permet de lancer des travaux a posteriori si l'ordinateur était éteint au moment du déclenchement programmé. Et là, autre petit soucis, anacron ne se lance qu'en root (contrairement à cron qui se lance en mode utilisateur).&lt;/p&gt;
&lt;p&gt;Heureusement, il est possible de créer un anacron non-root. Pour cela, il faut :&lt;/p&gt;
&lt;h3&gt;1) Créer un fichier anacrontab dans son répertoire personnel par exemple ~/user/etc/anacrontab, à l'image de celui présent dans /etc/anacrontab&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;anacrontab&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;anacron&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;See&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;anacron&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;anacrontab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;SHELL&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;sbin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;sbin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;sbin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;These&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;entries&lt;/span&gt;
&lt;span class="nv"&gt;@monthly&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;monprog&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;letchap&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monprog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;letchap&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;monprog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Les 4 champs à renseigner sont :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la période : ici, une fois par mois&lt;/li&gt;
&lt;li&gt;le délai : le temps d'attente après le démarrage de l'ordinateur avant de lancer les travaux&lt;/li&gt;
&lt;li&gt;la référence du travail (important pour le timestamp)&lt;/li&gt;
&lt;li&gt;la commande shell à lancer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2) Donner les droits utilisateur sur le répertoire contenant le "compteur" d'anacron, c'est à dire la date de dernière utilisation.&lt;/h3&gt;
&lt;p&gt;Pour cela, nous commençons par créer un group anacron dans /etc/group et nous y ajoutons notre user&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;addgroup&lt;span class="w"&gt; &lt;/span&gt;anacron
$&lt;span class="w"&gt; &lt;/span&gt;adduser&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;anacron
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis nous modifions les droits sur le fichier /var/spool/anacron&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;chown&lt;span class="w"&gt; &lt;/span&gt;root.anacron&lt;span class="w"&gt; &lt;/span&gt;/var/spool/anacron
$&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;g+w&lt;span class="w"&gt; &lt;/span&gt;/var/spool/anacron
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comme nous sommes dans le groupe anacron, tout va bien.&lt;/p&gt;
&lt;h3&gt;3) Ne reste plus qu'à lancer notre anacron au démarrage de l'ordinateur&lt;/h3&gt;
&lt;p&gt;Cela se fait dans le fichier .profile de l'utlisateur en ajoutant la ligne suivante&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/sbin/anacron -t $HOME/etc/anacrontab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour mémoire, la date à laquelle se déclenche le job mensuel se définie dans le fichier /etc/crontab/.&lt;/p&gt;</content><category term="Terminal"/><category term="cron"/><category term="anacron"/><category term="anacrontab"/><category term="terminal"/></entry><entry><title>Trucs et astuces Pelican</title><link href="https://letchap.github.io/2013/10/24/trucs-et-astuces-pelican/" rel="alternate"/><published>2013-10-24T21:24:00+02:00</published><updated>2013-10-24T21:24:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-10-24:/2013/10/24/trucs-et-astuces-pelican/</id><summary type="html">&lt;p&gt;Me voilà donc sous Pelican ! Il m'a fallu un petit moment pour arriver à un résultat publiable, la version par défaut de Pelican ne me convenant pas. Finalement, j'ai effectué un certain nombre de modifications, que ce soit dans la présentation, dans le fichier de configuration, dans les plugins ou …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Me voilà donc sous Pelican ! Il m'a fallu un petit moment pour arriver à un résultat publiable, la version par défaut de Pelican ne me convenant pas. Finalement, j'ai effectué un certain nombre de modifications, que ce soit dans la présentation, dans le fichier de configuration, dans les plugins ou même sur la procédure de publication des pages sur Github. Pour la procédure d'installation, je vous renvoie à la documentation officielle.&lt;/p&gt;
&lt;p&gt;Le plus compliqué pour moi a été la mise en forme des blocs de code avec pygments et le CSS associé pour que cela fontionne sur tous les navigateurs. J'ai fait beaucoup de modifications, si vous voulez plus de détails que ce qui est écrit, demandez moi !&lt;/p&gt;
&lt;p&gt;Et maintenant, petit tour d'horizon de ma customisation de Pelican. Vous trouverez les sources de mon thème sur mon &lt;a href="https://github.com/letchap/letchap.github.io/tree/source/mon-theme"&gt;compte github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Je suis parti sur la base du thème pelican-bootstrap3 qui se trouve dans le dépôt &lt;a href="https://github.com/getpelican/pelican-themes"&gt;pelican-theme&lt;/a&gt;. Ce thème est basé sur bootstrap, qui offre une mise en forme par défaut directement utilisable. J'ai choisi le thème spacelab disponible &lt;a href="http://bootswatch.com/spacelab/"&gt;à cette adresse sur bootswatch&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Le fichier base.html&lt;/h3&gt;
&lt;p&gt;J'ai d'abord modifié le ficher base.html pour y ajouter le nom de l'auteur (le mien en l'occurrence) dans le head puisque je suis l'unique auteur et je me passe ainsi du tag author dans les fichiers markdown contenant les articles.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;author&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ AUTHOR }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;J'ai également ajouté un banner pour y mettre le nom du blog et un sous-titre avant la barre de navigation dans le corps de la page.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cm"&gt;&amp;lt;!-- Banner&lt;/span&gt;
&lt;span class="cm"&gt;    ================================================== --&amp;gt;&lt;/span&gt;

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site-header&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;banner&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;row&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;col-lg-6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ SITENAME }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lead&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ SITESUBTITLE }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enfin j'ai ajouté un formulaire de recherche basé sur google et la possibilité de s'abonner à un flux RSS (voir plus bas).&lt;/p&gt;
&lt;h3&gt;Le fichier article.html&lt;/h3&gt;
&lt;p&gt;Du coup, j'ai aussi supprimé tout ce qui avait trait à l'auteur dans ce fichier.&lt;/p&gt;
&lt;h3&gt;Disqus&lt;/h3&gt;
&lt;p&gt;Bon, alors, j'ai galèré un peu à cause de l'adresse URL relative. En hébergeant mon site sur les pages Github, je suis obligé d'utiliser les URL relatives (j'ai essayé avec les URL absolues mais j'avais des liens bizarres). La conséquence est qu'il n'est pas possible de s'appuyer sur la variable SITEURL qui renvoie un &lt;code&gt;.&lt;/code&gt; dans les fichiers html. Et là, deux possibilités, soit utiliser une variable qui va stocker l'adresse du site (la même que celle que je vais créer un peu plus bas pour google), soit utiliser uniquement le slug de l'article (au sens Disqus, c'est à dire dans mon cas avec la date, c'est ce que j'ai paramétré dans pelicanconf.py dans ARTICLE_URL) comme identifiant Disqus, comme ce que j'ai finalement choisi de faire.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;disqus_identifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{{ article.url }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* * * DON&amp;#39;T EDIT BELOW THIS LINE * * */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;dsq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;dsq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;dsq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;dsq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://{{ DISQUS_SITENAME }}.disqus.com/embed.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dsq&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Par contre, attention, ce n'est pas très précis, et il ne faut pas avoir plusieurs discussions avec le même identifiant Disqus, ce qui peut arriver lors d'une migration de site, ou même, ce qui m'est arrivé, en testant le site localement en ayant activé Disqus. Pour avoir une base Disqus propre, j'ai finalement été obligé d'effacer entièrement mon compte Disqus et de tout réimporter. Un peu bourrin comme méthode mais efficace.&lt;/p&gt;
&lt;p&gt;Je verrai par la suite si je suis contraint d'utiliser un identifiant plus discriminant que le slug de l'article. Pour l'instant, ça suffit.&lt;/p&gt;
&lt;h3&gt;Les fichiers CSS&lt;/h3&gt;
&lt;p&gt;Par défaut, nous avons besoin de 3 fichiers CSS pour gérer le style bootstrap, les icones fontawesome et la coloration synthaxique :
- bootstrap.min.css
- fontawesome.min.css
- pygments.css&lt;/p&gt;
&lt;p&gt;Toutes les modifications ou surcharges sont à faire dans un fichier spécifique qui est nommé style.css dans le thème bootstrap3 et que j'ai un peu adapté à mes besoins, surtout pour les insertions de blocs de code. Tous les commentaires sont dans le code.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;/* Fichier de personalisation de bootstrap */&lt;/span&gt;

&lt;span class="c"&gt;/* Modification du style pour afficher le code&lt;/span&gt;
&lt;span class="c"&gt;   Fond jaune, pas de retour à ligne, débordement par ascenceur horizontal,&lt;/span&gt;
&lt;span class="c"&gt;   largeur fixe de tableau et de colonnes pour le code avec numéro de ligne,&lt;/span&gt;
&lt;span class="c"&gt;   et alignement des colonnes en haut du tableau */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;highlight&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#fdf6e3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;linenodiv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;white-space&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;auto&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;highlighttable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;table-layout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;vertical-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;top&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;linenos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="kt"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;well&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Modification du style des liens  */&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;focus&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mh"&gt;#3399f3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;none&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Ajout d&amp;#39;un style pour le header  */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;site-header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;	&lt;/span&gt;&lt;span class="k"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;solid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#eee&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Modification du style des liens pour le bloc aside */&lt;/span&gt;

&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;list-group-item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;list-group-item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;focus&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#3399f3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/style.css" title="Télécharger style.css"&gt;Télécharger style.css&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Une exception que je n'ai pas réussi à gérer dans style.css, j'ai supprimé dans le fichier bootstrap.css, pour la balise pre, la mise en forme word-wrap: word-break. Sinon, impossible d'avoir un ascenseur horizontal dans le bloc de code.&lt;/p&gt;
&lt;h3&gt;RSS&lt;/h3&gt;
&lt;p&gt;J'ai commencé par paramétrer un flux RSS dans le fichier de configuration, que j'ai rendu accessible dans ma barre de navigation. Je n'ai pas vraiment suivi les recommandations de la documentation, j'ai plutôt fait une adaptation à ma sauce.&lt;/p&gt;
&lt;p&gt;Tout d'abord, dans le fichier pelicanconf.py, j'ai simplement ajouté une ligne, ce qui ne génèrera qu'un seul fichier atom.xml pour tous les posts, c'est largement suffisant, pas besoin de catégories ni de sous-dossier feed.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;FEED_ALL_ATOM = &amp;#39;atom.xml&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;LE PLUS IMPORTANT&lt;/strong&gt; est dans le fichier base.html. Il ne faut surtout, surtout, surtout pas faire ce qui est écrit partout, à savoir paramétrer le lien RSS avec l'adresse du site comme ceci :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/{{ FEED_ALL_ATOM }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/atom+xml&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;subscribe-rss&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Subscribe via RSS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-rss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il faut impérativement le paramètrer sans référence au site comme celà :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/{{ FEED_ALL_ATOM }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/atom+xml&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;subscribe-rss&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Subscribe via RSS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-rss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sinon, le risque est d'avoir des liens vers les articles tous bizarres dans les aggrégateurs de flux.&lt;/p&gt;
&lt;h3&gt;La recherche sur le site avec google&lt;/h3&gt;
&lt;p&gt;Le fichier de configuration est un outil magique car il permet de définir ses propres variables réutilisables dans les fichiers html. Je m'en suis servi pour créer deux variables permettant une recherche sur mon site grâce à google.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SIMPLE_SEARCH = &amp;#39;http://google.com/search&amp;#39;
ABSURL = &amp;#39;letchap.github.io&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis, j'ai ajouté un formulaire de recherche dans la barre de navigation en ajoutant les lignes suivantes dans le fichier base.html.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav navbar-nav navbar-right&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/archives.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-th-list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Archives&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/{{ FEED_ALL_RSS }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/atom+xml&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;subscribe-rss&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Subscribe via RSS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-rss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;navbar-form navbar-right&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SIMPLE_SEARCH }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt; &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;q&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site:{{ ABSURL }}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;  
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;search&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;form-control col-lg-8&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;q&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Search&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;  
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Les plugins&lt;/h3&gt;
&lt;p&gt;La liste des plugins est disponible sur &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Je n'utilise qu'un seul plugin, celui permet d'insérer et de télécharger du code dont le petit nom est include_code.py. Il a un petit problème, il ne cause pas français, ou UTF-8 si vous préférez. J'ai donc été obligé de modifier légèrement le code à 3 endroits pour qu'il accepte les accents (d'djiou!).&lt;/p&gt;
&lt;p&gt;J'ai ajouté &lt;code&gt;# -*- coding: utf-8 -*-&lt;/code&gt; en tête du fichier&lt;/p&gt;
&lt;p&gt;J'ai remplacé&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;par&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enfin, j'ai remplacé&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;open_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;figure class=&amp;#39;code&amp;#39;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;figcaption&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{title}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/span&amp;gt; &amp;quot;&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;&amp;lt;a href=&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{url}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;gt;download&amp;lt;/a&amp;gt;&amp;lt;/figcaption&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                               &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;close_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/figure&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;par&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;open_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;figure&amp;gt;&amp;lt;figcaption class=&amp;#39;well well-sm&amp;#39;&amp;gt;&amp;lt;span style=&amp;#39;text-align: left&amp;#39;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{title}&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;            &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;float: right&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{url}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Télécharger&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;figcaption&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.format(title=title,url=url)&lt;/span&gt;
&lt;span class="n"&gt;close_tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/figure&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;La publication de mes pages Github et de mes sources&lt;/h3&gt;
&lt;p&gt;Le sujet méritait un billet dédié. Il est disponible &lt;a href="https://letchap.github.io/2013/10/16/gerer-la-publication-et-les-sources-dun-site-pelican-sur-github/" title="Gérer la publication et les sources d'un site Pelican sur Github"&gt;ici&lt;/a&gt;.&lt;/p&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Python"/><category term="Bootstrap"/><category term="CSS"/><category term="Git"/></entry><entry><title>Gérer la publication et les sources d'un site Pelican sur Github</title><link href="https://letchap.github.io/2013/10/16/gerer-la-publication-et-les-sources-dun-site-pelican-sur-github/" rel="alternate"/><published>2013-10-16T21:01:00+02:00</published><updated>2013-10-16T21:01:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-10-16:/2013/10/16/gerer-la-publication-et-les-sources-dun-site-pelican-sur-github/</id><summary type="html">&lt;p&gt;Début d'une série de billets sur la création d'un site avec le générateur de site statique Pelican. Je commence par la fin. Comment publier son site sur github, ainsi que les sources ayant permis de créer le site ? Je traiterai de la création proprement dite du site avec Pelican dans …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Début d'une série de billets sur la création d'un site avec le générateur de site statique Pelican. Je commence par la fin. Comment publier son site sur github, ainsi que les sources ayant permis de créer le site ? Je traiterai de la création proprement dite du site avec Pelican dans un prochain billet.&lt;/p&gt;
&lt;p&gt;Nous démarrons donc ce billet à partir du moment où vous avez finalisé le paramètrage de Pelican et que vous voulez publier vos pages.&lt;/p&gt;
&lt;p&gt;Mon objectif était d'avoir une facilité de publication assez similaire à celle offerte par Octopress. A partir d'un même dépôt distant, je veux disposé d'une branche contenant le site à déployer et d'une branche content les sources de mon site. Cela est très utile pour blogger depuis plusieurs ordinateurs. Je veux pouvoir mettre à jour facilement ces deux branches, indépendemment l'une de l'autre, mais toujours à partir d'un unique dépôt local. Le tout doit être exécutable en un minimum de lignes de commande. &lt;/p&gt;
&lt;p&gt;Dernier élément, je veux conserver l'adresse letchap.github.io, ce qui m'oblige à passer par une publication de pages Github en mode "pages utilisateur"&lt;/p&gt;
&lt;p&gt;C'est parti !&lt;/p&gt;
&lt;p&gt;Je commence par me placer dans le répertoire contenant les sources et le site. Je l'ai appelé de manière très originale &lt;code&gt;blog&lt;/code&gt;. Il doit contenir les répertoires content et output (obtenu par la commande &lt;code&gt;make html&lt;/code&gt;):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blog
/blog$&lt;span class="w"&gt; &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-l
drwxr-xr-x&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:00&lt;span class="w"&gt; &lt;/span&gt;content
-rwxr-xr-x&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2073&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;août&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:58&lt;span class="w"&gt; &lt;/span&gt;develop_server.sh
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3076&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;août&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:58&lt;span class="w"&gt; &lt;/span&gt;Makefile
drwxr-xr-x&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:16&lt;span class="w"&gt; &lt;/span&gt;mon-theme
drwxr-xr-x&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:06&lt;span class="w"&gt; &lt;/span&gt;output
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1537&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:16&lt;span class="w"&gt; &lt;/span&gt;pelicanconf.py
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1625&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:33&lt;span class="w"&gt; &lt;/span&gt;pelicanconf.pyc
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:57&lt;span class="w"&gt; &lt;/span&gt;pelican.pid
drwxr-xr-x&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;:50&lt;span class="w"&gt; &lt;/span&gt;plugins
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;508&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;août&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:58&lt;span class="w"&gt; &lt;/span&gt;publishconf.py
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt; &lt;/span&gt;letchap&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;oct.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:57&lt;span class="w"&gt; &lt;/span&gt;srv.pid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sous mon identifiant sur le site github.com, je créé un dépôt &lt;code&gt;letchap.github.io&lt;/code&gt;, avec comme nom obligatoirement monuser.github.io. Et je n'y touche plus.&lt;/p&gt;
&lt;p&gt;Retour dans le terminal, où j'initialise mon dépôt local, que je lie ensuite au dépôt distant.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;init
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;git@github.com:letchap/letchap.github.io.git
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;you@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je vais maintenant créer une branche source qui va contenir les sources de mon site, c'est à dire tout sauf le dossier output qui lui contient le site à déployer. Pour exclure le sous-dossier output, j'ai pris soin de créer un fichier .gitignore contenant le dossier output (plus quelques fichiers sans intérêt)&lt;/p&gt;
&lt;p&gt;Contenu de .gitignore&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;output
*.pyc
*.pid
Makefile
develop_server.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour créer ma branche source, j'utilise une procédure normalement pas très orthodoxe : je créé une branche master vide que je renomme en source, et je l'alimente avec tout le contenu de mon répertoire blog sauf le contenu de .gitignore. Je peux alors envoyer mes sources dans mon dépôt distant github sur une branche source.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;--allow-empty&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;initial commit&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#je crée master vide&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;branch&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;master&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#je renomme master en source&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;creation du source&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#j&amp;#39;alimente la branche source&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#j&amp;#39;envoie les sources sur le dépôt distant&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maintenant le site proprement dit !&lt;/p&gt;
&lt;p&gt;Rappelez - vous, toutes les pages sont contenues dans le dossier output. Pour créer et alimenter une branche gh-pages, nous allons utiliser l'utilitaire ghp-import qui s'installe par un &lt;code&gt;pip install ghp-import&lt;/code&gt;. Je ne sais pas comment ça fonctionne mais cela créé ou met à jour une branche gh-pages avec le contenu du dossier output. Hyper pratique. Il ne reste plus qu'à pousser cette branche sur la branche master de notre dépôt distant (qui se créé à cette occasion).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# génère le dossier output avec le contenu du site&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;ghp-import&lt;span class="w"&gt; &lt;/span&gt;output
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;gh-pages:master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Voilà, l'installation est terminée ! Pour la suite de la vie du blog, la mise à jour des sources se fera par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;message&amp;#39;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;et la mise à jour des pages du site se fera par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;html
$&lt;span class="w"&gt; &lt;/span&gt;ghp-import&lt;span class="w"&gt; &lt;/span&gt;output
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;gh-pages:master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;C'est magique !&lt;/p&gt;
&lt;p&gt;Si vous souhaitez blogger depuis un autre ordinateur, il suffit de cloner la branche source distante en local après l'avoir préalablement mise à jour, de supprimer la branche master distante qui contient le site, de regénérer localement la branche gh-pages et de la pousser sur une nouvelle branche master distante,  ce qui donne :&lt;/p&gt;
&lt;p&gt;Sur le premier ordinateur :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blog
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;je vais blogger ailleurs&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sur le deuxième ordinateur :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nd"&gt;@github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;letchap&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;letchap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# cela supprime la branche master distante&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;output&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Pelican"/><category term="Pelican"/><category term="Github"/></entry><entry><title>Envoyer une notification au centre de notification de Mountain Lion avec Python</title><link href="https://letchap.github.io/2013/08/29/envoyer-une-notification-au-centre-de-notification-de-mountain-lion-avec-python/" rel="alternate"/><published>2013-08-29T21:20:00+02:00</published><updated>2013-08-29T21:20:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-08-29:/2013/08/29/envoyer-une-notification-au-centre-de-notification-de-mountain-lion-avec-python/</id><summary type="html">&lt;p&gt;&lt;a href="https://letchap.github.io/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/" title="Démarrage automatique de travaux avec launchd"&gt;Dans mon dernier article&lt;/a&gt;, nous avons vu comment programmer le déclenchement périodique d'un programme dans Mountain Lion grace à l'utilitaire launchd. J'aimerais maintenant être averti de la bonne exécution de mon programme via le centre de notifciation de Mountain Lion.&lt;/p&gt;
&lt;p&gt;Ce qui est décrit ci-dessous est librement inspiré de cet …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://letchap.github.io/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/" title="Démarrage automatique de travaux avec launchd"&gt;Dans mon dernier article&lt;/a&gt;, nous avons vu comment programmer le déclenchement périodique d'un programme dans Mountain Lion grace à l'utilitaire launchd. J'aimerais maintenant être averti de la bonne exécution de mon programme via le centre de notifciation de Mountain Lion.&lt;/p&gt;
&lt;p&gt;Ce qui est décrit ci-dessous est librement inspiré de cet &lt;a href="http://dbader.org/blog/alfred-timer-extension" title="A countdown timer extension for Alfred"&gt;article en anglais&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pour pouvoir envoyer un message dans le centre de notification de Mountain Lion et afficher une pop-up, il faut obligatoirement que l'application soit reconnu par Apple via le "bundle identifier". Pour mon petit programme Python à moi, je ne vais pas demander un identifiant, alors pour pouvoir malgré tout envoyer un message, je vais adopter la stratégie du coucou et emprunter un bundle identifier existant. Par exemple celui de du programme Python Launcher (puisque que je lance un programme Python). Je vais donc faire croire au centre de notification que c'est l'application Python Launcher qui envoie un message.&lt;/p&gt;
&lt;p&gt;Tout d'abord, comment récupérer le bundler identifier? Avec la commande suivante dans le terminal :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;osascript&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id of app &amp;quot;Python Launcher&amp;quot;&amp;#39;&lt;/span&gt;
org.python.PythonLauncher
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maintenant, décorons !&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;
&lt;span class="normal"&gt;64&lt;/span&gt;
&lt;span class="normal"&gt;65&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;objc&lt;/span&gt;

&lt;span class="c1"&gt;########################################################################&lt;/span&gt;
&lt;span class="c1"&gt;#                             Le décorateur                            #&lt;/span&gt;
&lt;span class="c1"&gt;########################################################################&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;swizzle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Decorator to override an ObjC selector&amp;#39;s implementation with a&lt;/span&gt;
&lt;span class="sd"&gt;    custom implementation (&amp;quot;method swizzling&amp;quot;).&lt;/span&gt;

&lt;span class="sd"&gt;    Use like this:&lt;/span&gt;

&lt;span class="sd"&gt;    @swizzle(NSOriginalClass, &amp;#39;selectorName&amp;#39;)&lt;/span&gt;
&lt;span class="sd"&gt;    def swizzled_selectorName(self, original):&lt;/span&gt;
&lt;span class="sd"&gt;        --&amp;gt; `self` points to the instance&lt;/span&gt;
&lt;span class="sd"&gt;        --&amp;gt; `original` is the original implementation&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SEL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;old_IMP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instanceMethodForSelector_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;old_IMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;new_IMP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selector&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;old_IMP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;old_IMP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;objc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;classAddMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_IMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;


&lt;span class="nd"&gt;@swizzle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;objc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lookUpClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NSBundle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bundleIdentifier&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;swizzled_bundleIdentifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;original&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Swizzle [NSBundle bundleIdentifier] to make NSUserNotifications&lt;/span&gt;
&lt;span class="sd"&gt;    work.&lt;/span&gt;

&lt;span class="sd"&gt;    To post NSUserNotifications OS X requires the binary to be packaged&lt;/span&gt;
&lt;span class="sd"&gt;    as an application bundle. To circumvent this restriction, as it would&lt;/span&gt;
&lt;span class="sd"&gt;    be difficult (impossible?) to implement in an Alfred Extension,&lt;/span&gt;
&lt;span class="sd"&gt;    we modify `bundleIdentifier` to return a fake bundle identifier.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# Return Python Launcher&amp;#39;s bundle identifier to display the Python Launcher logo.&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;org.python.PythonLauncher&amp;#39;&lt;/span&gt;



&lt;span class="c1"&gt;########################################################################&lt;/span&gt;
&lt;span class="c1"&gt;#      L&amp;#39;envoi de la noticiation au centre de notification             #&lt;/span&gt;
&lt;span class="c1"&gt;########################################################################&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Display a NSUserNotification on Mac OS X &amp;gt;= 10.8&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;NSUserNotification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lookUpClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NSUserNotification&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;NSUserNotificationCenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lookUpClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NSUserNotificationCenter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;notification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NSUserNotification&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;notification&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setTitle_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;notification&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setInformativeText_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;NSUserNotificationCenter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;defaultUserNotificationCenter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deliverNotification_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/decorateur.py" title="Télécharger decorateur.py"&gt;Télécharger decorateur.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Le principe de base est de "décorer" la fonction renvoyant le bundle identifier, c'est à dire que nous affectons son comportement temporairement (mais sans la modifier), pour qu'elle renvoie l'identifiant que nous lui passons. Pour cela, nous utilisons un décorateur Python. Pour plus d'informations sur le fonctionnement des décorateurs, vous pouvez aller sur le &lt;a href="http://www.siteduzero.com/informatique/tutoriels/apprenez-a-programmer-en-python/les-decorateurs" title="Les décorateurs Python"&gt;site du zéro&lt;/a&gt; ou sur &lt;a href="http://sametmax.com/comprendre-les-decorateurs-python-pas-a-pas-partie-1/" title="Les décorateurs Python première partie"&gt;le blog de Sam et Max&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ensuite dans la fonction notify(), nous envoyons un message au centre de notification de Mountain Lion qui pensera que c'est l'application Python Launcher qui envoie le flux. Colossale feinte de sioux !&lt;/p&gt;
&lt;p&gt;Le résultat en image&lt;/p&gt;
&lt;p&gt;&lt;img alt="exemple notification" src="https://letchap.github.io/images/notif.png"&gt;&lt;/p&gt;
&lt;p&gt;Le tout s'appuie sur le projet PyObjC qui développe une passerelle entre Python et ObjC et dont vous trouverez la documentation &lt;a href="http://pythonhosted.org/pyobjc/" title="Python ObjC"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Contrairement au paquet pync (un wrapper Python de terminal-notifier qui permet d'envoyer des messages au centre de notification depuis le terminal) qui ne sait pas envoyer des messages hors d'une session du terminal, ici, il sera possible d'envoyer des notifications même si le programme est déclenché en mode batch par launchd.&lt;/p&gt;
&lt;p&gt;Voilà, c'est tout pour Mac OS X pour le moment, la prochaine fois, retour sur Linux.&lt;/p&gt;
&lt;p&gt;Pour la petite histoire, ce qu'on vient de faire tient en trois lignes de code sous Linux grâce à la bibliothèque pynotify :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Free.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Titre&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# Titre&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# Message&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;/home/letchap/Image/application_pdf.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Image&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</content><category term="Mac OS X"/><category term="PyObjC"/><category term="Python"/><category term="Mac OS X"/><category term="Mountain Lion"/></entry><entry><title>Démarrage automatique de travaux avec launchd</title><link href="https://letchap.github.io/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/" rel="alternate"/><published>2013-08-08T23:04:00+02:00</published><updated>2013-08-08T23:04:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-08-08:/2013/08/08/demarrage-automatique-de-travaux-avec-launchd/</id><summary type="html">&lt;p&gt;Aujourd'hui nous allons (temporairement) quitter le monde GNU/Linux pour celui de Mac OS X et voir comment réaliser l'équivalent de cron / anacron sur OS X avec l'utilitaire launchd. &lt;/p&gt;
&lt;p&gt;Le besoin de départ est de lancer tous les mois à date fixe un programme python, y compris au redémarrage du …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Aujourd'hui nous allons (temporairement) quitter le monde GNU/Linux pour celui de Mac OS X et voir comment réaliser l'équivalent de cron / anacron sur OS X avec l'utilitaire launchd. &lt;/p&gt;
&lt;p&gt;Le besoin de départ est de lancer tous les mois à date fixe un programme python, y compris au redémarrage du Mac si celui est éteint le jour du lancement programmé (ce dernier point n'est d'ailleurs pas permis nativement par le couple cron / anacron).&lt;/p&gt;
&lt;p&gt;Pour rédiger cet article, je me suis inspiré d'une part de &lt;a href="http://nathangrigg.net/2012/07/schedule-jobs-using-launchd/" title="Schedule jobs using launchd"&gt;ce post en anglais&lt;/a&gt; et d'autre part de la &lt;a href="http://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html" title="Création de démons et d'agents sur OS X"&gt;documentation apple sur launchd et la création d'agents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Le principe de fonctionnement est le suivant : au démarrage du Mac, l'utilitaire Mac OS X launchd liste l'ensemble des travaux faisant l'objet d'un lancement programmé. Et pour programmer un lancement automatique, il va nous falloir deux éléments :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;un agent permettant de déclencher le travail en question &lt;/li&gt;
&lt;li&gt;puis ajouter notre agent à la liste des travaux programmés.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;L'agent : le fichier de configuration plist&lt;/h3&gt;
&lt;p&gt;L'agent va se définir dans un fichier xml avec une extension plist. Ce fichier contient des informations sur le programme à lancer avec ses éventuels paramètres de lancement ainsi que les informations sur la fréquence de déclenchement. &lt;/p&gt;
&lt;p&gt;Les fichiers plist que vous allez créer sont à stocker de préférence dans le répertoire ~/Library/LaunchAgents. Le gros avantage de les créer à cet endroit est que vos agents launchd seront pris en compte automatiquement au démarrage du Mac.&lt;/p&gt;
&lt;p&gt;La convention de nommage d'un fichier plist est de prendre un nom de domaine à l'envers. Ici, comme mon programme python récupère les factures freebox, je l'ai simplement appelé fr.free.facture.plist.&lt;/p&gt;
&lt;p&gt;Détaillons un peu le fichier plist :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;plist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Label&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;fr.free.facture&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProgramArguments&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;/usr/bin/python&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;/usr/local/bin/free.py&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;StartCalendarInterval&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Hour&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;7&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Minute&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Day&lt;span class="nt"&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;integer&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/integer&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Les 3 premières lignes sont des informations d'entête, en particulier, nous voyons que nous avons bien à faire à un format xml. Ces lignes d'entête peuvent être reprises sans modification.&lt;/p&gt;
&lt;p&gt;La partie intéressante se situe après.&lt;/p&gt;
&lt;p&gt;D'abord, en lignes 5 et 6  nous nommons notre agent (avec le même nom que le fichier, c'est plus simple).&lt;/p&gt;
&lt;p&gt;Puis nous donnons des informations sur le programme à lancer. Et là : &lt;strong&gt;ATTENTION !!!!&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Il faut absolument mettre les chemins sous forme absolue et non relative si vous ne voulez pas vous embêter avec le PATH de launchd,&lt;/li&gt;
&lt;li&gt;Il faut absolument lui donner le chemin vers l'interpréteur python.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si vous ne faites pas ça, vous allez pouvoir lancer votre agent à la main depuis le terminal (ce que nous allons voir juste après) et cela va très bien se passer, et vous ne comprendrez pas pourquoi cela ne fonctionne pas au démarrage de l'ordinateur. Les chemins complets vers le programme et l'interpréteur vous éviterons quelques migraines.&lt;/p&gt;
&lt;p&gt;Enfin, nous renseignons les éléments de périodicité. Dans cet exemple, nous déclenchons notre programme tous les 6 du mois à 7h00. Le fait que le mois ne soit pas renseigné signifie "tous les mois".&lt;/p&gt;
&lt;p&gt;Il est possible de renseigner d'autres types de fréquence, par exemple tous les 90 secondes, ainsi que tout un tas d'options. Le plus simple est de se référer à la documentation apple sur launchd (voir le lien en début d'article).&lt;/p&gt;
&lt;h3&gt;Ajout à la liste des travaux programmés&lt;/h3&gt;
&lt;p&gt;Il existe deux façons d'ajouter notre agent la liste des travaux pris en charge par launchd.&lt;/p&gt;
&lt;p&gt;La première, que je ai déjà évoqué, est de placer le fichier plist dans le bon répertoire, à savoir ~/Library/LaunchAgents. La seule contrainte est de redémarrer l'ordinateur pour prise en compte de l'agent.&lt;/p&gt;
&lt;p&gt;Si vous n'avez pas envie d'attendre jusqu'au prochain reboot, ou même si vous souhaitez tester votre agent, il existe un utilitaire disponible à partir du terminal et permettant de gérer ses agents, launchctl :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ launchctl list&lt;/code&gt; permet de lister les agents actifs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ launchctl load /chemin/vers/monagent.plist&lt;/code&gt; permet de charger l'agent dans la liste prise en compte par launchd, le programme sera alors démarrer avec la périodicité définie dans le fichier plist. Si vous avez le moindre message d'erreur au chargement, c'est que le fichier plist est mal formaté.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ launchctl start monagent&lt;/code&gt; permet de déclencher manuellement et immédiatement l'agent. Cela permet de tester son bon fonctionnement. Ici, c'est le nom de l'agent que nous donnons, pas le nom du fichier.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maintenant que mon programme tourne tout seul sans que j'intervienne, j'aimerais qu'il m'envoie un petit message dans le centre de notification pour dire qu'il a bien travaillé, ce sera l'objet du prochain article, et après retour à GNU/Linux.&lt;/p&gt;</content><category term="Mac OS X"/><category term="Mac OS X"/><category term="launchd"/><category term="launchctl"/><category term="plist"/><category term="cron"/><category term="anacron"/></entry><entry><title>Mémo raccourci clavier Unix</title><link href="https://letchap.github.io/2013/07/15/memo-raccourci-clavier-unix/" rel="alternate"/><published>2013-07-15T20:54:00+02:00</published><updated>2013-07-15T20:54:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-07-15:/2013/07/15/memo-raccourci-clavier-unix/</id><content type="html">&lt;p&gt;Une petite compilation personnel des raccourcis clavier pour Unix sous une console ou un terminal, &lt;a href="https://letchap.github.io/downloads/raccourciunix.pdf" title="raccourcis unix"&gt;en téléchargement ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="raccourci unix" src="https://letchap.github.io/images/raccourciunix.png"&gt;&lt;/p&gt;</content><category term="Terminal"/><category term="Terminal"/><category term="Unix"/><category term="raccourci clavier"/><category term="Linux"/></entry><entry><title>Afficher la meteo avec conky et python 3ème partie</title><link href="https://letchap.github.io/2013/07/10/afficher-la-meteo-avec-conky-et-python-3eme-partie/" rel="alternate"/><published>2013-07-10T22:43:00+02:00</published><updated>2013-07-10T22:43:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-07-10:/2013/07/10/afficher-la-meteo-avec-conky-et-python-3eme-partie/</id><summary type="html">&lt;p&gt;Dans les deux premiers épisodes de ce tutoriel, &lt;a href="https://letchap.github.io/2013/07/08/afficher-la-meteo-avec-conky-et-python-1ere-partie/"&gt;nous avons créé un programme python&lt;/a&gt; récupérant les informations météo sur le site de &lt;a href="http://www.wunderground.com/"&gt;wunderground&lt;/a&gt;, puis nous avons automatisé ce script &lt;a href="https://letchap.github.io/2013/07/09/afficher-la-meteo-avec-conky-et-python-2eme-partie/"&gt;afin qu'il se lance au démarrage de notre session&lt;/a&gt;. Il ne reste plus qu'à afficher les informations sur notre bureau.&lt;/p&gt;
&lt;p&gt;Pour …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Dans les deux premiers épisodes de ce tutoriel, &lt;a href="https://letchap.github.io/2013/07/08/afficher-la-meteo-avec-conky-et-python-1ere-partie/"&gt;nous avons créé un programme python&lt;/a&gt; récupérant les informations météo sur le site de &lt;a href="http://www.wunderground.com/"&gt;wunderground&lt;/a&gt;, puis nous avons automatisé ce script &lt;a href="https://letchap.github.io/2013/07/09/afficher-la-meteo-avec-conky-et-python-2eme-partie/"&gt;afin qu'il se lance au démarrage de notre session&lt;/a&gt;. Il ne reste plus qu'à afficher les informations sur notre bureau.&lt;/p&gt;
&lt;p&gt;Pour cela, nous allons devoir :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;créer un conky météo (plusieurs en fait)&lt;/li&gt;
&lt;li&gt;créer un petit programme bash de démarrage / arrêt du conky météo&lt;/li&gt;
&lt;li&gt;créer les entrées de ce petit programme, dans le fichier menu.xml pour le menu openbox, et dans le fichier rc.xml pour les touches de raccourcis&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Les icones&lt;/h3&gt;
&lt;p&gt;Je suis allé les chercher chez &lt;a href="http://merlinthered.deviantart.com"&gt;merlinthered sur devianart&lt;/a&gt;. Je les ai renommées en fonction du nom que je leur ai donné dans le programme python.&lt;/p&gt;
&lt;h3&gt;Le conky&lt;/h3&gt;
&lt;p&gt;Conky va nous permettre d'afficher sur le bureau les informations meteo contenu dans le fichier texte alimenté par le programme python&lt;/p&gt;
&lt;p&gt;Tout d'abord, il faut installer conky. Sur Crunchbang, il est installé par défaut, sinon &lt;code&gt;sudo apt-get install conky&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ensuite, nous allons réaliser non pas un mais quatre script conky, un par jour de prévision. Conky ne sait pas gérer les colonnes, à moins de bidouiller avec la commande ${goto}. Donc nous allons coller quatre conky pour réaliser une jolie présentation.&lt;/p&gt;
&lt;p&gt;Voilà, à la suite, les quatre fichiers. Ces fichiers sont à copier dans le répertoire /home/monuser/.conky/ :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Paramètres
##############################################
background&lt;span class="w"&gt; &lt;/span&gt;yes
use_xft&lt;span class="w"&gt; &lt;/span&gt;yes
xftfont&lt;span class="w"&gt; &lt;/span&gt;Walkway:size=9
xftalpha&lt;span class="w"&gt; &lt;/span&gt;1
update_interval&lt;span class="w"&gt; &lt;/span&gt;1.0
total_run_times&lt;span class="w"&gt; &lt;/span&gt;0
own_window&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_transparent&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_type&lt;span class="w"&gt; &lt;/span&gt;desktop
own_window_hints&lt;span class="w"&gt; &lt;/span&gt;undecorated,sticky,skip_taskbar,skip_pager
double_buffer&lt;span class="w"&gt; &lt;/span&gt;yes
minimum_size&lt;span class="w"&gt; &lt;/span&gt;560&lt;span class="w"&gt; &lt;/span&gt;200
maximum_width&lt;span class="w"&gt; &lt;/span&gt;560
draw_shades&lt;span class="w"&gt; &lt;/span&gt;no
draw_outline&lt;span class="w"&gt; &lt;/span&gt;no
draw_borders&lt;span class="w"&gt; &lt;/span&gt;no
draw_graph_borders&lt;span class="w"&gt; &lt;/span&gt;no
default_color&lt;span class="w"&gt; &lt;/span&gt;#b5b5b5
alignment&lt;span class="w"&gt; &lt;/span&gt;top_left&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;centre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre&lt;span class="w"&gt; &lt;/span&gt;sur&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;écran&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;ouverture
gap_x&lt;span class="w"&gt; &lt;/span&gt;30
gap_y&lt;span class="w"&gt; &lt;/span&gt;70
border_inner_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure
border_outer_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;bord&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre.
no_buffers&lt;span class="w"&gt; &lt;/span&gt;yes
uppercase&lt;span class="w"&gt; &lt;/span&gt;no
override_utf8_locale&lt;span class="w"&gt; &lt;/span&gt;yes
##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Affichage
##############################################
TEXT
#&lt;span class="w"&gt; &lt;/span&gt;D&amp;#39;abord,&lt;span class="w"&gt; &lt;/span&gt;je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;les&lt;span class="w"&gt; &lt;/span&gt;images
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour1_icone&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print &amp;quot;${image ~/images/icone_meteo/&amp;quot; $3 &amp;quot;.png -p 30,0 -s 128x128&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;}&amp;#39;}

#&lt;span class="w"&gt; &lt;/span&gt;Je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="c1"&gt;#b5b5b5&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Aujourd&amp;#39;hui&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Derniere_observation&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $8&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;Paris&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Temp.&lt;span class="w"&gt; &lt;/span&gt;actuelle&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Temperature&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Temp.&lt;span class="w"&gt; &lt;/span&gt;ressentie&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Ressentie&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Proba.&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;précip.&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour1_pop&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Vent&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Dir_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Pression&lt;span class="w"&gt; &lt;/span&gt;atmos.&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Pression&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Tend_pres&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print &amp;quot; &amp;quot; $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Humidité&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Humidite&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Visibilité&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Visibilite&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Meteo&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4 &amp;quot; &amp;quot; $5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Indice&lt;span class="w"&gt; &lt;/span&gt;UV&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Indice_UV&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Hauteur&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;précipitation&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour1_hauteur_precip&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour1_tempmax&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;|&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour1_tempmin&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Hauteur&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;neige&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour1_hauteur_neige&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;hr&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/conkyrc_meteo" title="Télécharger conkyrc_meteo"&gt;Télécharger conkyrc_meteo&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Paramètres
##############################################
background&lt;span class="w"&gt; &lt;/span&gt;yes
use_xft&lt;span class="w"&gt; &lt;/span&gt;yes
xftfont&lt;span class="w"&gt; &lt;/span&gt;Walkway:size=9
xftalpha&lt;span class="w"&gt; &lt;/span&gt;1
update_interval&lt;span class="w"&gt; &lt;/span&gt;1.0
total_run_times&lt;span class="w"&gt; &lt;/span&gt;0
own_window&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_transparent&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_type&lt;span class="w"&gt; &lt;/span&gt;desktop
own_window_hints&lt;span class="w"&gt; &lt;/span&gt;undecorated,sticky,skip_taskbar,skip_pager
double_buffer&lt;span class="w"&gt; &lt;/span&gt;yes
minimum_size&lt;span class="w"&gt; &lt;/span&gt;180&lt;span class="w"&gt; &lt;/span&gt;200
maximum_width&lt;span class="w"&gt; &lt;/span&gt;180
draw_shades&lt;span class="w"&gt; &lt;/span&gt;no
draw_outline&lt;span class="w"&gt; &lt;/span&gt;no
draw_borders&lt;span class="w"&gt; &lt;/span&gt;no
draw_graph_borders&lt;span class="w"&gt; &lt;/span&gt;no
default_color&lt;span class="w"&gt; &lt;/span&gt;#b5b5b5
alignment&lt;span class="w"&gt; &lt;/span&gt;top_left&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;centre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre&lt;span class="w"&gt; &lt;/span&gt;sur&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;écran&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;ouverture
gap_x&lt;span class="w"&gt; &lt;/span&gt;30
gap_y&lt;span class="w"&gt; &lt;/span&gt;320
border_inner_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure
border_outer_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;bord&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre.
no_buffers&lt;span class="w"&gt; &lt;/span&gt;yes
uppercase&lt;span class="w"&gt; &lt;/span&gt;no
override_utf8_locale&lt;span class="w"&gt; &lt;/span&gt;yes
##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Affichage
##############################################
TEXT
#&lt;span class="w"&gt; &lt;/span&gt;D&amp;#39;abord,&lt;span class="w"&gt; &lt;/span&gt;je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;les&lt;span class="w"&gt; &lt;/span&gt;images
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_icone&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print &amp;quot;${image ~/images/icone_meteo/&amp;quot; $3 &amp;quot;.png -p 58,10 -s 64x64&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;}&amp;#39;}

#&lt;span class="w"&gt; &lt;/span&gt;Je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="c1"&gt;#b5b5b5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_jour_sem&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_conditions&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4 &amp;quot; &amp;quot; $5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_tempmax&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;|&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_tempmin&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Précip.&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_pop&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Précip.&lt;span class="w"&gt; &lt;/span&gt;h:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_hauteur_precip&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Neige&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_hauteur_neige&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Vent&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;alignr&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_dir_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour2_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/conkyrc_meteo_jour2" title="Télécharger conkyrc_meteo_jour2"&gt;Télécharger conkyrc_meteo_jour2&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Paramètres
##############################################
background&lt;span class="w"&gt; &lt;/span&gt;yes
use_xft&lt;span class="w"&gt; &lt;/span&gt;yes
xftfont&lt;span class="w"&gt; &lt;/span&gt;Walkway:size=9
xftalpha&lt;span class="w"&gt; &lt;/span&gt;1
update_interval&lt;span class="w"&gt; &lt;/span&gt;1.0
total_run_times&lt;span class="w"&gt; &lt;/span&gt;0
own_window&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_transparent&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_type&lt;span class="w"&gt; &lt;/span&gt;desktop
own_window_hints&lt;span class="w"&gt; &lt;/span&gt;undecorated,sticky,skip_taskbar,skip_pager
double_buffer&lt;span class="w"&gt; &lt;/span&gt;yes
minimum_size&lt;span class="w"&gt; &lt;/span&gt;180&lt;span class="w"&gt; &lt;/span&gt;200
maximum_width&lt;span class="w"&gt; &lt;/span&gt;180
draw_shades&lt;span class="w"&gt; &lt;/span&gt;no
draw_outline&lt;span class="w"&gt; &lt;/span&gt;no
draw_borders&lt;span class="w"&gt; &lt;/span&gt;no
draw_graph_borders&lt;span class="w"&gt; &lt;/span&gt;no
default_color&lt;span class="w"&gt; &lt;/span&gt;#b5b5b5
alignment&lt;span class="w"&gt; &lt;/span&gt;top_left&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;centre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre&lt;span class="w"&gt; &lt;/span&gt;sur&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;écran&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;ouverture
gap_x&lt;span class="w"&gt; &lt;/span&gt;220
gap_y&lt;span class="w"&gt; &lt;/span&gt;320
border_inner_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure
border_outer_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;bord&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre.
no_buffers&lt;span class="w"&gt; &lt;/span&gt;yes
uppercase&lt;span class="w"&gt; &lt;/span&gt;no
override_utf8_locale&lt;span class="w"&gt; &lt;/span&gt;yes
##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Affichage
##############################################
TEXT
#&lt;span class="w"&gt; &lt;/span&gt;D&amp;#39;abord,&lt;span class="w"&gt; &lt;/span&gt;je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;les&lt;span class="w"&gt; &lt;/span&gt;images
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_icone&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print &amp;quot;${image ~/images/icone_meteo/&amp;quot; $3 &amp;quot;.png -p 58,10 -s 64x64&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;}&amp;#39;}

#&lt;span class="w"&gt; &lt;/span&gt;Je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="c1"&gt;#b5b5b5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_jour_sem&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_conditions&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4 &amp;quot; &amp;quot; $5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_tempmax&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;|&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_tempmin&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Précip.&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_pop&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Précip.&lt;span class="w"&gt; &lt;/span&gt;h:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_hauteur_precip&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Neige&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_hauteur_neige&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Vent&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;alignr&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_dir_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour3_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/conkyrc_meteo_jour3" title="Télécharger conkyrc_meteo_jour3"&gt;Télécharger conkyrc_meteo_jour3&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Paramètres
##############################################
background&lt;span class="w"&gt; &lt;/span&gt;yes
use_xft&lt;span class="w"&gt; &lt;/span&gt;yes
xftfont&lt;span class="w"&gt; &lt;/span&gt;Walkway:size=9
xftalpha&lt;span class="w"&gt; &lt;/span&gt;1
update_interval&lt;span class="w"&gt; &lt;/span&gt;1.0
total_run_times&lt;span class="w"&gt; &lt;/span&gt;0
own_window&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_transparent&lt;span class="w"&gt; &lt;/span&gt;yes
own_window_type&lt;span class="w"&gt; &lt;/span&gt;desktop
own_window_hints&lt;span class="w"&gt; &lt;/span&gt;undecorated,sticky,skip_taskbar,skip_pager
double_buffer&lt;span class="w"&gt; &lt;/span&gt;yes
minimum_size&lt;span class="w"&gt; &lt;/span&gt;180&lt;span class="w"&gt; &lt;/span&gt;200
maximum_width&lt;span class="w"&gt; &lt;/span&gt;180
draw_shades&lt;span class="w"&gt; &lt;/span&gt;no
draw_outline&lt;span class="w"&gt; &lt;/span&gt;no
draw_borders&lt;span class="w"&gt; &lt;/span&gt;no
draw_graph_borders&lt;span class="w"&gt; &lt;/span&gt;no
default_color&lt;span class="w"&gt; &lt;/span&gt;#b5b5b5
alignment&lt;span class="w"&gt; &lt;/span&gt;top_left&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;centre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre&lt;span class="w"&gt; &lt;/span&gt;sur&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;écran&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;l&amp;#39;ouverture
gap_x&lt;span class="w"&gt; &lt;/span&gt;410
gap_y&lt;span class="w"&gt; &lt;/span&gt;320
border_inner_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure
border_outer_margin&lt;span class="w"&gt; &lt;/span&gt;5&lt;span class="w"&gt; &lt;/span&gt;##&lt;span class="w"&gt; &lt;/span&gt;marge&lt;span class="w"&gt; &lt;/span&gt;entre&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;bordure&lt;span class="w"&gt; &lt;/span&gt;et&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;bord&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;la&lt;span class="w"&gt; &lt;/span&gt;fenêtre.
no_buffers&lt;span class="w"&gt; &lt;/span&gt;yes
uppercase&lt;span class="w"&gt; &lt;/span&gt;no
override_utf8_locale&lt;span class="w"&gt; &lt;/span&gt;yes
##############################################
#&lt;span class="w"&gt; &lt;/span&gt;Affichage
##############################################
TEXT
#&lt;span class="w"&gt; &lt;/span&gt;D&amp;#39;abord,&lt;span class="w"&gt; &lt;/span&gt;je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;les&lt;span class="w"&gt; &lt;/span&gt;images
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_icone&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print &amp;quot;${image ~/images/icone_meteo/&amp;quot; $3 &amp;quot;.png -p 58,10 -s 64x64&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;}&amp;#39;}

#&lt;span class="w"&gt; &lt;/span&gt;Je&lt;span class="w"&gt; &lt;/span&gt;place&lt;span class="w"&gt; &lt;/span&gt;le&lt;span class="w"&gt; &lt;/span&gt;texte
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="c1"&gt;#b5b5b5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_jour_sem&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_conditions&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4 &amp;quot; &amp;quot; $5&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="nv"&gt;$alignc&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_tempmax&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;|&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="cp"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_tempmin&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;voffset&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;Précip.&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_pop&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Précip.&lt;span class="w"&gt; &lt;/span&gt;h:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_hauteur_precip&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Neige&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$alignr&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_hauteur_neige&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
Vent&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;alignr&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_dir_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}&lt;span class="w"&gt; &lt;/span&gt;à&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;execp&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;jour4_vent&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;meteo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/conkyrc_meteo_jour4" title="Téléchargerconkyrc_meteo_jour4"&gt;Télécharger conkyrc_meteo_jour4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour positionner les différentes informations, il faut jouer d'abord avec minimum_size, maximum_with, gap_x, gap_y pour les quatre fenêtres, puis avec alignr, alignc, goto et voffset pour le contenu de chacune des fenêtres.&lt;/p&gt;
&lt;p&gt;La documentation conky est &lt;a href="http://conky.sourceforge.net/documentation.html"&gt;ici&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;L'astuce pour récupérer les infos, je l'ai trouvé &lt;a href="http://www.archlinux.fr/forum/viewtopic.php?t=9981&amp;amp;p=107541"&gt;sur ce forum&lt;/a&gt;, le même qui m'avait permis de créer le squelette du programme python. Tout tient dans la ligne suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;execp&lt;/span&gt;&lt;span class="p"&gt; grep jour2_icone ~/tmp/meteo.txt | awk -F &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{print &amp;quot;${image ~/images/icone_meteo/&amp;quot; $3 &amp;quot;.png -p 58,10 -s 64x64}&amp;quot;}&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cela me permet d'aller récupérer dans le fichier meteo.txt le nom de l'icone et de l'afficher dans mon conky. Pour bien comprendre cette ligne, il faut connaître les commandes grep, awk et les tubes. Vous trouverez une saine lecture concernant les commandes unix &lt;a href="http://framabook.org/unix-pour-aller-plus-loin-avec-la-ligne-de-commande/"&gt;chez framabook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nous voyons l'importance dans le programme python de ne pas générer de doublon dans le nom des informations, sinon cela interdit le bon fonctionnement de grep.&lt;/p&gt;
&lt;h3&gt;L'appel et la fermeture du conky météo&lt;/h3&gt;
&lt;p&gt;Je ne souhaite pas avoir en permanence les informations météo affichées sur mon bureau mais uniquement à la demande. Pour cela nous allons créer un petit programme de démarrage/arrêt du conky et créer des raccourcis dans le menu openbox et dans celui définissant les touches de raccourcis.&lt;/p&gt;
&lt;p&gt;Le programme le voici :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;# cliquer pour démarrer, cliquer pour arrêter&lt;/span&gt;

&lt;span class="nv"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-ef&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;conky&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;meteo&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TEST&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-ef&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;conky&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;meteo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;kill&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;conky&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;~/.conky/.conkyrc_meteo
&lt;span class="w"&gt;    &lt;/span&gt;conky&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;~/.conky/.conkyrc_meteo_jour2
&lt;span class="w"&gt;    &lt;/span&gt;conky&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;~/.conky/.conkyrc_meteo_jour3
&lt;span class="w"&gt;    &lt;/span&gt;conky&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;~/.conky/.conkyrc_meteo_jour4
&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/startstopmeteo.sh" title="startstopmeteo.sh"&gt;Télécharger startstopmeteo.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Il ne reste plus qu'à créer une entrée dans le fichier menu.xml, par exemple comme ci :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Meteo&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;command&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;startstopmeteo.sh
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/command&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/action&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et une entrée dans le fichier rc.xml pour les touches de raccourcis, comme cela :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;!-- Meteo --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;keybind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;W-A-m&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Execute&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;command&amp;gt;&lt;/span&gt;~/bin/startstopmeteo.sh&lt;span class="nt"&gt;&amp;lt;/command&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/action&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/keybind&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et voilà, c'est fini. Une météo en un clic !&lt;/p&gt;
&lt;p&gt;Pour résumer, il vous faut :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;s'inscrire sur le site de wunderground&lt;/li&gt;
&lt;li&gt;créer un script python pour récupérer les informations de wunderground&lt;/li&gt;
&lt;li&gt;le démoniser&lt;/li&gt;
&lt;li&gt;le lancer au démarrage de l'ordinateur&lt;/li&gt;
&lt;li&gt;récupérer de jolies icones&lt;/li&gt;
&lt;li&gt;créer les conky&lt;/li&gt;
&lt;li&gt;créer un script arret/relance des conky&lt;/li&gt;
&lt;li&gt;créer les entrées pour ce script dans le menu et les touches de raccourcis&lt;/li&gt;
&lt;/ul&gt;</content><category term="Conky"/><category term="Python"/><category term="Wunderground"/><category term="conky"/><category term="Crunchbang"/></entry><entry><title>Afficher la meteo avec conky et python 2ème partie</title><link href="https://letchap.github.io/2013/07/09/afficher-la-meteo-avec-conky-et-python-2eme-partie/" rel="alternate"/><published>2013-07-09T20:52:00+02:00</published><updated>2013-07-09T20:52:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-07-09:/2013/07/09/afficher-la-meteo-avec-conky-et-python-2eme-partie/</id><summary type="html">&lt;p&gt;Nous avons vu &lt;a href="https://letchap.github.io/2013/07/08/afficher-la-meteo-avec-conky-et-python-1ere-partie/"&gt;dans le billet précédent&lt;/a&gt; comment créer un programme python qui récupère les informations météo sur le site de wunderground. Nous avons "démonisé" ce script, c'est à dire que nous lui avons demandé de se déclencher à intervalle régulier.&lt;/p&gt;
&lt;p&gt;Nous allons maintenant faire en sorte qu'il se lance …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nous avons vu &lt;a href="https://letchap.github.io/2013/07/08/afficher-la-meteo-avec-conky-et-python-1ere-partie/"&gt;dans le billet précédent&lt;/a&gt; comment créer un programme python qui récupère les informations météo sur le site de wunderground. Nous avons "démonisé" ce script, c'est à dire que nous lui avons demandé de se déclencher à intervalle régulier.&lt;/p&gt;
&lt;p&gt;Nous allons maintenant faire en sorte qu'il se lance automatiquement au démarrage de l'ordinateur.&lt;/p&gt;
&lt;p&gt;Cette procédure est valable pour les distributions Linux se basant sur init.d comme Debian, et donc Crunchbang qui est la distribution sur laquelle a été fait cette automatisation.&lt;/p&gt;
&lt;p&gt;Pour cela, il suffit de suivre les étapes suivantes :&lt;/p&gt;
&lt;h3&gt;Sauver le programme python dans /usr/sbin&lt;/h3&gt;
&lt;p&gt;Dans le billet précédent, j'ai appelé mon script meteo.py. La copie du programme meteo.py dans &lt;code&gt;/usr./sbin&lt;/code&gt; doit se faire en mode root par un &lt;code&gt;sudo cp meteo.py /usr/sbin&lt;/code&gt;. Ne pas oublier au préalable de rendre le script exécutable par un &lt;code&gt;chmod +x meteo.py&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Créer un script de démarrage /etc/init.d&lt;/h3&gt;
&lt;p&gt;Le fichier &lt;code&gt;/etc/init.d/skeleton&lt;/code&gt; est un fichier d'exemple pour la création d'un script de démarrage. Personnellement, j'en ai créé un beaucoup plus sommaire sur la base d'un tuto que &lt;a href="http://www.gavinj.net/2012/06/building-python-daemon-process.html"&gt;j'ai trouvé ici&lt;/a&gt;, puis que j'ai un peu customisé, et qui fonctionne très bien. Il faut le créé en mode root dans le répertoire &lt;code&gt;/etc/init.d/&lt;/code&gt;, en faisant &lt;code&gt;$ sudo geany /etc/init.d/meteo&lt;/code&gt; par exemple (remplacer geany par nano, vim, ... l'éditeur de votre choix).&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#! /bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;# Provides:          meteo&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Stop:     $all&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c1"&gt;# Short-Description: Demarrage du service meteo&lt;/span&gt;
&lt;span class="c1"&gt;# Description:       Demarrage du programme de récupération des données&lt;/span&gt;
&lt;span class="c1"&gt;#                    meteo&lt;/span&gt;
&lt;span class="c1"&gt;### END INIT INFO&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;start&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Starting server&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# Start the daemon&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;/usr/sbin/meteo.py&lt;span class="w"&gt; &lt;/span&gt;start
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;stop&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stopping server&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# Stop the daemon&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;/usr/sbin/meteo.py&lt;span class="w"&gt; &lt;/span&gt;stop
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;restart&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Restarting server&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;/usr/sbin/meteo.py&lt;span class="w"&gt; &lt;/span&gt;restart
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# Refuse to do other stuff&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Usage: /etc/init.d/meteo {start|stop|restart}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/meteo" title="Télécharger meteo"&gt;Télécharger meteo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ensuite, il ne faut pas oublier de rendre le script exécutable par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;meteo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour tester si votre script fonctionne correctement, vous pouvez faire :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;service&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/meteo&lt;span class="w"&gt; &lt;/span&gt;start
$&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-ef&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;meteo
root&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="m"&gt;2355&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:01&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;:00:00&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;/usr/sbin/meteo.py&lt;span class="w"&gt; &lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vous devriez voir votre service dans la liste des processus actifs.&lt;/p&gt;
&lt;p&gt;Pour arrêter le service, il suffit de faire :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;service&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/meteo&lt;span class="w"&gt; &lt;/span&gt;stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Inclure le service au démarrage&lt;/h3&gt;
&lt;p&gt;Pour ajouter le script à la liste de démarrage, vous devez lancer la commande suivante à partir du répertoire /etc/init.d/&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;update-rc.d&lt;span class="w"&gt; &lt;/span&gt;meteo&lt;span class="w"&gt; &lt;/span&gt;defaults
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il ne reste plus qu'à rebooter et le programme python sera lancé automatiquement au démarrage.&lt;/p&gt;
&lt;h3&gt;Petites astuces&lt;/h3&gt;
&lt;p&gt;Argh, ça ne marche pas ! ! ! Mais pourquoi ? Pas de panique, il y a forcément une explication. Voilà deux pistes.&lt;/p&gt;
&lt;h4&gt;Astuce 1&lt;/h4&gt;
&lt;p&gt;Si vous avez lu le premier billet sur le programme python, vous avez remarqué que j'ai changé la redirection des messages envoyés par le démon de /dev/tty vers /dev/null. En effet, si tout fonctionnait parfaitement avec le lancement du service via le terminal, le script python plantait au reboot car il cherchait un service tty qui n'était pas démarré.&lt;/p&gt;
&lt;p&gt;Maintenant que tout part à la poubelle, je n'ai plus d'infos sur le démon, mais je n'ai plus de problème.&lt;/p&gt;
&lt;h4&gt;Astuce 2&lt;/h4&gt;
&lt;p&gt;Pour être sûr d'avoir paramétré correctement le script meteo dans /etc/init.d, , il faut savoir dans quel runlevel se lance Crunchbang.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;who&lt;span class="w"&gt; &lt;/span&gt;-r
&lt;span class="w"&gt;         &lt;/span&gt;niveau&lt;span class="w"&gt; &lt;/span&gt;d&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;exécution&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2013&lt;/span&gt;-07-09&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:01&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="nv"&gt;dernier&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nous voyons dans mon cas particulier que ma session démarre avec un runlevel 2. Ca tombe bien, c'est ce que j'ai défini sur la ligne &lt;code&gt;# Default-Start:     2 3 4 5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Et lorsque que j'ai lancé la commande update-rc.d, un lien s'est créé dans le répertoire /etc/rc2.d listant les services concernés par le runlevel 2, la lettre S signifiant Start (K voulant dire Kill), et le numéro 05 précisant que le service démarrera après tous ceux ayant un numéro inférieur.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;/etc/rc2.d/
lrwxrwxrwx&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;root&lt;span class="w"&gt; &lt;/span&gt;root&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;juil.&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:45&lt;span class="w"&gt; &lt;/span&gt;S05meteo&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;../init.d/meteo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pour plus d'information sur les runlevel, je vous invite à aller &lt;a href="http://www.generation-linux.fr/?post/2009/01/22/Cours-Linux-%3A-les-runlevels" title="Tout ce que vous avez toujours voulu savoir sur les runlevel"&gt;à cette adresse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dans le prochain billet, la troisème et dernière étape : &lt;a href="https://letchap.github.io/2013/07/10/afficher-la-meteo-avec-conky-et-python-3eme-partie/"&gt;le conky météo&lt;/a&gt;&lt;/p&gt;</content><category term="Linux"/><category term="Python"/><category term="Wunderground"/><category term="conky"/><category term="Crunchbang"/></entry><entry><title>Afficher la meteo avec conky et python 1ère partie</title><link href="https://letchap.github.io/2013/07/08/afficher-la-meteo-avec-conky-et-python-1ere-partie/" rel="alternate"/><published>2013-07-08T21:56:00+02:00</published><updated>2013-07-08T21:56:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-07-08:/2013/07/08/afficher-la-meteo-avec-conky-et-python-1ere-partie/</id><summary type="html">&lt;p&gt;Sur mon joli bureau openbox sur Crunchbang, j'aimerais pouvoir afficher à la demande les informations concernant la meteo au moyen d'un raccourci clavier ou d'un menu, puis refermer la fenêtre quand je n'en ai plus besoin. Evidemment, je veux des infos fraîches, avec un affichage sympa, et en consommant très …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sur mon joli bureau openbox sur Crunchbang, j'aimerais pouvoir afficher à la demande les informations concernant la meteo au moyen d'un raccourci clavier ou d'un menu, puis refermer la fenêtre quand je n'en ai plus besoin. Evidemment, je veux des infos fraîches, avec un affichage sympa, et en consommant très peu de ressources machine.&lt;/p&gt;
&lt;p&gt;Tout d'abord, le résultat final :&lt;/p&gt;
&lt;p&gt;&lt;a data-lightbox="conky" href="https://letchap.github.io/images/conky_meteo.png" title="Ecran conky"&gt;&lt;img alt="Ecran conky" src="https://letchap.github.io/images/conky_meteo.png" title="Ecran conky"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour réaliser cela, nous allons mettre en oeuvre plusieurs élements :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;un programme python qui va recueillir les informations météo sur un site spécialisé et stocker les informations dans un fichier texte&lt;/li&gt;
&lt;li&gt;une automatisation de ce programme sous forme d'un démon qui se lancera au démarrage de l'ordinateur&lt;/li&gt;
&lt;li&gt;un conky pour afficher à la demande la météo et la mettre en forme sur la base des informations contenues dans le fichier texte&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le tutoriel sera découpé en chacune de ces trois parties et nous commençons cette première partie par le programme python.&lt;/p&gt;
&lt;h3&gt;Wunderground&lt;/h3&gt;
&lt;p&gt;Wunderground sera notre fournisseur de données météorologiques. Pourquoi Wunderground, parce qu'il fournit une API, une sorte de clé, qui va nous permettre de récupérer facilement des informations météo complètes. En une seule requête, vous disposez de prévisions riches sur les quatre prochains jours.&lt;/p&gt;
&lt;p&gt;Les informations ainsi récupérées sont disponibles dans un format xml ou json, facilement lisibles car balisées. Le programme a été écrit pour un format json, rien ne vous empêche de le transposer pour un format xml, les grands principes resteront les mêmes.&lt;/p&gt;
&lt;p&gt;La première étape consiste à s'inscrire sur le site de wunderground &lt;a href="http://www.wunderground.com/weather/api/d/login.html" title="S'inscrire sur Weather Underground"&gt;à cette adresse&lt;/a&gt; pour obtenir une clé pour l'API. En bonus, vous avez à votre disposition des outils pour tester une requête et des exemples de code dans différents langages, dont Python.&lt;/p&gt;
&lt;p&gt;L'inscription est gratuite dans la limite d'une utilisation non commerciale et de 10 requêtes par minute. Parfait pour un usage privé.&lt;/p&gt;
&lt;h3&gt;Le script&lt;/h3&gt;
&lt;p&gt;Le but de ce programme est de se connecter régulièrement au site wunderground, de récupérer les informations qui nous intéressent et de créer un fichier texte lisible par un conky.&lt;/p&gt;
&lt;p&gt;Ce script est largement inspiré d'une part du tutoriel python sur &lt;a href="http://www.fullcirclemag.fr/?pages/Numéros"&gt;full circle HS n°2&lt;/a&gt; et sur &lt;a href="http://www.archlinux.fr/forum/viewtopic.php?t=9981&amp;amp;p=107541"&gt;ce forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tous les commentaires sont dans le script.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;  1&lt;/span&gt;
&lt;span class="normal"&gt;  2&lt;/span&gt;
&lt;span class="normal"&gt;  3&lt;/span&gt;
&lt;span class="normal"&gt;  4&lt;/span&gt;
&lt;span class="normal"&gt;  5&lt;/span&gt;
&lt;span class="normal"&gt;  6&lt;/span&gt;
&lt;span class="normal"&gt;  7&lt;/span&gt;
&lt;span class="normal"&gt;  8&lt;/span&gt;
&lt;span class="normal"&gt;  9&lt;/span&gt;
&lt;span class="normal"&gt; 10&lt;/span&gt;
&lt;span class="normal"&gt; 11&lt;/span&gt;
&lt;span class="normal"&gt; 12&lt;/span&gt;
&lt;span class="normal"&gt; 13&lt;/span&gt;
&lt;span class="normal"&gt; 14&lt;/span&gt;
&lt;span class="normal"&gt; 15&lt;/span&gt;
&lt;span class="normal"&gt; 16&lt;/span&gt;
&lt;span class="normal"&gt; 17&lt;/span&gt;
&lt;span class="normal"&gt; 18&lt;/span&gt;
&lt;span class="normal"&gt; 19&lt;/span&gt;
&lt;span class="normal"&gt; 20&lt;/span&gt;
&lt;span class="normal"&gt; 21&lt;/span&gt;
&lt;span class="normal"&gt; 22&lt;/span&gt;
&lt;span class="normal"&gt; 23&lt;/span&gt;
&lt;span class="normal"&gt; 24&lt;/span&gt;
&lt;span class="normal"&gt; 25&lt;/span&gt;
&lt;span class="normal"&gt; 26&lt;/span&gt;
&lt;span class="normal"&gt; 27&lt;/span&gt;
&lt;span class="normal"&gt; 28&lt;/span&gt;
&lt;span class="normal"&gt; 29&lt;/span&gt;
&lt;span class="normal"&gt; 30&lt;/span&gt;
&lt;span class="normal"&gt; 31&lt;/span&gt;
&lt;span class="normal"&gt; 32&lt;/span&gt;
&lt;span class="normal"&gt; 33&lt;/span&gt;
&lt;span class="normal"&gt; 34&lt;/span&gt;
&lt;span class="normal"&gt; 35&lt;/span&gt;
&lt;span class="normal"&gt; 36&lt;/span&gt;
&lt;span class="normal"&gt; 37&lt;/span&gt;
&lt;span class="normal"&gt; 38&lt;/span&gt;
&lt;span class="normal"&gt; 39&lt;/span&gt;
&lt;span class="normal"&gt; 40&lt;/span&gt;
&lt;span class="normal"&gt; 41&lt;/span&gt;
&lt;span class="normal"&gt; 42&lt;/span&gt;
&lt;span class="normal"&gt; 43&lt;/span&gt;
&lt;span class="normal"&gt; 44&lt;/span&gt;
&lt;span class="normal"&gt; 45&lt;/span&gt;
&lt;span class="normal"&gt; 46&lt;/span&gt;
&lt;span class="normal"&gt; 47&lt;/span&gt;
&lt;span class="normal"&gt; 48&lt;/span&gt;
&lt;span class="normal"&gt; 49&lt;/span&gt;
&lt;span class="normal"&gt; 50&lt;/span&gt;
&lt;span class="normal"&gt; 51&lt;/span&gt;
&lt;span class="normal"&gt; 52&lt;/span&gt;
&lt;span class="normal"&gt; 53&lt;/span&gt;
&lt;span class="normal"&gt; 54&lt;/span&gt;
&lt;span class="normal"&gt; 55&lt;/span&gt;
&lt;span class="normal"&gt; 56&lt;/span&gt;
&lt;span class="normal"&gt; 57&lt;/span&gt;
&lt;span class="normal"&gt; 58&lt;/span&gt;
&lt;span class="normal"&gt; 59&lt;/span&gt;
&lt;span class="normal"&gt; 60&lt;/span&gt;
&lt;span class="normal"&gt; 61&lt;/span&gt;
&lt;span class="normal"&gt; 62&lt;/span&gt;
&lt;span class="normal"&gt; 63&lt;/span&gt;
&lt;span class="normal"&gt; 64&lt;/span&gt;
&lt;span class="normal"&gt; 65&lt;/span&gt;
&lt;span class="normal"&gt; 66&lt;/span&gt;
&lt;span class="normal"&gt; 67&lt;/span&gt;
&lt;span class="normal"&gt; 68&lt;/span&gt;
&lt;span class="normal"&gt; 69&lt;/span&gt;
&lt;span class="normal"&gt; 70&lt;/span&gt;
&lt;span class="normal"&gt; 71&lt;/span&gt;
&lt;span class="normal"&gt; 72&lt;/span&gt;
&lt;span class="normal"&gt; 73&lt;/span&gt;
&lt;span class="normal"&gt; 74&lt;/span&gt;
&lt;span class="normal"&gt; 75&lt;/span&gt;
&lt;span class="normal"&gt; 76&lt;/span&gt;
&lt;span class="normal"&gt; 77&lt;/span&gt;
&lt;span class="normal"&gt; 78&lt;/span&gt;
&lt;span class="normal"&gt; 79&lt;/span&gt;
&lt;span class="normal"&gt; 80&lt;/span&gt;
&lt;span class="normal"&gt; 81&lt;/span&gt;
&lt;span class="normal"&gt; 82&lt;/span&gt;
&lt;span class="normal"&gt; 83&lt;/span&gt;
&lt;span class="normal"&gt; 84&lt;/span&gt;
&lt;span class="normal"&gt; 85&lt;/span&gt;
&lt;span class="normal"&gt; 86&lt;/span&gt;
&lt;span class="normal"&gt; 87&lt;/span&gt;
&lt;span class="normal"&gt; 88&lt;/span&gt;
&lt;span class="normal"&gt; 89&lt;/span&gt;
&lt;span class="normal"&gt; 90&lt;/span&gt;
&lt;span class="normal"&gt; 91&lt;/span&gt;
&lt;span class="normal"&gt; 92&lt;/span&gt;
&lt;span class="normal"&gt; 93&lt;/span&gt;
&lt;span class="normal"&gt; 94&lt;/span&gt;
&lt;span class="normal"&gt; 95&lt;/span&gt;
&lt;span class="normal"&gt; 96&lt;/span&gt;
&lt;span class="normal"&gt; 97&lt;/span&gt;
&lt;span class="normal"&gt; 98&lt;/span&gt;
&lt;span class="normal"&gt; 99&lt;/span&gt;
&lt;span class="normal"&gt;100&lt;/span&gt;
&lt;span class="normal"&gt;101&lt;/span&gt;
&lt;span class="normal"&gt;102&lt;/span&gt;
&lt;span class="normal"&gt;103&lt;/span&gt;
&lt;span class="normal"&gt;104&lt;/span&gt;
&lt;span class="normal"&gt;105&lt;/span&gt;
&lt;span class="normal"&gt;106&lt;/span&gt;
&lt;span class="normal"&gt;107&lt;/span&gt;
&lt;span class="normal"&gt;108&lt;/span&gt;
&lt;span class="normal"&gt;109&lt;/span&gt;
&lt;span class="normal"&gt;110&lt;/span&gt;
&lt;span class="normal"&gt;111&lt;/span&gt;
&lt;span class="normal"&gt;112&lt;/span&gt;
&lt;span class="normal"&gt;113&lt;/span&gt;
&lt;span class="normal"&gt;114&lt;/span&gt;
&lt;span class="normal"&gt;115&lt;/span&gt;
&lt;span class="normal"&gt;116&lt;/span&gt;
&lt;span class="normal"&gt;117&lt;/span&gt;
&lt;span class="normal"&gt;118&lt;/span&gt;
&lt;span class="normal"&gt;119&lt;/span&gt;
&lt;span class="normal"&gt;120&lt;/span&gt;
&lt;span class="normal"&gt;121&lt;/span&gt;
&lt;span class="normal"&gt;122&lt;/span&gt;
&lt;span class="normal"&gt;123&lt;/span&gt;
&lt;span class="normal"&gt;124&lt;/span&gt;
&lt;span class="normal"&gt;125&lt;/span&gt;
&lt;span class="normal"&gt;126&lt;/span&gt;
&lt;span class="normal"&gt;127&lt;/span&gt;
&lt;span class="normal"&gt;128&lt;/span&gt;
&lt;span class="normal"&gt;129&lt;/span&gt;
&lt;span class="normal"&gt;130&lt;/span&gt;
&lt;span class="normal"&gt;131&lt;/span&gt;
&lt;span class="normal"&gt;132&lt;/span&gt;
&lt;span class="normal"&gt;133&lt;/span&gt;
&lt;span class="normal"&gt;134&lt;/span&gt;
&lt;span class="normal"&gt;135&lt;/span&gt;
&lt;span class="normal"&gt;136&lt;/span&gt;
&lt;span class="normal"&gt;137&lt;/span&gt;
&lt;span class="normal"&gt;138&lt;/span&gt;
&lt;span class="normal"&gt;139&lt;/span&gt;
&lt;span class="normal"&gt;140&lt;/span&gt;
&lt;span class="normal"&gt;141&lt;/span&gt;
&lt;span class="normal"&gt;142&lt;/span&gt;
&lt;span class="normal"&gt;143&lt;/span&gt;
&lt;span class="normal"&gt;144&lt;/span&gt;
&lt;span class="normal"&gt;145&lt;/span&gt;
&lt;span class="normal"&gt;146&lt;/span&gt;
&lt;span class="normal"&gt;147&lt;/span&gt;
&lt;span class="normal"&gt;148&lt;/span&gt;
&lt;span class="normal"&gt;149&lt;/span&gt;
&lt;span class="normal"&gt;150&lt;/span&gt;
&lt;span class="normal"&gt;151&lt;/span&gt;
&lt;span class="normal"&gt;152&lt;/span&gt;
&lt;span class="normal"&gt;153&lt;/span&gt;
&lt;span class="normal"&gt;154&lt;/span&gt;
&lt;span class="normal"&gt;155&lt;/span&gt;
&lt;span class="normal"&gt;156&lt;/span&gt;
&lt;span class="normal"&gt;157&lt;/span&gt;
&lt;span class="normal"&gt;158&lt;/span&gt;
&lt;span class="normal"&gt;159&lt;/span&gt;
&lt;span class="normal"&gt;160&lt;/span&gt;
&lt;span class="normal"&gt;161&lt;/span&gt;
&lt;span class="normal"&gt;162&lt;/span&gt;
&lt;span class="normal"&gt;163&lt;/span&gt;
&lt;span class="normal"&gt;164&lt;/span&gt;
&lt;span class="normal"&gt;165&lt;/span&gt;
&lt;span class="normal"&gt;166&lt;/span&gt;
&lt;span class="normal"&gt;167&lt;/span&gt;
&lt;span class="normal"&gt;168&lt;/span&gt;
&lt;span class="normal"&gt;169&lt;/span&gt;
&lt;span class="normal"&gt;170&lt;/span&gt;
&lt;span class="normal"&gt;171&lt;/span&gt;
&lt;span class="normal"&gt;172&lt;/span&gt;
&lt;span class="normal"&gt;173&lt;/span&gt;
&lt;span class="normal"&gt;174&lt;/span&gt;
&lt;span class="normal"&gt;175&lt;/span&gt;
&lt;span class="normal"&gt;176&lt;/span&gt;
&lt;span class="normal"&gt;177&lt;/span&gt;
&lt;span class="normal"&gt;178&lt;/span&gt;
&lt;span class="normal"&gt;179&lt;/span&gt;
&lt;span class="normal"&gt;180&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="c1"&gt;#----------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# Créé par letchap&lt;/span&gt;
&lt;span class="c1"&gt;# meteo.py&lt;/span&gt;
&lt;span class="c1"&gt;#----------------------------------------------------&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; récupère les informations météo grace à l&amp;#39;API du site wunderground.com &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#import pour les infos meteo&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="c1"&gt;# import pour le démon&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;daemon&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;

&lt;span class="c1"&gt;#===========================================================&lt;/span&gt;
&lt;span class="c1"&gt;#       La classe&lt;/span&gt;
&lt;span class="c1"&gt;#===========================================================&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# Tout ça, c&amp;#39;est pour le démon&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# J&amp;#39;ai remplacé /dev/tty par dev/null pour éviter les plantages au démarrage par init.d&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# J&amp;#39;ai remplacé /dev/tty par dev/null pour éviter les plantages au démarrage par init.d&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/tmp/meteo.pid&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="c1"&gt;# Bien appelé la fonction &amp;#39;run&amp;#39; pour le démon&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;


        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# C&amp;#39;est le début de ma boucle pour démoniser mon programme&lt;/span&gt;

            &lt;span class="c1"&gt;###############################################&lt;/span&gt;
            &lt;span class="c1"&gt;#           Le corps du programme             #&lt;/span&gt;
            &lt;span class="c1"&gt;###############################################&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# Je récupère les informations fournies par wunderground grâce à leur api, au format json,&lt;/span&gt;
            &lt;span class="c1"&gt;# en une seule fois (forecast et conditions), et en français&lt;/span&gt;
            &lt;span class="c1"&gt;# Un exemple de code est fourni sur le site wunderground&lt;/span&gt;

            &lt;span class="c1"&gt;# Je charge ma page meteo&lt;/span&gt;
                &lt;span class="n"&gt;page_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://api.wunderground.com/api/macleapi/forecast/conditions/lang:FR/q/France/Paris.json?paris=I75003PA1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Je lis la page&lt;/span&gt;
                &lt;span class="n"&gt;json_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;page_json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="c1"&gt;# Je mets cette page dans un parseur&lt;/span&gt;
                &lt;span class="n"&gt;parsed_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;# Et je peux fermer ma page meteo, je n&amp;#39;en ai plus besoin&lt;/span&gt;
                &lt;span class="n"&gt;page_json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Les informations météo ne sont pas accessibles sur le site wunderground.com&amp;#39;&lt;/span&gt;
                &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# pour sortir du programme si la requête n&amp;#39;aboutit pas&lt;/span&gt;

            &lt;span class="c1"&gt;# Je récupère les informations du jour stokées sur le tag &amp;quot;current_observation&amp;quot;&lt;/span&gt;
            &lt;span class="c1"&gt;# Je fais attention à avoir des variables uniques dans le cas où je fais une recherche sur une chaîne de&lt;/span&gt;
            &lt;span class="c1"&gt;# caractère plus tard (avec un grep par exemple).&lt;/span&gt;

            &lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display_location&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# la ville&lt;/span&gt;
            &lt;span class="n"&gt;last_observation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;observation_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# l&amp;#39;heure dernière observation&lt;/span&gt;
            &lt;span class="n"&gt;current_temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;temp_c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# la température en °C&lt;/span&gt;
            &lt;span class="n"&gt;current_weather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weather&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# le temps actuel&lt;/span&gt;
            &lt;span class="n"&gt;humidity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;relative_humidity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# le taux d&amp;#39;humidité en %&lt;/span&gt;
            &lt;span class="n"&gt;wind_kph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wind_kph&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# la vitesse du vent&lt;/span&gt;
            &lt;span class="n"&gt;wind_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wind_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# l&amp;#39;orientation du vent&lt;/span&gt;
            &lt;span class="n"&gt;pressure_mb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pressure_mb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# la pression atmosphérique&lt;/span&gt;
            &lt;span class="n"&gt;pressure_trend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pressure_trend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# l&amp;#39;evolution pression atmosphérique&lt;/span&gt;
            &lt;span class="n"&gt;feelslike_c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;feelslike_c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# la température ressentie&lt;/span&gt;
            &lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;visibility_km&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# la visibilité en km&lt;/span&gt;
            &lt;span class="n"&gt;UV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UV&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# l&amp;#39;indice UV&lt;/span&gt;

            &lt;span class="c1"&gt;# Un petit test sur l&amp;#39;indice UV qui peut être négatif&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;UV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

            &lt;span class="c1"&gt;# Une petite transformation de la tendance atmosphérique&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pressure_trend&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;pressure_trend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en baisse&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;pressure_trend&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;pressure_trend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en hausse&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;pressure_trend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stable&amp;#39;&lt;/span&gt;

            &lt;span class="c1"&gt;# J&amp;#39;écris ces informations dans un fichier qui servira plus tard pour le conky meteo.&lt;/span&gt;
            &lt;span class="c1"&gt;# En ouvrant le fichier en mode &amp;#39;w&amp;#39;, j&amp;#39;écrase le fichier meteo.txt précédent&lt;/span&gt;
            &lt;span class="c1"&gt;# Je transforme tous les chiffres en chaînes de caractères et j&amp;#39;encode tous les textes français en UTF8&lt;/span&gt;
            &lt;span class="c1"&gt;# Je n&amp;#39;ai pas besoin de fermer le fichier en utilisant &amp;quot;with open&amp;quot;&lt;/span&gt;

            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/letchap/tmp/meteo.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Meteo = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;current_weather&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ville = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Derniere_observation = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;last_observation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Temperature = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; °C&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ressentie = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;feelslike_c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; °C&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Humidite = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;humidity&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vent = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wind_kph&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; km/h&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dir_vent = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;wind_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pression = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pressure_mb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; mb&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Tend_pres = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pressure_trend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#Ok, l&amp;#39;utf8 ne sert à rien là&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Visibilite = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; km&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Indice_UV = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



            &lt;span class="c1"&gt;# Je récupère les prévisions sous le tag &amp;quot;simpleforecast&amp;quot;, en bouclant sur chacune des périodes&lt;/span&gt;
            &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;forecast&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;simpleforecast&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;forecastday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;jour&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="c1"&gt;# jour&lt;/span&gt;
                &lt;span class="n"&gt;mois&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;      &lt;span class="c1"&gt;# mois&lt;/span&gt;
                &lt;span class="n"&gt;annee&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       &lt;span class="c1"&gt;# année&lt;/span&gt;
                &lt;span class="n"&gt;jour_sem&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weekday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="c1"&gt;# jour de la semaine&lt;/span&gt;
                &lt;span class="n"&gt;period&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;period&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;             &lt;span class="c1"&gt;# période&lt;/span&gt;
                &lt;span class="n"&gt;tempmax&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;celsius&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="c1"&gt;# température maximale&lt;/span&gt;
                &lt;span class="n"&gt;tempmin&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;low&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;celsius&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# température minimale&lt;/span&gt;
                &lt;span class="n"&gt;condition&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;conditions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;         &lt;span class="c1"&gt;# conditions&lt;/span&gt;
                &lt;span class="n"&gt;icon&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;icon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;               &lt;span class="c1"&gt;# icone en lien avec condition&lt;/span&gt;
                &lt;span class="n"&gt;skyicon&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;skyicon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;            &lt;span class="c1"&gt;# le couverture nuagueuse&lt;/span&gt;
                &lt;span class="n"&gt;pop&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                &lt;span class="c1"&gt;# probabilité de précipitation&lt;/span&gt;
                &lt;span class="n"&gt;hauteur_precip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;qpf_allday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="c1"&gt;# hauteur de précipitation pour la journée&lt;/span&gt;
                &lt;span class="n"&gt;hauteur_neige&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;snow_allday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# hauteur de neige pour la journée&lt;/span&gt;
                &lt;span class="n"&gt;vent&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;avewind&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;kph&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# vitesse moyenne du vent&lt;/span&gt;
                &lt;span class="n"&gt;vent_dir&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;avewind&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# direction du vent&lt;/span&gt;
                &lt;span class="n"&gt;tx_humidite&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;avehumidity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="c1"&gt;# taux d&amp;#39;humidité&lt;/span&gt;

                &lt;span class="c1"&gt;# Je définis chacune de mes 4 périodes&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;period&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jour1&amp;#39;&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;period&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jour2&amp;#39;&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;period&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jour3&amp;#39;&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;period&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jour4&amp;#39;&lt;/span&gt;

                &lt;span class="c1"&gt;# Encore un petit test pour les icones. Je combine icon et skyicon pour avoir la représentation graphique&lt;/span&gt;
                &lt;span class="c1"&gt;# la plus proche de la réalité en particulier &amp;quot;partiellement couvert et pluvieux&amp;quot; qui n&amp;#39;existe pas&lt;/span&gt;
                &lt;span class="c1"&gt;# D&amp;#39;abord je définis 3 listes pour l&amp;#39;orage, la pluie et la neige&lt;/span&gt;
                &lt;span class="n"&gt;orage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tstorms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chancetstorms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_tstorms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nt_chancetstorms&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;pluie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chancerain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_rain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nt_chancerain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;neige&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;snow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;flurries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chancesnow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chanceflurries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_snow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_flurries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_chancesnow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_chanceflurries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sleet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nt_sleet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chancesleet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nt_chancesleet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="c1"&gt;# puis je définis mes icones&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;orage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;icone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;skyicon&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;storm&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pluie&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;icone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;skyicon&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rain&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;neige&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;icone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;skyicon&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;snow&amp;quot;&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;icone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;

                &lt;span class="c1"&gt;# J&amp;#39;écris à la suite, grâce à l&amp;#39;option &amp;#39;a&amp;#39; append au lieu de &amp;#39;w&amp;#39;&lt;/span&gt;
                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/letchap/tmp/meteo.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_jour = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_mois = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mois&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_annee = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;annee&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_jour_sem = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;jour_sem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# C&amp;#39;est du luxe, il n&amp;#39;y a pas d&amp;#39;accent dans les jours de la semaine&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_tempmax = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tempmax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; °C&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_tempmin = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tempmin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; °C&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_conditions = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_icone = &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;icone&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_pop = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_hauteur_precip = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hauteur_precip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; mm&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_hauteur_neige = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hauteur_neige&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; cm&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_vent = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; km/h&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_dir_vent = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;vent_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_tx_himidite = &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tx_humidite&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;############################################&lt;/span&gt;
            &lt;span class="c1"&gt;#             Le fin du programme          #&lt;/span&gt;
            &lt;span class="c1"&gt;############################################&lt;/span&gt;

            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# C&amp;#39;est la fin de ma boucle de démonisation. La temporisation est de 120 secondes&lt;/span&gt;

&lt;span class="c1"&gt;# Toujours commencer la lecture d&amp;#39;un programme python par la fin. C&amp;#39;est là qu&amp;#39;on lance le démon&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;daemon_runner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DaemonRunner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;daemon_runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="button small" href="https://letchap.github.io/code/meteo.py" title="Télécharger meteo.py"&gt;Télécharger meteo.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pour mieux comprendre la façon dont sont récupérées les données, prenons un exemple avec un morceau de fichier json et le code Python correspondant. Nous allons récupérer l'information concernant la ville.&lt;/p&gt;
&lt;p&gt;Le morceau du fichier JSON qui nous intéresse ressemble à çà :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s2"&gt;&amp;quot;current_observation&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://icons-ak.wxug.com/graphics/wu2/logo_130x80.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Weather Underground&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;link&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://www.wunderground.com&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;display_location&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;full&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Paris, France&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;city&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Paris&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;state_name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;France&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;country&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;country_iso3166&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zip&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;00000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latitude&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;48.86666489&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;longitude&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2.33333302&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;elevation&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;47.00000000&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Pour trouver la bonne information, il suffit de suivre les branches de l'arbre. L'information "Paris" se trouve dans "city", qui se trouve dans "display_location" qui se trouve dans "current_observation". Ce qui se traduira en python par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;parsed_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current_observation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display_location&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le fichier texte final ressemble à ça :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Meteo = Ciel dégagé
Ville = Paris
Derniere_observation = Last Updated on juillet 9, 20:05 CEST
Temperature = 27.1 °C
Ressentie = 27.1 °C
Humidite = 56%
Vent = 14.5 km/h
Dir_vent = NE
Pression = 1020 mb
Tend_pres = stable
Visibilite = 10.0 km
Indice_UV = 0
jour1_jour = 9
jour1_mois = juillet
jour1_annee = 2013
jour1_jour_sem = mardi
jour1_tempmax = 29 °C
jour1_tempmin = 20 °C
jour1_conditions = Ciel dégagé
jour1_icone = clear
jour1_pop = 0%
jour1_hauteur_precip = 0.0 mm
jour1_hauteur_neige = 0 cm
jour1_vent = 16 km/h
jour1_dir_vent = NE
jour1_tx_himidite = 57%
jour2_jour = 10
jour2_mois = juillet
jour2_annee = 2013
jour2_jour_sem = mercredi
jour2_tempmax = 27 °C
jour2_tempmin = 16 °C
jour2_conditions = Ciel dégagé
jour2_icone = clear
jour2_pop = 0%
jour2_hauteur_precip = 0.0 mm
jour2_hauteur_neige = 0 cm
jour2_vent = 18 km/h
jour2_dir_vent = NNE
jour2_tx_himidite = 61%
jour3_jour = 11
jour3_mois = juillet
jour3_annee = 2013
jour3_jour_sem = jeudi
jour3_tempmax = 24 °C
jour3_tempmin = 15 °C
jour3_conditions = Ciel dégagé
jour3_icone = clear
jour3_pop = 0%
jour3_hauteur_precip = 0.0 mm
jour3_hauteur_neige = 0 cm
jour3_vent = 18 km/h
jour3_dir_vent = NNE
jour3_tx_himidite = 55%
jour4_jour = 12
jour4_mois = juillet
jour4_annee = 2013
jour4_jour_sem = vendredi
jour4_tempmax = 27 °C
jour4_tempmin = 16 °C
jour4_conditions = Ciel dégagé
jour4_icone = clear
jour4_pop = 0%
jour4_hauteur_precip = 0.0 mm
jour4_hauteur_neige = 0 cm
jour4_vent = 16 km/h
jour4_dir_vent = NNE
jour4_tx_himidite = 57%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Le démon&lt;/h3&gt;
&lt;p&gt;Afin de pouvoir interroger régulièrement le site Wunderground, nous allons "démoniser" le programme, c'est à dire que nous allons lui demander de se déclencher à intervalle régulier (dans le script 120 secondes)&lt;/p&gt;
&lt;p&gt;Pour cela, il suffit de suivre l'exemple suivant, en ayant installé préalablement python-daemon par un &lt;code&gt;sudo apt-get install python-daemon&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;daemon&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/tmp/meteo.pid&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pidfile_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# Le corps du programme&lt;/span&gt;
            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;daemon_runner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DaemonRunner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;daemon_runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Le programme ainsi démonisé se lance par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;meteo.py&lt;span class="w"&gt; &lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vous voir le résultat par exemple par un :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-ef&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;meteo
root&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="m"&gt;2413&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;:30&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;:00:00&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;/usr/sbin/meteo.py&lt;span class="w"&gt; &lt;/span&gt;start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Il s'arrête par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;meteo.py&lt;span class="w"&gt; &lt;/span&gt;stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nous pouvons bientôt passer à la deuxième étape : &lt;a href="https://letchap.github.io/2013/07/09/afficher-la-meteo-avec-conky-et-python-2eme-partie/"&gt;le lancement automatique du programme python au démarrage de l'ordinateur&lt;/a&gt;.&lt;/p&gt;</content><category term="Python"/><category term="Python"/><category term="Wunderground"/><category term="conky"/><category term="crunchbang"/></entry><entry><title>Touches spéciales clavier Mac sur VirtualBox</title><link href="https://letchap.github.io/2013/06/20/touches-speciales-clavier-mac-sur-virtualbox/" rel="alternate"/><published>2013-06-20T22:42:00+02:00</published><updated>2013-06-20T22:42:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-06-20:/2013/06/20/touches-speciales-clavier-mac-sur-virtualbox/</id><summary type="html">&lt;p&gt;Pour pouvoir profiter pleinement d'une distribution Linux virtualisée grâce à VirtualBox sur une ordinateur Mac, il faut pouvoir retrouver les touches spéciales qui, sans cela, rendent compliqué l'utilisation du terminal ou des éditeurs de texte.&lt;/p&gt;
&lt;p&gt;J'ai donc remis tout çà dans une petit tableau disponible au téléchargement &lt;a href="https://letchap.github.io/downloads/touches_speciales.pdf" title="touches spéciales"&gt;ici&lt;/a&gt;.
&lt;img alt="touches spéciales" src="https://letchap.github.io/images/touches_speciales.png" title="touches spéciales"&gt;&lt;/p&gt;
&lt;p&gt;Pour les …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pour pouvoir profiter pleinement d'une distribution Linux virtualisée grâce à VirtualBox sur une ordinateur Mac, il faut pouvoir retrouver les touches spéciales qui, sans cela, rendent compliqué l'utilisation du terminal ou des éditeurs de texte.&lt;/p&gt;
&lt;p&gt;J'ai donc remis tout çà dans une petit tableau disponible au téléchargement &lt;a href="https://letchap.github.io/downloads/touches_speciales.pdf" title="touches spéciales"&gt;ici&lt;/a&gt;.
&lt;img alt="touches spéciales" src="https://letchap.github.io/images/touches_speciales.png" title="touches spéciales"&gt;&lt;/p&gt;
&lt;p&gt;Pour les touches début et fin, il n'existe pas vraiment d'équivalent. Il est néanmoins possible de faire :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Début de ligne :  Fn + flèche gauche (ça ne fonctionne pas avec tous les éditeurs de texte)&lt;/li&gt;
&lt;li&gt;Fin de ligne :    Fn + flèche droite&lt;/li&gt;
&lt;li&gt;Page up :         Fn + flèche haute&lt;/li&gt;
&lt;li&gt;Page down :       Fn + flèche basse&lt;/li&gt;
&lt;/ul&gt;</content><category term="VirtualBox"/><category term="VirtualBox"/><category term="clavier Mac"/><category term="Linux"/></entry><entry><title>ToDo list après l'installation de Crunchbang sur VirtualBox</title><link href="https://letchap.github.io/2013/06/07/todo-list-apres-linstallation-de-crunchbang-sur-virtualbox/" rel="alternate"/><published>2013-06-07T23:32:00+02:00</published><updated>2013-06-07T23:32:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-06-07:/2013/06/07/todo-list-apres-linstallation-de-crunchbang-sur-virtualbox/</id><summary type="html">&lt;p&gt;J'ai testé un certain nombre de distributions sur une VirtualBox installée sur un iMac et la plus stable à ce jour est sans conteste Crunchbang. De plus, comme c'est une distribution légère, j'ai l'impression d'avoir une bête de course. Mais surtout, surtout, fini les problèmes d'affichage, les redémarrages douloureux après …&lt;/p&gt;</summary><content type="html">&lt;p&gt;J'ai testé un certain nombre de distributions sur une VirtualBox installée sur un iMac et la plus stable à ce jour est sans conteste Crunchbang. De plus, comme c'est une distribution légère, j'ai l'impression d'avoir une bête de course. Mais surtout, surtout, fini les problèmes d'affichage, les redémarrages douloureux après une mise à jour. Les releases stables, ça a du bon.&lt;/p&gt;
&lt;p&gt;J'ai déjà eu l'occasion de décrire la procédure d'installation d'une distribution sur VirtualBox &lt;a href="https://letchap.github.io/2013/04/09/virtualiser-mageia-2-sur-os-x-mountain-lion-avec-virtualbox/" title="Virtualiser"&gt;dans un billet précédent&lt;/a&gt;, nous allons nous attarder dans ce billet sur les compléments d'installation qui rendent l'utilisation de la VirtualBox plus agréable. Crunchbang étant par nature assez chichement doté en outils graphiques, ces petits compléments se feront par le terminal. Quand les commandes sont connues, ce n'est pas plus long que par des outils graphiques, bien au contraire.&lt;/p&gt;
&lt;h3&gt;Installation de VirtualBox Guest Additions&lt;/h3&gt;
&lt;p&gt;Les Guest Additions permettent notamment l'affichage en plein écran.&lt;/p&gt;
&lt;p&gt;Tout d'abord :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;build-essential&lt;span class="w"&gt; &lt;/span&gt;linux-headers-&lt;span class="sb"&gt;`&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dkms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Les Guest Additions se trouvent dans une image disque virtuelle que nous montons en sélectionnant "Installer les Guest Additions" dans le menu Devices (périphérique) de VirtualBox&lt;/p&gt;
&lt;p&gt;Le disque devrait apparaître dans le gestionnaire de fichier, dans mon cas il est monté sur /media/cdrom0&lt;/p&gt;
&lt;p&gt;Il ne reste plus qu'à lancer la procédure d'installation :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;sh&lt;span class="w"&gt; &lt;/span&gt;/media/cdrom0/VBoxLinuxAdditions.run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Dossier partage&lt;/h3&gt;
&lt;p&gt;Un deuxième gros intérêt des Guest Additions est la possibilité de partager des fichiers entre le système hôte et le système invité. Après avoir créer un dossier partage sur le système hôte, par défaut, il se retrouvere dans le répertoire Media (dossier commençant par "sf_") de votre Crunchbang virtualisé mais ne sera pas accessible à l'utilisateur. Pour donner les droits d'accès à ce dossier, il faut ajouter l'utilisateur au groupe Vbox.&lt;/p&gt;
&lt;p&gt;Pour cela, il faut éditer le fichier /etc/groups, repérer la ligne commençant par vboxsf et ajouter son nom de user, par exemple :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;vboxsf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1001&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;letchap&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Modification du clavier&lt;/h3&gt;
&lt;p&gt;La procédure d'installation de Crunchbang ne permet pas de choisir le clavier. Par défaut, il installe un clavier azerty "classique". Je n'ai donc pas eu la possibilité de paramétrer le clavier Mac. Ce qui pose quelques petits problèmes quand je veux taper "-" par exemple, ou des crochets.&lt;/p&gt;
&lt;p&gt;Il est possible de changer la configuration du clavier à partir du terminal, pour cela il faut éditer les fichier /etc/default/keyboard et le renseigner de la manière suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;XKBMODEL=&amp;quot;pc105&amp;quot;
XKBLAYOUT=&amp;quot;fr&amp;quot;
XKBVARIANT=&amp;quot;mac&amp;quot;
XKBOPTIONS=&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il ne reste plus qu'à redémarrer la machine virtuelle pour bénéficier de tous ces ajouts.&lt;/p&gt;</content><category term="VirtualBox"/><category term="Crunchbang"/><category term="VirtualBox"/><category term="Terminal"/><category term="Guest Additions"/><category term="dkms"/></entry><entry><title>Installer manuellement un pilote graphique Nvidia sur Crunchbang</title><link href="https://letchap.github.io/2013/06/05/installer-manuellement-un-pilote-graphique-nvidia-sur-crunchbang/" rel="alternate"/><published>2013-06-05T22:02:00+02:00</published><updated>2013-06-05T22:02:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-06-05:/2013/06/05/installer-manuellement-un-pilote-graphique-nvidia-sur-crunchbang/</id><summary type="html">&lt;p&gt;La distribution Crunchbang est une distribution trés légére basée sur Debian. Lors de l'installation sur mon vieux PC, la partie inférieure de l'écran est inutilisable car la carte graphique est mal gérée. Il faut alors installer le pilote graphique propriétaire, Nvidia dans mon cas. Crunchbang, se voulant trés léger, il …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La distribution Crunchbang est une distribution trés légére basée sur Debian. Lors de l'installation sur mon vieux PC, la partie inférieure de l'écran est inutilisable car la carte graphique est mal gérée. Il faut alors installer le pilote graphique propriétaire, Nvidia dans mon cas. Crunchbang, se voulant trés léger, il n'y a pas par défaut d'interface graphique pour installer le pilote, nous allons donc l'installer via le terminal.&lt;/p&gt;
&lt;p&gt;Ce post est très largement inspiré du wiki Debian disponible &lt;a href="http://wiki.debian.org/NvidiaGraphicsDrivers#NVIDIA_Proprietary_Driver" title="wiki Debian"&gt;à cette adresse&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Puis - je installer des pilotes non-libres ?&lt;/h3&gt;
&lt;p&gt;La première étape consiste à vérifier que nous pouvons installer des paquets non-libres, comme celui contenant le pilote nvidia qui nous intéresse. Par défaut, sur Crunchbang Waldorf, c'est le cas. Pour s'en assurer, il suffit de vérifier la présence de "non-free" dans la liste des sources. La commande :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;devrait vous renvoyer :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;## DEBIAN&lt;/span&gt;
&lt;span class="k"&gt;deb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://http.debian.net/debian/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;wheezy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;contrib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;S'il n'est pas présent, ajouter ces deux lignes en éditant le fichier :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;nano&lt;span class="w"&gt; &lt;/span&gt;/etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Quel pilote ?&lt;/h3&gt;
&lt;p&gt;La deuxième étape consiste à savoir quel pilote installer en fonction de sa carte graphique. Pour cela nous allons utiliser  nvidia-detect qui s'installe par synaptic ou à partir d'un terminal avec la commande &lt;code&gt;sudo apt-get install nvidia-detect&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ensuite, sur le terminal, la commande nvidia-detect vous renverra les informations sur la carte graphique et le pilote à installer.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;nvidia-detect
Detected&lt;span class="w"&gt; &lt;/span&gt;NVIDIA&lt;span class="w"&gt; &lt;/span&gt;GPUs:
&lt;span class="m"&gt;01&lt;/span&gt;:00.0&lt;span class="w"&gt; &lt;/span&gt;VGA&lt;span class="w"&gt; &lt;/span&gt;compatible&lt;span class="w"&gt; &lt;/span&gt;controller&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0300&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;NVIDIA&lt;span class="w"&gt; &lt;/span&gt;Corporation&lt;span class="w"&gt; &lt;/span&gt;NV34M&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;GeForce&lt;span class="w"&gt; &lt;/span&gt;FX&lt;span class="w"&gt; &lt;/span&gt;Go5200&lt;span class="w"&gt; &lt;/span&gt;32M/64M&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;10de:0328&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;rev&lt;span class="w"&gt; &lt;/span&gt;a1&lt;span class="o"&gt;)&lt;/span&gt;
Your&lt;span class="w"&gt; &lt;/span&gt;card&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;supported&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;173&lt;/span&gt;.14&lt;span class="w"&gt; &lt;/span&gt;legacy&lt;span class="w"&gt; &lt;/span&gt;drivers&lt;span class="w"&gt; &lt;/span&gt;series.
It&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;recommended&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;the
&lt;span class="w"&gt;    &lt;/span&gt;nvidia-glx-legacy-173xx
package.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;J'installe mon pilote&lt;/h3&gt;
&lt;p&gt;Le pilote s'installe avec les deux commandes suivantes dans le terminal :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="p"&gt;|&lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s,[^-]*-[^-]*-,,&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nvidia-kernel-legacy-173xx-dkms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cela va également installer les dépendances, et notamment le paquet nvidia-glx-legacy-173xx.&lt;/p&gt;
&lt;h3&gt;Mon pilote n'est pas détecté par défaut&lt;/h3&gt;
&lt;p&gt;La dernière étape consiste à faire reconnaître le pilote par le système, qui n'est pas détecté automatiquement par défaut. Pour cela, il faut créer un fichier de configuration :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;nano&lt;span class="w"&gt; &lt;/span&gt;/etc/X11/xorg.conf.d/20-nvidia.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;et ajouter les lignes suivantes :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Section &amp;quot;Device&amp;quot;
    Identifier     &amp;quot;Mon pilote graphique&amp;quot;
    Driver         &amp;quot;Nvidia&amp;quot;
    Option         &amp;quot;NoLogo&amp;quot; &amp;quot;1&amp;quot;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;L'option NoLogo permet de supprimer l'affichage du logo nvidia au démarrage.&lt;/p&gt;
&lt;p&gt;C'est fini, il ne reste plus qu'à redémarrer.&lt;/p&gt;</content><category term="Crunchbang"/><category term="Crunchbang"/><category term="Nvidia"/><category term="Terminal"/></entry><entry><title>Quelle distribution légère choisir pour une vieille configuration?</title><link href="https://letchap.github.io/2013/06/02/quelle-distribution-legere-choisir-pour-une-vieille-configuration/" rel="alternate"/><published>2013-06-02T13:09:00+02:00</published><updated>2013-06-02T13:09:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-06-02:/2013/06/02/quelle-distribution-legere-choisir-pour-une-vieille-configuration/</id><summary type="html">&lt;p&gt;Ces dernières semaines, plusieurs distributions adaptées aux petites configurations ont été livrées ou mises à jour :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lubuntu est passé en version 13.04 Raring Ringtail, &lt;/li&gt;
&lt;li&gt;Mageia qui existe en version LXDE a livré sa version 3, &lt;/li&gt;
&lt;li&gt;Debian a livré sa version Wheezy sur laquelle se base la distribution légère Crunchbang …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Ces dernières semaines, plusieurs distributions adaptées aux petites configurations ont été livrées ou mises à jour :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lubuntu est passé en version 13.04 Raring Ringtail, &lt;/li&gt;
&lt;li&gt;Mageia qui existe en version LXDE a livré sa version 3, &lt;/li&gt;
&lt;li&gt;Debian a livré sa version Wheezy sur laquelle se base la distribution légère Crunchbang, &lt;/li&gt;
&lt;li&gt;une version E17 du bureau Enlightenment est arrivé sur Bodhi Linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Petite parenthèse : je mets hors catégorie Toutou Linux qui reste LA distribution sur les plus vieux PC, qui transforme un canasson en cheval de course, mais dont le look peut parfois étonner.&lt;/p&gt;
&lt;p&gt;Chacune de ces distributions est supposée tourner sur un ordinosaure, mais qu'en est-il dans la vraie vie, quand il s'agit de les installer concrétement et de les utiliser au quotidien ?&lt;/p&gt;
&lt;p&gt;J'ai installé ces 4 distributions sur mon portable Toshiba M40 de 2003 (1,4 GHz, 512Mo de RAM). Verdict :&lt;/p&gt;
&lt;h3&gt;Lubuntu 13.04&lt;/h3&gt;
&lt;p&gt;Pendant très longtemps, Lubuntu 12.04 LTS a été la seule distribution sur mon PC. Consommation de CPU et de RAM réduite, prise en main facile pour des débutants, aussi bien lors de l'installation que dans une utilisation courante. Le bureau LXDE reste très adapté sur les anciennes configurations.&lt;/p&gt;
&lt;p&gt;Est ce toujours le cas pour les suivantes, la 12.10 puis la 13.04 ?&lt;/p&gt;
&lt;p&gt;La réponse tient en une seule phrase : ces versions sont inutilisables sur des machines non-pae comme la mienne car le kernel de Ubuntu 13.04 n'est livré qu'avec une version pae. Ce que je trouve regrettable car cela exclu de fait les plus anciennes machines de Lubuntu dont elles sont sensées être la cible.&lt;/p&gt;
&lt;p&gt;Si vous voulez absolument utiliser Lubuntu, ce qui est légitime compte tenu des qualités d'ensemble de cette distribution, rester en 12.04. En téléchargement &lt;a href="https://help.ubuntu.com/community/Lubuntu/GetLubuntu" title="Lubuntu"&gt;à cette adresse&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Mageia 3 LXDE&lt;/h3&gt;
&lt;p&gt;Contrairement à Lubuntu, les machines non-pae supportent très bien le passage de Mageia 2 vers Mageia 3. Mageia est une distribution très agréable à utiliser, en particulier grâce au son centre de contrôle qui permet de configurer facilement son ordinateur.&lt;/p&gt;
&lt;p&gt;Le confort d'utilisation est en revanche assez sensiblement réduit avec la version 3 (il n'était déjà pas fameux avec Mageia 2 avec simplement 512Mo de RAM). La distribution "rame" même avec un bureau LXDE. Rien de rédhibitoire mais du coup, il y a mieux sur des vieilles machines.&lt;/p&gt;
&lt;p&gt;C'est &lt;a href="http://www.mageia.org/fr/downloads/" title="Mageia"&gt;ici pour le téléchargement&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Bodhi Linux&lt;/h3&gt;
&lt;p&gt;Y a t-il un bug ? Voyant qu'il était possible de charger une version 32bits non-pae, je me suis dit "chouette, je vais pouvoir installer une jolie distribution sur mon PC". Ce que j'en avais vu en virtualisant m'avait donné envie d'en savoir plus sur le bureau Enlightenment. Et là, patatras, impossible de lancer le live USB, je bloque au moment du choix de la configuration du bureau. Tant pis!&lt;/p&gt;
&lt;p&gt;Mais si cela fonctionne chez vous, vous pouvez le &lt;a href="http://www.bodhilinux.com/downloads_desktop.php" title="Bodhi Linux"&gt;trouver là&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Crunchbang&lt;/h3&gt;
&lt;p&gt;Mon coup de coeur !&lt;/p&gt;
&lt;p&gt;Crunchbang est une version dérivée de Debian, utilisant le bureau openbox. La consommation de CPU et de RAM est réduite, comparable à ceux que je pouvais avoir avec Lubuntu 12.04. L'utilisation est très fluide, même lorsque plusieurs applications sont ouvertes. La présentation de base est très sobre.&lt;/p&gt;
&lt;p&gt;Cette distribution ne s'adresse pas aux débutants. Il faut avoir un peu de connaissances de Linux pour le paramétrage du système. Un seul petit exemple, la francisation complète se fait en ligne de commande par le terminal là où toutes les autres proposent des mises à jour par une interface graphique.&lt;/p&gt;
&lt;p&gt;Par contre, ceux qui viennent de Lubuntu (comme moi) ne seront pas dépaysés par l'univers Debian/Ubuntu (paquets .deb, synaptic, ...) et les plus curieux pourront approfondir avec bonheur leurs connaissances de Linux.&lt;/p&gt;
&lt;p&gt;En résumé, une utilisation très fluide et une incitation à ouvrir le capot, c'est le bonheur.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://crunchbang.org/download/" title="Crunchbang"&gt;A télécharger d'urgence là&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En conclusion, pour avoir une distribution légère sur son PC, je recommenderais Lubuntu pour les débutants et Crunchbang pour les plus aventuriers.&lt;/p&gt;</content><category term="Linux"/><category term="Lubuntu"/><category term="Mageia"/><category term="Bodhi Linux"/><category term="Crunchbang"/></entry><entry><title>Cloner son site octopress pour bloguer depuis deux ordinateurs</title><link href="https://letchap.github.io/2013/04/10/cloner-son-site-octopress-pour-bloguer-depuis-deux-ordinateurs/" rel="alternate"/><published>2013-04-10T22:54:00+02:00</published><updated>2013-04-10T22:54:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-04-10:/2013/04/10/cloner-son-site-octopress-pour-bloguer-depuis-deux-ordinateurs/</id><summary type="html">&lt;p&gt;Vous avez un nouvel ordinateur, ou vous avez écrasé vos fichiers, ou bien encore vous voulez bloguer à plusieurs, il existe tout un tas de bonnes raisons de vouloir mettre à jour son site Octopress depuis plusieurs ordinateurs.&lt;/p&gt;
&lt;p&gt;Cela se fait de manière assez simple, et avant tout il faut …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vous avez un nouvel ordinateur, ou vous avez écrasé vos fichiers, ou bien encore vous voulez bloguer à plusieurs, il existe tout un tas de bonnes raisons de vouloir mettre à jour son site Octopress depuis plusieurs ordinateurs.&lt;/p&gt;
&lt;p&gt;Cela se fait de manière assez simple, et avant tout il faut bien comprendre le principe de mise à jour de son site sur Github.&lt;/p&gt;
&lt;h3&gt;Le principe&lt;/h3&gt;
&lt;p&gt;Dans votre dépôt github qui contient votre site, vous allez trouver deux branches :
- une branche source qui contient les éléments servant à construire le blog. C'est là par exemple que sont créés les nouveaux posts, que sont stockés les fichiers de code ou les images, et bien sûr le fichier de config et le sass.
- une branche master qui contient le site en lui-même, et rien que le site. Sur l'ordinateur, cette branche se trouve dans le répertoire _deploy&lt;/p&gt;
&lt;p&gt;Ces deux branches sont mises à jour séparément sur github par deux blocs d'instructions différents&lt;/p&gt;
&lt;p&gt;La mise à jour de la branche source va se faire par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~/octopress$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.
~/octopress$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mon message&amp;#39;&lt;/span&gt;
~/octopress$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La mise à jour de la branche master se fera elle par :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~/octopress$&lt;span class="w"&gt; &lt;/span&gt;rake&lt;span class="w"&gt; &lt;/span&gt;generate
~/octopress$&lt;span class="w"&gt; &lt;/span&gt;rake&lt;span class="w"&gt; &lt;/span&gt;deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il n'est pas nécessaire de mettre à jour la branche source sur github pour avoir un site à jour car il est généré à partir des fichiers sources présent sur l'ordinateur.&lt;/p&gt;
&lt;p&gt;En conséquence, la première étape avant d'installer octopress sur le deuxième ordinateur et de bien mettre à jour à la fois la branche source et la branche master du dépôt github.&lt;/p&gt;
&lt;p&gt;Si vous avez perdu les fichiers de ce premier ordinateur, vous repartirez de la dernière mise à jour du dépôt.&lt;/p&gt;
&lt;h3&gt;L'installation sur le deuxième ordinateur&lt;/h3&gt;
&lt;p&gt;Maintenant que le dépôt sur ces deux branches source et master est à jour, nous allons pouvoir installer Octopress sur le deuxième ordinateur.&lt;/p&gt;
&lt;p&gt;L'installation est exactement la même que celle d'un site vierge dont la procédure est décrite sur le site d'Octopress, à une seule différence près. Nous allons cloner notre site au lieu de cloner le site par défaut.&lt;/p&gt;
&lt;p&gt;D'abord nous clonons notre branche source en créant au passage le répertoire octopress:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git@github.com:monuser/monuser.github.com.git&lt;span class="w"&gt; &lt;/span&gt;octopress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ensuite, nous nous positionnons sur le répertoire octopress pour cloner la branche master dans le répertoire _deploy que nous créons au passage :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:monuser/monuser.github.com.git&lt;span class="w"&gt; &lt;/span&gt;_deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tout le reste de la procédure est rigoureusement identique : l'installation de git, de rvm, des bundles, le paramétrage du compte github, ... tout je vous dis.&lt;/p&gt;
&lt;h3&gt;Bloguer depuis deux ordinateurs&lt;/h3&gt;
&lt;p&gt;Pour passer d'un ordinateur à l'autre, il faut d'abord mettre à jour les deux branches avec les instructions vues plus haut à partir du premier ordinateur, puis sur le deuxième, récupérer les derniers fichiers source et master en les ramenant sur votre ordinateur (pull) :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;octopress
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;_deploy
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Octopress"/><category term="Octopress"/><category term="git"/></entry><entry><title>Virtualiser Mageia 2 sur OS X Mountain Lion avec VirtualBox</title><link href="https://letchap.github.io/2013/04/09/virtualiser-mageia-2-sur-os-x-mountain-lion-avec-virtualbox/" rel="alternate"/><published>2013-04-09T22:02:00+02:00</published><updated>2013-04-09T22:02:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-04-09:/2013/04/09/virtualiser-mageia-2-sur-os-x-mountain-lion-avec-virtualbox/</id><summary type="html">&lt;p&gt;Malgré toute sa bonne volonté mon pauvre vieux PC de 2003 touche certaines limites. La plus génante concerne l'obsolescence de la carte graphique, il m'est par exemple impossible d'utiliser Kivy.&lt;/p&gt;
&lt;p&gt;C'est l'occasion d'installer une distribution sur mon iMac. Et pour tester un univers que je ne connais pas et qui …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Malgré toute sa bonne volonté mon pauvre vieux PC de 2003 touche certaines limites. La plus génante concerne l'obsolescence de la carte graphique, il m'est par exemple impossible d'utiliser Kivy.&lt;/p&gt;
&lt;p&gt;C'est l'occasion d'installer une distribution sur mon iMac. Et pour tester un univers que je ne connais pas et qui va me changer du monde Ubuntu, nous allons installer Mageia 2.&lt;/p&gt;
&lt;h3&gt;Dual boot ou virtualisation ?&lt;/h3&gt;
&lt;p&gt;Pour ne pas perturber les autres membres de la famille avec le choix d'un OS de démarrage, je ne souhaite pas installer Mageia en double amorçage (dual boot) sur mon iMac. J'ai la flemme de partitionner, d'installer rEfit, tout ça pour avoir un écran moche au démarrage.&lt;/p&gt;
&lt;p&gt;La solution : la virtualisation&lt;/p&gt;
&lt;p&gt;La virtualisation permet de démarrer une session de n'importe quelle distribution Linux à l'intérieur de Mountain Lion :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ca ne prend pas de place (il faut compter 8 Go pour être tranquille),&lt;/li&gt;
&lt;li&gt;Ca tourne de manière fluide avec 512 Mo de RAM dédiée (j'ai mis 2 Go quand même pour Mageia 2),&lt;/li&gt;
&lt;li&gt;Ca ne touche pas à Mountain Lion,&lt;/li&gt;
&lt;li&gt;Ca permet de partager des fichiers entre Mountain Lion et Mageia très facilement,&lt;/li&gt;
&lt;li&gt;Ca reconnaît les port usb,&lt;/li&gt;
&lt;li&gt;Ca se sauvegarde,&lt;/li&gt;
&lt;li&gt;Ca permet de tester très facilement toutes sortes de distributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le principal intérêt de la virtualisation est de pouvoir essayer sereinement des distributions, mais j'ai décidé de tester la virtualisation aussi sur la durée, je voudrais savoir si cela peut être une solution pérenne en attendant de racheter un PC et de faire une vraie installation.&lt;/p&gt;
&lt;h3&gt;L'installation&lt;/h3&gt;
&lt;p&gt;Il n'existe pas énormément de logiciel de virtualisation sur Max OS X, et le seul gratuit est VirtualBox. Les deux autres sont VMware et Parallel Desktop.&lt;/p&gt;
&lt;p&gt;Pour virtualiser, j'ai donc utilisé le logiciel Virtualbox. Les différentes étapes sont :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L'installation de Virtualbox&lt;/li&gt;
&lt;li&gt;Le téléchargement de l'image disque Mageia 2&lt;/li&gt;
&lt;li&gt;L'installation de Mageia 2 dans VirtualBox&lt;/li&gt;
&lt;li&gt;L'installation des compléments (VirtualBox guest additions)&lt;/li&gt;
&lt;li&gt;L'installation des compléments (VirtualBox extension pack)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Installer Virtualbox.&lt;/h4&gt;
&lt;p&gt;C'est une installation classique sur OS X par les paquets dmg. Il est disponible au téléchargement &lt;a href="https://www.virtualbox.org/wiki/Downloads" title="VirtualBox"&gt;ici&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Télécharger Mageia 2&lt;/h4&gt;
&lt;p&gt;Nous allons installer la dernière version de Mageia 2 en 64 bits, elle est disponible au téléchargement sur &lt;a href="http://www.mageia.org/fr/downloads/" title="Mageia"&gt;cette page&lt;/a&gt;. Personnellement j'utilise le torrent avec transmission, c'est plus rapide et plus sûr.&lt;/p&gt;
&lt;p&gt;Dans le dossier que vous récupérez se trouve un fichier .iso, c'est de celui dont nous aurons besoin.&lt;/p&gt;
&lt;p&gt;Tous les Mac récents tournent en 64 bits, pour vous en assurer, vous pouvez aller dans le moniteur d'activité, il doit être indiqué Intel (64bits) dans la colonne Type.
&lt;a data-lightbox="moniteur" href="https://letchap.github.io/images/virtualbox/moniteur.png" title="moniteur d'activité"&gt;&lt;img alt="Moniteur d'activité" src="https://letchap.github.io/images/virtualbox/moniteur.png" title="moniteur d'activité"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;La documentation VirtualBox précise qu'il est possible de virtualiser du 64 sur du 32, je n'ai pas essayé, je ne sais pas si cela fonctionne bien.&lt;/p&gt;
&lt;h4&gt;Démarrer VirtualBox et installer Mageia&lt;/h4&gt;
&lt;p&gt;Le vrai travail commence maintenant&lt;/p&gt;
&lt;p&gt;Démarrer VirtaulBox et cliquer sur nouveau. Vous saisissez alors le nom de votre distribution, Mageia
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-nouvelle.png" title="Etape 1 : créer une nouvelle distribution"&gt;&lt;img alt="VirtualBox nouveau" src="https://letchap.github.io/images/virtualbox/vb-nouvelle.png" title="Etape 1 : créer une nouvelle distribution"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ensuite choisissez la taille de la mémoire qui sera utilisé pour faire fonctionner la machine virtuelle. La mémoire vive est partagé avec le système hôte, celle dédiée à VirtualBox ne peut pas être plus de la moitié de la taille totale. Ici, j'ai choisi 2Go.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-memoire.png" title="Etape 2 : choisir la taille de la mémoire vive"&gt;&lt;img alt="VirtualBox mémoire" src="https://letchap.github.io/images/virtualbox/vb-memoire.png" title="Etape 2 : choisir la taille de la mémoire vive"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;La création d'un disque dur virtuel est proposée (laissez le paramétrage par défaut)
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-disk.png" title="Etape 3 : choisir le disque dur virtuel"&gt;&lt;img alt="VirtualBox disque dur" src="https://letchap.github.io/images/virtualbox/vb-disk.png" title="Etape 3 : choisir le disque dur virtuel"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Il s'agit d'un disque virtuel avec une extension vdi qui permettra plus tard si besoin d'exporter la machine virtuelle
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-vdi.png" title="Etape 4 : choisir l'extension du disque"&gt;&lt;img alt="VirtualBox vdi" src="https://letchap.github.io/images/virtualbox/vb-vdi.png" title="Etape 4 : choisir l'extension du disque"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Conserver le paramétrage de taille de disque dynamiquement allouée. Seul l'espace réellement utilisé sera présent sur le disque dur de la machine hôte. Pour des soucis de performance, il est possible de choisir une taille fixe, mais évidemment, cela prend plus d'espace. A vous de voir.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-alloue.png" title="Etape 5 : choisir la taille dynamiquement allouée"&gt;&lt;img alt="VirtualBox taille allouée" src="https://letchap.github.io/images/virtualbox/vb-alloue.png" title="Etape 5 : choisir la taille dynamiquement allouée"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;8Go par défaut, c'est largement suffisant pour tester une distribution.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-taille.png" title="Etape 6 : choisir la taille du disque"&gt;&lt;img alt="VirtualBox taille" src="https://letchap.github.io/images/virtualbox/vb-taille.png" title="Etape 6 : choisir la taille du disque"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Une fois tous ces éléments paramétrés, il va falloir demander à la machine de démarrer sur l'image disque de Mageia. Pour cela, il faut se rendre dans l'onglet stockage.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-stockage.png" title="Etape 6 : onglet stockage"&gt;&lt;img alt="VirtualBox stockage" src="https://letchap.github.io/images/virtualbox/vb-stockage.png" title="Etape 6 : onglet stockage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vous cliquez sur l'icone du CD à coté de Lecteur CD/DVD.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-cd.png" title="Etape 7 : charger l'image iso"&gt;&lt;img alt="VirtualBox CD" src="https://letchap.github.io/images/virtualbox/vb-cd.png" title="Etape 7 : charger l'image iso"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Et vous choisissez votre fichier iso.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-iso.png" title="Etape 8 : charger l'image iso"&gt;&lt;img alt="VirtualBox iso" src="https://letchap.github.io/images/virtualbox/vb-iso.png" title="Etape 8 : charger l'image iso"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vous cliquer alors sur démarrer et lancer l'installation normale de Mageia. Attention, ne télécharger pas les compléments d'installation durant cette étape. C'est très important pour un bon fonctionnement ultérieur de Mageia.&lt;/p&gt;
&lt;p&gt;A la fin de l'installation, vous éteignez (power off) la machine virtuelle.
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-off.png" title="Etape 9 : éteindre la machine"&gt;&lt;img alt="VirtualBox power off" src="https://letchap.github.io/images/virtualbox/vb-off.png" title="Etape 9 : éteindre la machine"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Puis, vous éjectez le fichier iso (pour ne pas redémarrer l'installation à chaque fois).
&lt;a data-lightbox="virtualbox" href="https://letchap.github.io/images/virtualbox/vb-eject.png" title="Etape 10 : éjecter le fichier iso"&gt;&lt;img alt="VirtualBox eject" src="https://letchap.github.io/images/virtualbox/vb-eject.png" title="Etape 10 : éjecter le fichier iso"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vous pouvez alors redémarrer Mageia. Une fois sur Mageia, voici quelques petites astuces pour un fonctionnement optimal de la machine virtuelle :&lt;/p&gt;
&lt;h4&gt;Guest additions&lt;/h4&gt;
&lt;p&gt;Tout d'abord, installer les compléments de l'installation que nous avons mis de coté tout à l'heure. L'installation sera plus propre si vous le faites maintenant et évitera des dysfonctionnements de Mageia. Pour éviter d'être embêté avec le fichier iso, vous pouvez aller dans le Centre de Contrôle Mageia (CCM) pour paramétrer les sources des programmes et supprimer la mise à jour par CD.&lt;/p&gt;
&lt;p&gt;Mageia va en même temps installer les VirtualBox guest additions qui permettent notamment de partager un répertoire avec le système hôte. Il n'est donc pas nécessaire d'installer spécifiquement ces guest additions, laissez le CCM faire.&lt;/p&gt;
&lt;p&gt;Une petite astuce pour les répertoires partagés, n'oubliez pas d'ajouter votre utilisateur dans le groupe VirtualBox (là encore cela se passe dans le CCM).
&lt;a data-lightbox="CCM" href="https://letchap.github.io/images/virtualbox/ccm.png" title="CCM"&gt;&lt;img alt="CCM" src="https://letchap.github.io/images/virtualbox/ccm.png" title="Partager un répertoire"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Extension pack&lt;/h4&gt;
&lt;p&gt;Enfin, dernière astuce, installer le VirtualBox extension pack pour pouvoir accéder aux ports USB sur la machine invitée.&lt;/p&gt;
&lt;p&gt;Bonne virtualisation !!&lt;/p&gt;</content><category term="VirtualBox"/><category term="VirtualBox"/><category term="OS X"/><category term="Mountain Lion"/><category term="Mageia"/><category term="guest additions"/><category term="virtualisation"/></entry><entry><title>Dual boot Lubuntu-Mageia 2 LXDE</title><link href="https://letchap.github.io/2013/04/03/dual-boot-lubuntu-mageia-2-lxde/" rel="alternate"/><published>2013-04-03T22:40:00+02:00</published><updated>2013-04-03T22:40:00+02:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-04-03:/2013/04/03/dual-boot-lubuntu-mageia-2-lxde/</id><summary type="html">&lt;p&gt;Sur le principe, je ne comprends pas bien pourquoi il est plus difficile de faire un double amorçage (dual boot in english) avec deux distributions Linux plutôt qu'avec une distribution Linux et Windows.&lt;/p&gt;
&lt;p&gt;Enfin, j'ai réussi à faire un dual boot Lubuntu 12.04 et Mageia 2 (version LXDE aussi …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sur le principe, je ne comprends pas bien pourquoi il est plus difficile de faire un double amorçage (dual boot in english) avec deux distributions Linux plutôt qu'avec une distribution Linux et Windows.&lt;/p&gt;
&lt;p&gt;Enfin, j'ai réussi à faire un dual boot Lubuntu 12.04 et Mageia 2 (version LXDE aussi, même si cela n'a aucune importance pour la suite du post). Je me suis largement inspiré du &lt;a href="http://www.mageialinux-online.org/forum/topic-10359-1.php"&gt;fil disponible sur mageia on line&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Je pense que cela fonctionne de la même manière avec toutes les variantes Ubuntu et en 12.10, mais comme je n'ai pas testé ...&lt;/p&gt;
&lt;p&gt;Mon objectif était d'installer Mageia à coté de Lubuntu et de proposer au démarrage de l'ordinateur le choix entre ces deux distributions.&lt;/p&gt;
&lt;h3&gt;Le principe de fonctionnement de l'amorçage&lt;/h3&gt;
&lt;p&gt;Pour démarrer, un certain nombre de distributions Linux (dont celles basées sur Debian comme Ubuntu, mais également Mageia et d'autres) utilise un même programme d'amorçage : GRUB. Le même, pas tout à fait, car il existe dans des versions différentes en fonction des distributions, qui ne sont pas toujours compatibles.&lt;/p&gt;
&lt;p&gt;Dans l'exemple de dual boot Lubuntu Mageia, lorsque vous installez Mageia après Lubuntu, si vous ne faites rien, le GRUB de Mageia ne va pas reconnaître le GRUB de Lubuntu et il sera alors impossible de choisir la distribution au démarrage (l'inverse est également vrai). Heureusement, il est tout à fait possible de "chaîner" les GRUB, c'est à dire d'indiquer au premier GRUB où se trouve le deuxième, et donc de choisir sur quel GRUB, ou quelle distribution démarrer. Cela demande un peu de manipulation et un peu d'expérience. En particulier, il faut savoir :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;utiliser un éditeur en mode root (gedit, nano, vim, ...)&lt;/li&gt;
&lt;li&gt;partitionner un disque (pour la 2ème installation)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La procédure que je décris va permettre d'ajouter une entrée Mageia sur le GRUB de Lubuntu. Pourquoi dans ce sens ? Tout simplement parce que j'ai installé une entrée Plop manager sur le Grub de Lubuntu qui me permet de démarrer sur une clé USB sans passer par le BIOS, je n'ai pas envie de recommencer la configuration de Plop Manager sur le GRUB de Mageia. Il existe une procédure sur Mageia on Line pour chaîner sur le GRUB de Lubuntu à partir du GRUB de Mageia, que je n'ai pas testée car ce n'est pas ce que je voulais faire.&lt;/p&gt;
&lt;h3&gt;Installer Lubuntu 12.04&lt;/h3&gt;
&lt;p&gt;Si vous installez Lubuntu sur l'ensemble du disque, le programme d'installation va créer deux partitions sur le disque, la plus grande formatée en ext4 portera un petit nom sdXY, en général, si c'est la seule, sda1, et une toute petite partition swap qui sera sda6 chez moi. Cette partition swap n'a aucun intérêt pour la suite des opérations.&lt;/p&gt;
&lt;p&gt;Le programme d'installation va installer le GRUB sur le MBR (master boot record : secteur de démarrage principal du disque dur, sda1 dans ce cas). C'est là le point le plus important à comprendre pour la suite.&lt;/p&gt;
&lt;h3&gt;Installer Mageia 2&lt;/h3&gt;
&lt;p&gt;Pour installer Mageia 2 à coté de Lubuntu, le programme d'installation va vous demander de modifier les partitions existantes. Avec le partitionnement automatique, Mageia va créer 3 nouvelles partitions à coté du sda1 et sda6 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sda5 &lt;/li&gt;
&lt;li&gt;sda7&lt;/li&gt;
&lt;li&gt;sda8&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A la fin de l'installation, le paramétrage le plus important à ne pas manquer est celui du chargeur d'amorçage. Vous vous souvenez que le GRUB de Lubuntu est sur sda1. Par défaut, Mageia écrit un nouveau chargeur de démarrage GRUB dans le MBR, en essayant de récupérer les chargeurs d'amorçage existants, mais avec celui de Lubuntu, cela ne fonctionne pas. Et au redémarrage, vous n'aurez plus accès à Lubuntu. Il faut donc configurer le chargeur d'amorçage Mageia pour qu'il pointe sur sda5. &lt;/p&gt;
&lt;p&gt;Une illustration en image : choisir sda5 dans le menu déroulant.
&lt;img alt="grub Mageia" src="https://letchap.github.io/images/grub_mageia.png" title="Grub Mageia"&gt;&lt;/p&gt;
&lt;p&gt;Au redémarrage, vous serez toujours sur le GRUB de Lubuntu et vous n'aurez toujours pas accès à Mageia. &lt;/p&gt;
&lt;p&gt;Pour vous en convaincre, vous pouvez taper la commande fdisk et voir que la petite étoile dans la colonne amorce est bien devant la partition sda1 où se trouve Lubuntu.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root@localhost ~&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fdisk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;

&lt;span class="n"&gt;Périphérique&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Amorce&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Début&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Fin&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;Blocs&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Système&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;43006004&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;21501978&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda2&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mi"&gt;43010037&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;78139391&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;17564677&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Étendue&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda5&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mi"&gt;43010048&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;60773894&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;8881923&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda6&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mi"&gt;77094912&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;78139391&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;522240&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;82&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;partition&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;échange Linux / Solaris&lt;/span&gt;
&lt;span class="s1"&gt;/dev/sda7        60776448    62749889      986721   82  partition d&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;échange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Solaris&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda8&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="mi"&gt;62752768&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;77079869&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;7163551&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ou encore avec l'outil parted, nous voyons que le numéro 1 (ou sda1) est bien la partition de démarrage&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root@localhost ~&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;
&lt;span class="nl"&gt;Modèle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ATA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TOSHIBA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MK4021GA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scsi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Disque&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;
&lt;span class="n"&gt;Taille&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;secteurs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logiques&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;physiques&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;
&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;partitions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;msdos&lt;/span&gt;
&lt;span class="k"&gt;Disk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;Flags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;Numéro&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Début&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Fin&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Taille&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;Système&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fichiers&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Fanions&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;1049&lt;/span&gt;&lt;span class="n"&gt;kB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;primary&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;ext4&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;démarrage&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;extended&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;9095&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;ext4&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;1010&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;7335&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;ext4&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;535&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et c'est là qu'intervient la dernière étape.&lt;/p&gt;
&lt;h3&gt;Le chaînage&lt;/h3&gt;
&lt;p&gt;Nous allons dire au GRUB de Lubuntu de chaîner sur le GRUB de Mageia. Pour cela nous allons ajouter une entrée Mageia dans le GRUB de Lubuntu.&lt;/p&gt;
&lt;p&gt;Pour cela, il suffit d'ouvrir de fichier 40_custom &lt;a href="https://letchap.github.io/2013/02/23/demarrer-sur-une-cle-usb-sans-passer-par-le-bios/"&gt;(le même qui contient mon entrée pour Plop Manager)&lt;/a&gt; et d'ajouter les lignes suivantes :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;menuentry&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mageia&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hd0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;chainloader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ici, (hd0,5) signifie sda5. (hd1,4) signifierait sdb4 par exemple. &lt;/p&gt;
&lt;p&gt;Ensuite nous mettons à jour Grub par la commande suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;update-grub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et au redémarrage, nous aurons l'accès à Mageia qui sera proposée.&lt;/p&gt;
&lt;h3&gt;Ca ne marche pas ton truc&lt;/h3&gt;
&lt;p&gt;Il y a trois étapes très importantes à respecter pour que le chaînage fonctionne :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;installer d'abord Lubuntu puis Mageia &lt;/li&gt;
&lt;li&gt;ne pas installer le GRUB Mageia sur le MBR mais bien sur la partition sda5&lt;/li&gt;
&lt;li&gt;ne pas se tromper dans les n° hd(x,y)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si vous avez écrasé le GRUB de Lubuntu avec l'installation de Mageia, je vous conseille de :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;réinstaller le GRUB de Lubuntu (ça évite de refaire toute l'installation)&lt;/li&gt;
&lt;li&gt;réinstaller Mageia proprement&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Réinstaller le GRUB de Lubuntu&lt;/h4&gt;
&lt;p&gt;Il existe des tas de manières de faire, personnellement j'utilise &lt;a href="http://howtoubuntu.org/how-to-repair-restore-reinstall-grub-2-with-a-ubuntu-live-cd/"&gt;cette procédure qui fonctionne très bien.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;L'idée est de démarrer sur un live CD et de réinstaller le programme GRUB sur la racine du disque.&lt;/p&gt;
&lt;p&gt;Après avoir démarré sur le live CD, vous ouvrez une fenêtre du terminal et vous montez le disque ainsi que quelques bibliothèques complémentaires.&lt;/p&gt;
&lt;p&gt;Ensuite vous installez le programme GRUB et vous le remettez à jour.&lt;/p&gt;
&lt;p&gt;Vous sortez proprement.&lt;/p&gt;
&lt;p&gt;Et c'est tout, vous pouvez redémarrer.&lt;/p&gt;</content><category term="Mageia"/><category term="Lubuntu"/><category term="dual boot"/><category term="double amorçage"/><category term="Mageia"/><category term="LXDE"/><category term="GRUB"/><category term="live CD"/></entry><entry><title>Memo Markdown en français</title><link href="https://letchap.github.io/2013/03/01/memo-markdown-en-francais/" rel="alternate"/><published>2013-03-01T22:30:00+01:00</published><updated>2013-03-01T22:30:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-03-01:/2013/03/01/memo-markdown-en-francais/</id><summary type="html">&lt;p&gt;Je n'ai pas trouvé de petit memo ou cheat sheet markdown en français sur la toile, alors j'ai créé le mien.&lt;/p&gt;
&lt;p&gt;Le markdown est une synthaxe qui permet d'écrire de manière assez naturelle des pages qui seront ensuite traduites en langage html. Par exemple, un titre de niveau 1 s'écrira …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Je n'ai pas trouvé de petit memo ou cheat sheet markdown en français sur la toile, alors j'ai créé le mien.&lt;/p&gt;
&lt;p&gt;Le markdown est une synthaxe qui permet d'écrire de manière assez naturelle des pages qui seront ensuite traduites en langage html. Par exemple, un titre de niveau 1 s'écrira &lt;code&gt;# Titre 1&lt;/code&gt; plutôt que &lt;code&gt;&amp;lt;h1&amp;gt;Titre 1&amp;lt;/h1&amp;gt;&lt;/code&gt;, ce qui est quand même beaucoup plus facile.&lt;/p&gt;
&lt;p&gt;Pour une utilisation optimale dans Octopress, le markdown est à mixer avec les plugins pour l'insertion de code ou d'images par exemple.&lt;/p&gt;
&lt;p&gt;&lt;img alt="memo markdown" src="https://letchap.github.io/images/memo_markdown_letchap.png" title="mon memo markdown"&gt;&lt;/p&gt;
&lt;p&gt;Il est disponible au téléchargement au format pdf &lt;a href="https://letchap.github.io/downloads/memo_markdown_letchap.pdf" title="memo markdown"&gt;ici&lt;/a&gt;.&lt;/p&gt;</content><category term="Octopress"/><category term="Octopress"/><category term="markdown"/></entry><entry><title>De l'utilité d'un live CD pour les situations désespérées</title><link href="https://letchap.github.io/2013/02/27/de-lutilite-dun-live-cd-pour-les-situations-desesperees/" rel="alternate"/><published>2013-02-27T22:25:00+01:00</published><updated>2013-02-27T22:25:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-27:/2013/02/27/de-lutilite-dun-live-cd-pour-les-situations-desesperees/</id><summary type="html">&lt;p&gt;Catastrophe, l'écran de mon ordinateur ne fonctionne plus. C'est malin, qu'est ce qui m'a pris aussi de vouloir installer le tout dernier pilote nvidia sur mon vieux PC. Moralité, écran noir. Que faire, réinstaller mon Lubuntu ?&lt;/p&gt;
&lt;p&gt;Bon sang mais c'est bien sûr, il faut démarrer sur CD une session live …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Catastrophe, l'écran de mon ordinateur ne fonctionne plus. C'est malin, qu'est ce qui m'a pris aussi de vouloir installer le tout dernier pilote nvidia sur mon vieux PC. Moralité, écran noir. Que faire, réinstaller mon Lubuntu ?&lt;/p&gt;
&lt;p&gt;Bon sang mais c'est bien sûr, il faut démarrer sur CD une session live et réparer les bêtises (pour moi supprimer le pilote de la carte graphique) à partir de là.&lt;/p&gt;
&lt;p&gt;Une fois sur la session live, il faut trouver le point de montage du disque dur. Cela peut se faire grâce à Gparted. Chez moi, c'est sur /dev/sda1.&lt;/p&gt;
&lt;p&gt;Ensuite, il faut ouvrir le terminal et monter le disque dur, puis se positionner dessus pour pouvoir travailler.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;mount&lt;span class="w"&gt; &lt;/span&gt;/dev/sda1&lt;span class="w"&gt; &lt;/span&gt;/mnt
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;chroot&lt;span class="w"&gt; &lt;/span&gt;/mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Le prompt va changer en #/&lt;/p&gt;
&lt;p&gt;Ensuite je peux lancer ma commande de suppression du pilote :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#/ sudo apt-get remove --purge nvidia-current&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Puis je démonte le volume :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#/ sudo umount /dev/sda1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il ne reste plus qu'à redémarrer normalement.&lt;/p&gt;
&lt;p&gt;La morale de l'histoire : avoir toujours un live CD ou une clé USB pour démarrer sous la main, ça peut sauver un ordinateur d'un propriétaire trop enthousiaste.&lt;/p&gt;
&lt;p&gt;Cette même procédure est très utilisée pour réinstaller un Grub disparu sur la famille Ubuntu. Il y aura un petit post là-dessus bientôt.&lt;/p&gt;</content><category term="Lubuntu"/><category term="live CD"/><category term="Lubuntu"/><category term="nvidia"/></entry><entry><title>Ceci n'est pas un post sur pourquoi j'ai migré de Wordpress vers Octopress</title><link href="https://letchap.github.io/2013/02/26/ceci-nest-pas-un-post-sur-pourquoi-jai-migre-de-wordpress-vers-octopress/" rel="alternate"/><published>2013-02-26T22:21:00+01:00</published><updated>2013-02-26T22:21:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-26:/2013/02/26/ceci-nest-pas-un-post-sur-pourquoi-jai-migre-de-wordpress-vers-octopress/</id><summary type="html">&lt;p&gt;Bon, j'ai fait comme tout le monde, j'ai migré de Wordpress vers Octopress parce que ... parce que c'est mieux. Il existe des tutoriels en français et en anglais donc je ne m'étendrai pas sur l'installation d'Octopress, &lt;a href="http://octopress.org/"&gt;le site d'Octopress&lt;/a&gt; lui-même est très détaillé sur la procédure à suivre. Je vais …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bon, j'ai fait comme tout le monde, j'ai migré de Wordpress vers Octopress parce que ... parce que c'est mieux. Il existe des tutoriels en français et en anglais donc je ne m'étendrai pas sur l'installation d'Octopress, &lt;a href="http://octopress.org/"&gt;le site d'Octopress&lt;/a&gt; lui-même est très détaillé sur la procédure à suivre. Je vais simplement revenir sur les trois petites difficultés que j'ai rencontré et qui ne sont pas forcément détaillées sur la toile.&lt;/p&gt;
&lt;h3&gt;L'échange de clé sécurisé avec Github&lt;/h3&gt;
&lt;p&gt;J'ai choisi d'installer Octopress en hébergeant mes pages dans un dépôt Github. J'ai donc créé un compte et un dépôt pour mon site, en revanche, je ne savais pas qu'il était nécessaire d'échanger des clés ssh pour communiquer. La procédure est expliquée sur &lt;a href="https://help.github.com/articles/generating-ssh-keys" title="Générer un clé ssh"&gt;le site de Github&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Setup des pages Github&lt;/h3&gt;
&lt;p&gt;Il se peut que la saisie de l'adresse URL du dépôt est été mal faite (avec des gros doigts, j'en parle parce que ça m'est arrivé) au moment du &lt;code&gt;rake setup_github_pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Pour vérifier que l'on ne sait pas trompé :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;-v
origin&lt;span class="w"&gt;  &lt;/span&gt;git@github.com:letchap/letchap.github.com.git&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
origin&lt;span class="w"&gt;  &lt;/span&gt;git@github.com:letchap/letchap.github.com.git&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;RVM is not a function&lt;/h3&gt;
&lt;p&gt;Au moment de lancer &lt;code&gt;$ RVM use&lt;/code&gt;, j'ai eu un message d'erreur indiquant &lt;code&gt;RVM is not a function&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En fait, par défaut, les binaires sont installés dans $HOME/.rvm et ne sont pas accessibles via le terminal. Pour corriger cela, il faut ajouter les lignes suivantes dans le fichier /home/your-name/.bashrc.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.rvm/scripts/rvm&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.rvm/scripts/rvm&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Réinstallation de Ruby avec openssl&lt;/h3&gt;
&lt;p&gt;La dernière difficulté est survenue au moment du déploiement du site avec le message d'erreur suivant :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;require&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;openssl&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# &amp;gt; LoadError: cannot load such file -- openssl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je ne sais pas pourquoi Ruby ne peut pas utiliser mon openssl installé par défaut, la solution de contournement que j'ai trouvé sur le site &lt;a href="https://rvm.io/packages/openssl/"&gt;RVM&lt;/a&gt; a été d'installer un nouveau paquet openssl et de réinstaller Ruby.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;rvm&lt;span class="w"&gt; &lt;/span&gt;pkg&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;openssl
$&lt;span class="w"&gt; &lt;/span&gt;rvm&lt;span class="w"&gt; &lt;/span&gt;reinstall&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.9.3&lt;span class="w"&gt; &lt;/span&gt;--with-openssl-dir&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$rvm_path&lt;/span&gt;/usr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Octopress"/><category term="Octopress"/><category term="Ruby"/><category term="RVM"/><category term="Github"/><category term="SSH"/></entry><entry><title>Vider la corbeille avec le terminal</title><link href="https://letchap.github.io/2013/02/25/vider-la-corbeille-avec-le-terminal/" rel="alternate"/><published>2013-02-25T22:18:00+01:00</published><updated>2013-02-25T22:18:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-25:/2013/02/25/vider-la-corbeille-avec-le-terminal/</id><summary type="html">&lt;p&gt;Avec mon Lubuntu 12.04, j'ai parfois des soucis avec la corbeille : je ne vois pas les fichiers à supprimer, et donc je ne peux pas vider la corbeille. Il m'arrive parfois des messages d'erreur.&lt;/p&gt;
&lt;p&gt;Je suis alors obligé de vider la corbeille via le terminal et comme je ne …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Avec mon Lubuntu 12.04, j'ai parfois des soucis avec la corbeille : je ne vois pas les fichiers à supprimer, et donc je ne peux pas vider la corbeille. Il m'arrive parfois des messages d'erreur.&lt;/p&gt;
&lt;p&gt;Je suis alors obligé de vider la corbeille via le terminal et comme je ne me souviens jamais de l'emplacement, je me le note, ainsi que les commandes de suppression :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/.local/share/Trash/
$&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-rf&lt;span class="w"&gt; &lt;/span&gt;files&lt;span class="w"&gt; &lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-rf&lt;span class="w"&gt; &lt;/span&gt;info&lt;span class="w"&gt; &lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-rf&lt;span class="w"&gt; &lt;/span&gt;expunged
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Voilà, une corbeille comme neuve.&lt;/p&gt;</content><category term="Shell"/><category term="Corbeille"/><category term="Linux"/><category term="Lubuntu"/><category term="Terminal"/></entry><entry><title>wget en python 3 avec gestion des cookies et du post</title><link href="https://letchap.github.io/2013/02/25/wget-en-python-3-avec-gestion-des-cookies-et-du-post/" rel="alternate"/><published>2013-02-25T21:47:00+01:00</published><updated>2013-02-25T21:47:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-25:/2013/02/25/wget-en-python-3-avec-gestion-des-cookies-et-du-post/</id><summary type="html">&lt;p&gt;Un petit exemple avec le site ameli, qui permet d'illustrer la gestion des cookies et du post data à la fois avec la commande wget et son équivalent en Python 3&lt;/p&gt;
&lt;h3&gt;La commande Wget dans un petit script :&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Un petit exemple avec le site ameli, qui permet d'illustrer la gestion des cookies et du post data à la fois avec la commande wget et son équivalent en Python 3&lt;/p&gt;
&lt;h3&gt;La commande Wget dans un petit script :&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$login&lt;/span&gt;
&lt;span class="nv"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;

&lt;span class="c1"&gt;#Récupération des premiers cookies&lt;/span&gt;
wget&lt;span class="w"&gt; &lt;/span&gt;-dO&lt;span class="w"&gt; &lt;/span&gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;--cookies&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;--keep-session-cookies&lt;span class="w"&gt; &lt;/span&gt;--save-cookies&lt;span class="o"&gt;=&lt;/span&gt;cookies.txt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://assure.ameli.fr/PortailAS/appmanager/PortailAS/assure&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#Deuxième passage pour récupérer les cookies sécurisés&lt;/span&gt;
wget&lt;span class="w"&gt; &lt;/span&gt;-dO&lt;span class="w"&gt; &lt;/span&gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;--cookies&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;--keep-session-cookies&lt;span class="w"&gt; &lt;/span&gt;--save-cookies&lt;span class="o"&gt;=&lt;/span&gt;cookies.txt&lt;span class="w"&gt; &lt;/span&gt;--load-cookies&lt;span class="o"&gt;=&lt;/span&gt;cookies.txt&lt;span class="w"&gt; &lt;/span&gt;--post-data&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;connexioncompte_2numSecuriteSociale=&lt;/span&gt;&lt;span class="nv"&gt;$login&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;amp;connexioncompte_2codeConfidentiel=&lt;/span&gt;&lt;span class="nv"&gt;$pass&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;amp;connexioncompte_2actionEvt=connecter&amp;amp;amp;submit=validerFormulaire(this)&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://assure.ameli.fr/PortailAS/appmanager/PortailAS/assure&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#Troisième passage pour se connecter&lt;/span&gt;
wget&lt;span class="w"&gt; &lt;/span&gt;-dO&lt;span class="w"&gt; &lt;/span&gt;index.html&lt;span class="w"&gt; &lt;/span&gt;--cookies&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;--keep-session-cookies&lt;span class="w"&gt; &lt;/span&gt;--save-cookies&lt;span class="o"&gt;=&lt;/span&gt;cookies.txt&lt;span class="w"&gt; &lt;/span&gt;--load-cookies&lt;span class="o"&gt;=&lt;/span&gt;cookies.txt&lt;span class="w"&gt; &lt;/span&gt;--post-data&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;connexioncompte_2numSecuriteSociale=&lt;/span&gt;&lt;span class="nv"&gt;$login&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;amp;connexioncompte_2codeConfidentiel=&lt;/span&gt;&lt;span class="nv"&gt;$pass&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;amp;connexioncompte_2actionEvt=connecter&amp;amp;amp;submit=validerFormulaire(this)&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://assure.ameli.fr/PortailAS/appmanager/PortailAS/assure&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Nous allons être obligé de faire plusieurs passages pour récupérer les cookies. Sur les deux premiers passages, je ne conserve pas de fichiers de sortie en envoyant le résultat de la requête vers /dev/null. En revanche, mes cookies seront bien conservés dans le fichiers cookies.txt grâce à l'option --save-cookies. &lt;/p&gt;
&lt;p&gt;Pour le post, un petit coup d'extension web developer de firefox fera l'affaire. Cela permet d'identifier les zones de formulaires à remplir.&lt;/p&gt;
&lt;h3&gt;La même chose en Python 3&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/python3.2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib.parse&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib.error&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;http.cookiejar&lt;/span&gt;

&lt;span class="c1"&gt;#Le fichier qui va stocker les cookies&lt;/span&gt;
&lt;span class="n"&gt;cj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookiejar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LWPCookieJar&lt;/span&gt;

&lt;span class="c1"&gt;#Des raccourcis pour lancer les requêtes&lt;/span&gt;
&lt;span class="n"&gt;urlopen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="n"&gt;Request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;
&lt;span class="n"&gt;urlencode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlencode&lt;/span&gt;

&lt;span class="c1"&gt;#Modification de l&amp;#39;opener pour gérer les cookies&lt;/span&gt;
&lt;span class="n"&gt;opener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opener&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Notre fonction pour ouvrir les pages html avec gestion des cookies et de l&amp;#39;encodage&lt;/span&gt;
&lt;span class="c1"&gt;#avec gestion du retour du code erreur&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;requete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urlencode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IOError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;reason&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
           &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Reason:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reason&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          
       &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
           &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Code erreur&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;

&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;
&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://assure.ameli.fr/PortailAS/appmanager/PortailAS/assure&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;connexioncompte_2numSecuriteSociale&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;connexioncompte_2codeConfidentiel&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s1"&gt;&amp;#39;connexioncompte_2actionEvt&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;connecter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;validerFormulaire(this)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#Deux passages pour récupérer les cookies puis le cookie sécurisé&lt;/span&gt;
&lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;These are the cookies we have received so far :&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;  :  &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;the_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;the_page.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;the_page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;the_page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Dans values, nous allons trouver l'équivalent du post de wget. Il faut l'encoder en binaire en Python 3 d'où le urlencode.&lt;/p&gt;
&lt;p&gt;Pourquoi écrire en plusieurs lignes Python quelquechose qui tient en 3 lignes en bash :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Je vais pouvoir réutiliser le code pour d'autres connexions&lt;/li&gt;
&lt;li&gt;Je vais pouvoir mutualiser du code (gestion de l'opener, de la requête, ...)&lt;/li&gt;
&lt;li&gt;Je vais pouvoir l'insérer dans un programme plus large&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si certains sont intéressés, j'ai le même en Python 2.&lt;/p&gt;</content><category term="Python"/><category term="bash"/><category term="cookie"/><category term="post data"/><category term="Python"/><category term="urllib"/><category term="wget"/></entry><entry><title>Exécuter un script shell</title><link href="https://letchap.github.io/2013/02/24/executer-un-script-shell/" rel="alternate"/><published>2013-02-24T22:29:00+01:00</published><updated>2013-02-24T22:29:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-24:/2013/02/24/executer-un-script-shell/</id><summary type="html">&lt;p&gt;Nous avons fait deux beaux scripts en shell pour utiliser la commande &lt;a href="https://letchap.github.io/2013/02/23/convertir-des-fichiers-flac-en-m4a-grace-a-un-script-shell/" title="Convertir des fichiers flac en m4a grâce à un script shell"&gt;avconv&lt;/a&gt;. Nous avons enregistré nos scripts dans des fichiers monscript.sh. Maintenant comment exécuter ces scripts ?&lt;/p&gt;
&lt;p&gt;La première chose à faire est de rendre exécutable le script par la commande :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;monscript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ensuite, deux façons de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nous avons fait deux beaux scripts en shell pour utiliser la commande &lt;a href="https://letchap.github.io/2013/02/23/convertir-des-fichiers-flac-en-m4a-grace-a-un-script-shell/" title="Convertir des fichiers flac en m4a grâce à un script shell"&gt;avconv&lt;/a&gt;. Nous avons enregistré nos scripts dans des fichiers monscript.sh. Maintenant comment exécuter ces scripts ?&lt;/p&gt;
&lt;p&gt;La première chose à faire est de rendre exécutable le script par la commande :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;monscript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ensuite, deux façons de lancer le script.&lt;/p&gt;
&lt;h1&gt;Vous êtes encore en train de travailler sur votre script :&lt;/h1&gt;
&lt;p&gt;Le plus simple est de lancer le script en se plaçant dans le répertoire de travail où il se trouve et de taper la commande suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./monscript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Vous avez fini votre joli script :&lt;/h1&gt;
&lt;p&gt;Nous pouvons placer notre script dans un des répertoires bin du système :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dans usr/bin : le programme sera accessible à tous les utlisateurs&lt;/li&gt;
&lt;li&gt;dans usr/local/bin : le programme sera accessible aux utilisateurs de notre système&lt;/li&gt;
&lt;li&gt;dans ~/bin : le programme n'est accessible que par nous&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Par bonheur, sur la version 12.04 de Lubuntu par exemple, pas besoin de modifier le PATH pour ajouter notre répertoire bin personnel. Il suffit de le créer pour qu'il soit reconnu. En effet, dans le fichier home/.profile, nous trouvons les lignes suivantes :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/bin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;permettant de modifier automatiquement le PATH si le dossier home/bin existe.&lt;/p&gt;
&lt;p&gt;C'est magique !&lt;/p&gt;
&lt;p&gt;Il ne reste plus qu'à copier son script dans le répertoire ~/bin puis à le lancer depuis n'importe où en tapant son petit nom : monscript.sh&lt;/p&gt;</content><category term="Shell"/><category term="bash"/><category term="bin"/><category term="Lubuntu"/><category term="$PATH"/><category term="Shell"/></entry><entry><title>Chromium Firefox ou Midori sur Lubuntu ?</title><link href="https://letchap.github.io/2013/02/24/chromium-firefox-ou-midori-sur-lubuntu/" rel="alternate"/><published>2013-02-24T21:22:00+01:00</published><updated>2013-02-24T21:22:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-24:/2013/02/24/chromium-firefox-ou-midori-sur-lubuntu/</id><summary type="html">&lt;p&gt;Par défaut, Lubuntu est livré avec Chromium. Est ce le bon choix ? Pourquoi pas une livraison standard avec Firefox ? Et pourquoi pas Midori qui semble ultra léger et donc dans l'esprit d'un Lubuntu.&lt;/p&gt;
&lt;p&gt;J'ai fait une comparaison très subjective des trois navigateurs.&lt;/p&gt;
&lt;h3&gt;Les performances : vainqueur Midori&lt;/h3&gt;
&lt;p&gt;Sans conteste, que cela …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Par défaut, Lubuntu est livré avec Chromium. Est ce le bon choix ? Pourquoi pas une livraison standard avec Firefox ? Et pourquoi pas Midori qui semble ultra léger et donc dans l'esprit d'un Lubuntu.&lt;/p&gt;
&lt;p&gt;J'ai fait une comparaison très subjective des trois navigateurs.&lt;/p&gt;
&lt;h3&gt;Les performances : vainqueur Midori&lt;/h3&gt;
&lt;p&gt;Sans conteste, que cela soit à l'ouverture ou à l'utilisation, le moins consommateur en ressources machine est Midori, suivi de Firefox. Ouvrir Chromium sous Lubuntu, ça vous plombe un peu la machine, surtout la mienne qui ne dispose que de 512Mo de RAM.&lt;/p&gt;
&lt;h3&gt;Le téléchargement : vainqueur Firefox&lt;/h3&gt;
&lt;p&gt;Firefox et Chromium sont quasiment équivalents en terme de consommation ressources dès que l'on lance un téléchargement. En revanche, avec Firefox, il est possible de fermer tous les onglets pendant un téléchargement, ce que ne permet pas Chromium. Firefox gère également mieux les vitesses de téléchargements. Midori est catastrophique dés qu'il s'agit de télécharger, la machine consomme rapidement l'intégralité de ses ressources.&lt;/p&gt;
&lt;h3&gt;L'ergonomie : Vainqueur Chromium&lt;/h3&gt;
&lt;p&gt;Plus intuitif, plus facile d'utilisation, avec une gestion simple des marque-pages et de la configuration : l'ergononme est vraiment bien pensée sur Chromium. Midori tire bien son épingle du jeu, surtout dans la gestion des moteurs de recherche, en revanche pour l'import des marque-pages, il faut oublier. Firefox est un peu moins convivial, la gestion des marques est compliquée, même si l'on peut importer des marque-pages automatiquement.&lt;/p&gt;
&lt;h3&gt;Les extensions : Vainqueur Firefox&lt;/h3&gt;
&lt;p&gt;Rien n'égale la richesse des extensions sur Firefox, même s'il faut se méfier de la dégradation des performances si vous installez des milliards d'extensions.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Je ne comprends pas pourquoi Lubuntu n'est pas livré avec Firefox par défaut, plus performant et plus complet que Chromium. Midori est prometteur mais ne peut pas être utilisé pour télécharger. J'ai donc supprimé Chromium livré par défaut et installé Firefox à la place. Et cela n'en rend mon Lubuntu que plus agréable.&lt;/p&gt;</content><category term="Lubuntu"/><category term="Chromium"/><category term="Firefox"/><category term="Installation"/><category term="Lubuntu"/><category term="Midori"/></entry><entry><title>Convertir des fichiers flac en m4a grâce à un script shell</title><link href="https://letchap.github.io/2013/02/23/convertir-des-fichiers-flac-en-m4a-grace-a-un-script-shell/" rel="alternate"/><published>2013-02-23T21:36:00+01:00</published><updated>2013-02-23T21:36:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-23:/2013/02/23/convertir-des-fichiers-flac-en-m4a-grace-a-un-script-shell/</id><summary type="html">&lt;p&gt;Dans le précédent billet, nous avons vu comment convertir une video grâce aux commandes avconv et ffmpeg et comment l’automatiser dans un script shell.&lt;/p&gt;
&lt;p&gt;Cette fois ci, nous allons faire la même chose pour convertir des fichiers audio flac en m4a en introduisant deux contraintes supplémentaires :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lancer le programme …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Dans le précédent billet, nous avons vu comment convertir une video grâce aux commandes avconv et ffmpeg et comment l’automatiser dans un script shell.&lt;/p&gt;
&lt;p&gt;Cette fois ci, nous allons faire la même chose pour convertir des fichiers audio flac en m4a en introduisant deux contraintes supplémentaires :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lancer le programme depuis n’importe quel endroit&lt;/li&gt;
&lt;li&gt;Copier le dossier d’origine contenant les fichiers audios à convertir dans le répertoire musique avec les fichiers convertis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C’est parti, voici le code :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;
&lt;span class="normal"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find&lt;span class="w"&gt; &lt;/span&gt;~&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*.flac&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="nv"&gt;rep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;–re&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/^[[:punct:][:alnum:]]+\/([[:alnum:]]+)\/[[:alnum:]]+\.flac/\1/&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;titre&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;~/Musique/&lt;span class="nv"&gt;$rep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
mkdir&lt;span class="w"&gt; &lt;/span&gt;~/Musique/&lt;span class="nv"&gt;$rep&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
avconv&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-acodec&lt;span class="w"&gt; &lt;/span&gt;libvo_aacenc&lt;span class="w"&gt; &lt;/span&gt;-ab&lt;span class="w"&gt; &lt;/span&gt;192k&lt;span class="w"&gt; &lt;/span&gt;-ar&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;44100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/Musique/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$rep&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;titre&lt;/span&gt;&lt;span class="p"&gt;%%.flac&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.m4a&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Nous allons décortiquer tout ça et expliquer les éléments mis en œuvre dans ce script.&lt;/p&gt;
&lt;p&gt;Le principe général:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Je recherche dans mon dossier personnel tous les fichiers flac,&lt;/li&gt;
&lt;li&gt;Je cherche le dossier dans lequel sont rangés ces fichiers, dossier qui est en général un nom d’album,&lt;/li&gt;
&lt;li&gt;Je créé le dossier dans le répertoire musique,&lt;/li&gt;
&lt;li&gt;Je convertis mes fichiers audio et je les range dans le bon dossier du répertoire musique.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La première ligne indique que nous sommes en train d’écrire un script shell avec un interpréteur bash.&lt;/p&gt;
&lt;p&gt;La 2ème ligne introduit deux notions : les boucles et la substitution :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nous alimentons une variable file avec le résultat de la commande find. La synthaxe est la suivante $(commande),&lt;/li&gt;
&lt;li&gt;La commande find en elle-même va rechercher tous les fichiers (type –f) dont le nom (-name) se termine par l’extension *.flac sur l’ensemble des répertoires et sous répertoires de l’utilisateur (~),&lt;/li&gt;
&lt;li&gt;La variable file va prendre successivement comme valeur le contenu de la commande file et pour chacune de ces valeurs va effectuer le traitement (for file in $(); do).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sur la 3ème ligne nous allons récupérer dans une variable rep le nom du répertoire dans lequel se trouve le fichier flac, ce répertoire porte en général le nom de l’artiste ou de l’album, cela permet de classer les fichiers une fois convertis. Pour cela nous allons utiliser un tube et la commande sed et les expressions régulière&lt;/p&gt;
&lt;p&gt;Commençons par la fin, la commande sed. La commande sed permet de rechercher et de remplacer des caractères dans une chaîne de caractères. Cela se fait au moyen des expressions régulières&lt;/p&gt;
&lt;p&gt;&lt;code&gt;^[[:punct:][:alnum:]]+\/([[:alnum:]]+)\/[[:alnum:]]+.flac&lt;/code&gt; signifie :&lt;/p&gt;
&lt;p&gt;Je commence par le début de ma chaîne, je cherche une série de caractères de ponctuation ou aplhanumérique jusqu’à sélectionner une série de caractères aplhanumériques encadrer par deux "/" se trouvant avant le nom du fichier se finissant par ".flac"&lt;/p&gt;
&lt;p&gt;Ici les anti-slash sont des caractères d’échappement du "/" et du "." qui peuvent être confondus avec des expressions régulières.&lt;/p&gt;
&lt;p&gt;Entre les "()" se trouvent ce que l’on veut extraire.&lt;/p&gt;
&lt;p&gt;Ceci est un petit exemple d’utilisation des expressions régulières. Elles sont évidemment beaucoup plus riches que ce qui est présenté ici, n’hésitez pas à vous plongez dedans et faire vos propres tests.&lt;/p&gt;
&lt;p&gt;Enfin dans le reste de la commande sed –r siginifie que nous utilisons les expressions régulières étendues, -e que les instructions sed se trouvent directement dans la ligne de commande et non pas dans un fichier, et s/xxx/\1/ que nous faisons une recherche dont nous stockons le résultat dans 1.&lt;/p&gt;
&lt;p&gt;Ouf !&lt;/p&gt;
&lt;p&gt;Mais comment passer le contenu de la variable file à sed pour alimenter la variable rep. Grâce à un printf de la variable file dont nous redirigeons la sortie grâce à un tube | vers la commande sed.&lt;/p&gt;
&lt;p&gt;En 4ème ligne, nous récupérons le titre de la chanson dans une variable titre par un simple echo $file.&lt;/p&gt;
&lt;p&gt;Sur la 5ème ligne, nous allons tester si le dossier contenant nos titres existe déjà dans le répertoire Musique grâce au test &lt;code&gt;[ ! –d xxx]&lt;/code&gt;. [ ] veut dire que nous faisons un test, ! teste la non existence et –d indique que nous faisons un test sur un nom de répertoire.&lt;/p&gt;
&lt;p&gt;Si le répertoire n’existe pas, alors nous le créons par la commande mkdir en ligne 6.&lt;/p&gt;
&lt;p&gt;Fin de la boucle si en ligne 7 par un fi.&lt;/p&gt;
&lt;p&gt;Nous avons déjà vu la conversion en ligne 8 dans un précédent article, je n’y reviens pas (j’ai simplement supprimer la partie –vcodec) , ainsi que le bouclage de la boucle for par le petit done de la ligne 9.&lt;/p&gt;
&lt;p&gt;Et voilà, c'est prêt pour une conversion.&lt;/p&gt;</content><category term="Shell"/><category term="Linux"/><category term="Lubuntu"/><category term="Shell"/><category term="Python"/></entry><entry><title>Convertir une video pour mon téléphone Sony W995 avec avconv (ou ffmpeg)</title><link href="https://letchap.github.io/2013/02/23/convertir-une-video-pour-mon-telephone-sony-w995-avec-avconv-ou-ffmpeg/" rel="alternate"/><published>2013-02-23T21:25:00+01:00</published><updated>2013-02-23T21:25:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-23:/2013/02/23/convertir-une-video-pour-mon-telephone-sony-w995-avec-avconv-ou-ffmpeg/</id><summary type="html">&lt;p&gt;Convertir des videos ou de fichiers audios sur Mac OS X pour un vieux téléphone comme le mien, c’est assez fastidieux. Il faut obligatoirement passer par itunes et par le logiciel de synchronisation tout moche disponible sur le site du fabricant.&lt;/p&gt;
&lt;p&gt;Sur Lubuntu, pas d’itunes et pas de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Convertir des videos ou de fichiers audios sur Mac OS X pour un vieux téléphone comme le mien, c’est assez fastidieux. Il faut obligatoirement passer par itunes et par le logiciel de synchronisation tout moche disponible sur le site du fabricant.&lt;/p&gt;
&lt;p&gt;Sur Lubuntu, pas d’itunes et pas de logiciel de synchronisation. Alors, comment convertir ces maudits fichiers ?&lt;/p&gt;
&lt;h3&gt;1ère tentative avortée : trouver des logiciels de conversion&lt;/h3&gt;
&lt;p&gt;Personnellement j’ai testé deux logiciels : Arista et WINFF (disponibles dans la logithèque Lubuntu ou les paquets synaptic).&lt;/p&gt;
&lt;h4&gt;Arista&lt;/h4&gt;
&lt;p&gt;Le plus beau graphiquement, le problème vient du fait que la présélection pour le W995 disponible sur leur site ne fonctionne pas (une présélection est un jeu de paramètres de conversion de fichiers, spécifique à un appareil ou à une famille d’appareil).&lt;/p&gt;
&lt;p&gt;Mais c’est beau et ça fonctionne sans doute avec d’autres téléphones.&lt;/p&gt;
&lt;h4&gt;WINFF&lt;/h4&gt;
&lt;p&gt;Sur WINFF, il faut créer soit même sa présélection pour le W995, car elle n’est pas disponible par défaut. Et pour créer soit même sa présélection, finalement, il faut déjà faire tout le boulot de recherche et de paramétrage de la conversion soi-même, en résumé, il faut trouver tout seul comment fonctionne les commandes avconv ou ffmpeg, donc pas besoin de WINFF. D’autant plus que pour le coup, WINFF c’est moche et pas très convivial.&lt;/p&gt;
&lt;p&gt;En revanche, grâce à WINFF, je me suis posé les bonnes questions pour arriver à la solution. Et WINFF fonctionne sans doute très bien avec d’autres téléphones.&lt;/p&gt;
&lt;h3&gt;2ème tentative : avec une ligne de commande : avconv ou ffmpeg&lt;/h3&gt;
&lt;p&gt;Ce que je décris ici fonctionne indifféremment avec la commande avconv ou ffmpeg. Vous pouvez remplacer l’une par l’autre. Après, comme je ne comprends rien au débat autour de ces deux commandes, je ne me suis pas posé plus de questions que ça.&lt;/p&gt;
&lt;h4&gt;1. Quels sont les caractéristiques du format de sortie ?&lt;/h4&gt;
&lt;p&gt;Avant de convertir, il faut savoir en quoi convertir. Nous allons trouver l’information sur la documentation utilisateur de l’appareil.&lt;/p&gt;
&lt;p&gt;La taille de l’image, c’est 320x240, le format video mpeg4, le format audio AAC. A priori, ces informations sont largement suffisantes.&lt;/p&gt;
&lt;h4&gt;2. comment fonctionne avconv ou ffmpeg ?&lt;/h4&gt;
&lt;p&gt;Le programme avconv s'installe avec le paquet libav-tools&lt;/p&gt;
&lt;p&gt;Voici la ligne de commande brute de décoffrage :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;avconv&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;monfichier.avi&lt;span class="w"&gt; &lt;/span&gt;-c:a&lt;span class="w"&gt; &lt;/span&gt;aac&lt;span class="w"&gt; &lt;/span&gt;-strict&lt;span class="w"&gt; &lt;/span&gt;experimental&lt;span class="w"&gt; &lt;/span&gt;-b:a&lt;span class="w"&gt; &lt;/span&gt;128k&lt;span class="w"&gt; &lt;/span&gt;-ar&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;44100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-c:v&lt;span class="w"&gt; &lt;/span&gt;mpeg4&lt;span class="w"&gt; &lt;/span&gt;-b:v&lt;span class="w"&gt; &lt;/span&gt;600k&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;320x240&lt;span class="w"&gt; &lt;/span&gt;~/vidéos/monfichier.mp4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dans le détail :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avconv : la commande de conversion (le fonctionnement est le même en mettant ffmpeg à la place de avconv),&lt;/li&gt;
&lt;li&gt;-i monfichier.avi : le fichier d’entrée,&lt;/li&gt;
&lt;li&gt;-c:v mpeg4 –b:v 600k : j’utilise pour convertir la partie video le codec mpeg 4 avec une qualité de conversion de 600k (c'est largement suffisant pour mon téléphone)&lt;/li&gt;
&lt;li&gt;-c:a -strict experimental -b:a 128k -ar 44100 : j’utilise pour convertir la partie son le codec aac livré par défaut sur avconv. Pour cela, il faut ajouter &lt;code&gt;-strict experimental&lt;/code&gt; sinon avconv fait apparaître un message d'avertissement. Il est possible d'utiliser d'autres librairies comme libvo-aacenc ou libfaac. Elles ne sont pas installées par défaut, et dans certains cas il faudra recompiler avconv (sur Debian, pas sur Mageia par exemple).&lt;/li&gt;
&lt;li&gt;~/Video/monfichier.mp4 : le fichier de sortie, ici dans le dossier video de mon répertoire personnel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour connaître la liste des formats disponibles sur votre version d'avconv vous pouvez taper la commande suivante dans le terminal :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;avconv&lt;span class="w"&gt; &lt;/span&gt;-formats
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;3ème tentative : mon premier script en shell&lt;/h1&gt;
&lt;p&gt;C’est bien beau cette ligne de commande, mais ça reste quand même moins convivial que WINFF.&lt;/p&gt;
&lt;p&gt;Je me suis donc lancé dans l’écriture de mon tout premier script en shell pour automatiser tout ça.&lt;/p&gt;
&lt;p&gt;J’ai donc besoin de convertir toute une série de fichiers video dans des formats différents sans être obligé de lancer une ligne de commande par fichier en changeant à chaque fois à la main le fichier en entrée et le fichier en sortie.&lt;/p&gt;
&lt;p&gt;Le script le voici (à créer dans un fichier monscript.sh)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.avi&lt;span class="w"&gt; &lt;/span&gt;*.mp4&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
avconv&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-c:a&lt;span class="w"&gt; &lt;/span&gt;aac&lt;span class="w"&gt; &lt;/span&gt;-strict&lt;span class="w"&gt; &lt;/span&gt;experimental&lt;span class="w"&gt; &lt;/span&gt;-b:a&lt;span class="w"&gt; &lt;/span&gt;128k&lt;span class="w"&gt; &lt;/span&gt;-ar&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;44100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-c:v&lt;span class="w"&gt; &lt;/span&gt;mpeg4&lt;span class="w"&gt; &lt;/span&gt;-b:v&lt;span class="w"&gt; &lt;/span&gt;600k&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;320x240&lt;span class="w"&gt; &lt;/span&gt;~/Video/&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="p"&gt;%%.*&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.mp4&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Ce que je trouve beau, c’est qu’une automatisation de tâche tienne en 4 lignes de code, et encore, comme c’est mon premier script, je suis sûr qu’un pro ferait beaucoup mieux.&lt;/p&gt;
&lt;p&gt;Pour expliquer un peu ce qui se passe là-dedans :&lt;/p&gt;
&lt;p&gt;La 1ère ligne permet tout simplement de dire qu’on est en train d’écrire un script shell, et qu’on utilisera l’interpréteur bash.&lt;/p&gt;
&lt;p&gt;La 2ème ligne initialise une variable appelée file avec différents types de fichiers video. Ici, file va prendre successivement les valeurs &lt;em&gt;.avi, puis &lt;/em&gt;.mp4. Enfin, pour chacun de ses fichiers (for) il va lancer la commande de la 3ème ligne (do).&lt;/p&gt;
&lt;p&gt;La 3ème ligne va lancer successivement la conversion de tous les fichiers .avi et .mp4 qu’il trouvera dans le répertoire où est lancé le programme. Nous reconnaîtrons au passage la ligne de commande du §2 avec quelques petites différences.&lt;/p&gt;
&lt;p&gt;-i : nous passons la variable file en paramètre en écrivant $file.&lt;/p&gt;
&lt;p&gt;~/Video/"${file%%.*}.mp4" : Le fichier de sortie : je le renomme en .mp4 en modifiant l’extension grâce aux outils de traitement de variable %%. Pour plus d’explication, il faut trouver un manuel shell qui explique ce que sont les outils de traitements. Sinon, vous pouvez copier le script tel quel, il est testé et approuvé.&lt;/p&gt;
&lt;p&gt;La 4ème ligne, va clore la boucle initiée par "for".&lt;/p&gt;
&lt;p&gt;Derniers éléments d’informations si vous souhaitez vous lancer dans l’écriture d’un script :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;il faut changer les droits du script pour le rendre exécutable : chmod +x monscript.sh&lt;/li&gt;
&lt;li&gt;il se lance de la manière suivante (attention aux chemins des répertoires où se trouvent les fichiers et le programme, nous verrons plus tard comment simplifier les lancements):&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./monscript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Du coup, j’en ai profité pour faire un autre script pour les fichiers audio sur le même principe pour transformer des fichiers flac en m4a, en n’utilisant que la partie –c:a, sans la partie -c:v. Et comme j’en ai aussi profité pour approfondir mes connaissances shell, le prochain billet parlera variables, sed, expressions régulières, tubes, que du bonheur.&lt;/p&gt;</content><category term="Shell"/><category term="arista"/><category term="avconv"/><category term="bash"/><category term="ffmpeg"/><category term="Shell"/><category term="w995"/><category term="winff"/></entry><entry><title>Démarrer sur une clé USB sans passer par le BIOS</title><link href="https://letchap.github.io/2013/02/23/demarrer-sur-une-cle-usb-sans-passer-par-le-bios/" rel="alternate"/><published>2013-02-23T21:16:00+01:00</published><updated>2013-02-23T21:16:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-23:/2013/02/23/demarrer-sur-une-cle-usb-sans-passer-par-le-bios/</id><summary type="html">&lt;p&gt;Faire des clés live USB c’est bien joli, mais si on ne peut pas démarrer sur une clé USB sur son ordinosaure, c’est ballot.&lt;/p&gt;
&lt;p&gt;Heureusement, il existe une solution pour démarrer sur une clé USB sans passer par le BIOS : Plop Manager.&lt;/p&gt;
&lt;p&gt;Si vous souhaitez vous lancer, je …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Faire des clés live USB c’est bien joli, mais si on ne peut pas démarrer sur une clé USB sur son ordinosaure, c’est ballot.&lt;/p&gt;
&lt;p&gt;Heureusement, il existe une solution pour démarrer sur une clé USB sans passer par le BIOS : Plop Manager.&lt;/p&gt;
&lt;p&gt;Si vous souhaitez vous lancer, je vous mets en garde, c’est assez difficile. Nous allons essayer d’y aller pas à pas.&lt;/p&gt;
&lt;p&gt;Tout d’abord, le principe général :&lt;/p&gt;
&lt;p&gt;Sur Ubuntu, le gestionnaire de démarrage s’appelle GRUB. Par défaut, il se contente de lancer le système d’exploitation. Lorsqu’il y a plusieurs systèmes d’exploitation installés sur la machine (dual boot), c’est GRUB qui va vous donner le choix du système sur lequel démarrer. Nous allons ajouter une entrée dans GRUB qui lancera le programme Plop Manager au démarrage et nous permettra ainsi de démarrer sur la clé USB.&lt;/p&gt;
&lt;p&gt;Nous allons commencer par installer Plop Manager.&lt;/p&gt;
&lt;p&gt;Pour cela, il faut télécharger le dossier plpbt-5.0.14.zip (c’est la dernière version au moment de l’écriture du billet) sur le site de Plop manager &lt;a href="http://www.plop.at/en/bootmanager/download.html" title="Plop manager"&gt;à cette adresse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vous décompressez le .zip et vous copiez le fichier plpbt.bin dans le répertoire /boot.&lt;/p&gt;
&lt;p&gt;Ensuite il faut éditer le fichier /etc/grub.d/40_custom avec &lt;code&gt;sudo nano /etc/grub.d/40_custom&lt;/code&gt;, puis ajouter les lignes ci-dessous : &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;menuentry &amp;quot;Plop Boot Manager&amp;quot; {
set root=&amp;#39;(hd0,1)&amp;#39;
linux16 /boot/plpbt.bin
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comme son nom l'indique, il s'agit d'un fichier où nous pouvons ajouter des entrées personnalisées dans GRUB.&lt;/p&gt;
&lt;p&gt;Nous avons maintenant installé le programme et ajouté une entrée pour appeler ce programme dans GRUB.&lt;/p&gt;
&lt;p&gt;Dernière étape sur certaines distrubutions (Ubuntu par exemple), il faut forcer l'affichage du GRUB au démarrage. En effet, si certaines distributions proposent l'affichage systématique de GRUB par défaut, d'autres non et lancent directement le système présent sur l'ordinateur s'il est le seul présent.&lt;/p&gt;
&lt;p&gt;IL est possible de modifier ce paramètrage de deux manières. D'abord avec l'outil graphique GRUB Customizer disponible dans un ppa en tapant les commandes suivantes dans le terminal :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;add-apt-repository&lt;span class="w"&gt; &lt;/span&gt;ppa:danielrichter2007/grub-customizer
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;grub-customizer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Il est possible également de le faire manuellement en éditant le fichier /etc/default/grub en fixant une valeur de 10s par exemple pour le TIMEOUT `GRUB_TIMEOUT=10, ce qui forcera l'affichage de GRUB au démarrage.&lt;/p&gt;
&lt;p&gt;Très important, il reste à mettre à jour GRUB avec la commande suivante dans le terminal :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;update-grub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et voilà, au démarrage, il vous sera proposé de choisir Plop Manager, puis une fois dans Plop Manager, de choisir USB pour démarrer votre PC.&lt;/p&gt;</content><category term="Linux"/><category term="BIOS"/><category term="Boot"/><category term="Grub"/><category term="Grub2"/><category term="Installation"/><category term="Lubuntu"/><category term="Plop Manager"/></entry><entry><title>Transférer des fichiers de Lubuntu vers Mountain Lion</title><link href="https://letchap.github.io/2013/02/22/transferer-des-fichiers-de-lubuntu-vers-mountain-lion/" rel="alternate"/><published>2013-02-22T21:08:00+01:00</published><updated>2013-02-22T21:08:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-22:/2013/02/22/transferer-des-fichiers-de-lubuntu-vers-mountain-lion/</id><summary type="html">&lt;p&gt;Comme je l’expliquais dans l’article précédent, avec Lubuntu, il n’existe pas en natif de moyen simple de transférer des fichiers en FTP (il faut installer Filezilla).&lt;/p&gt;
&lt;p&gt;De la même manière, il n’existe pas en natif de moyen simple de communiquer avec un système Mac OS X …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Comme je l’expliquais dans l’article précédent, avec Lubuntu, il n’existe pas en natif de moyen simple de transférer des fichiers en FTP (il faut installer Filezilla).&lt;/p&gt;
&lt;p&gt;De la même manière, il n’existe pas en natif de moyen simple de communiquer avec un système Mac OS X.&lt;/p&gt;
&lt;p&gt;Il existe 2 solutions pour le faire, une compliquée et pas très rapide, mais pour la beauté du geste, je vais la décrire, une super simple et super rapide, ma préférée.&lt;/p&gt;
&lt;h3&gt;1) La solution compliquée et lente : utiliser le protocole de OS X AFP avec NETATALK&lt;/h3&gt;
&lt;p&gt;AFP est le protocole natif de transfert de fichier de Mac OS X. Par défaut, il n’est pas présent sur Lubuntu. Pour mettre son Mac et son PC en réseau, il faut utiliser NETATALK.&lt;/p&gt;
&lt;p&gt;J’avais installé cette solution avant de découvrir SFTP. La procédure d’installation est assez complexe, mais j’ai trouvé un très bon tutoriel &lt;a href="http://www.monnetamoi.net/articles.php?lng=fr&amp;amp;pg=81" title="Installer netatalk"&gt;ici&lt;/a&gt;. Je l’ai un peu adapté à ma sauce, notamment en m’embêtant un peu moins avec les droits (je n’ai pas créé de répertoire spécial pour les transferts par exemple, et donc pas eu besoin de faire de chmod non plus), par défaut j’ai eu accès à l’ensemble du disque dur de mon PC depuis mon Mac. En même temps, seule la petite famille utilise ces deux ordinateurs donc tout le monde peut avoir accès à tout.&lt;/p&gt;
&lt;p&gt;Cette solution ne fonctionne qu’avec les deux ordinateurs allumés et uniquement depuis le Mac. Le transfert peut se faire dans les deux sens.&lt;/p&gt;
&lt;p&gt;En revanche, j’ai abandonné assez rapidement cette solution, en dehors du coté assez complexe de la mise en place, je trouve les transferts de fichiers assez lents et consommateur en ressources machine. Mais ça marche.&lt;/p&gt;
&lt;p&gt;N’hésiter pas à me demander si vous voulez plus de détails.&lt;/p&gt;
&lt;h3&gt;2) La solution simple et rapide : SFTP et Cyberduck&lt;/h3&gt;
&lt;p&gt;Et puis, j’ai trouvé une solution beaucoup plus simple et beaucoup plus rapide en termes de temps de transfert : utiliser le protocole SFTP avec Cyberduck. SFTP, c’est du FTP sécurisé avec un échange de clé de sécurité. Dans mon exemple, cet échange de clé est transparent.&lt;/p&gt;
&lt;h4&gt;Sur Lubuntu&lt;/h4&gt;
&lt;h5&gt;1) Installer openssh-server&lt;/h5&gt;
&lt;p&gt;Le logiciel openssh-server vous permettra de transformer votre PC en serveur SFTP, et donc vous permettra de vous connecter depuis Mac OS X en SFTP.&lt;/p&gt;
&lt;p&gt;Cela peut se faire à partir de l’installateur de paquet Synaptic.&lt;/p&gt;
&lt;p&gt;Par défaut, le serveur sera allumé au démarrage de l’ordinateur.&lt;/p&gt;
&lt;h5&gt;2) Récupérer l’adresse IP de l’ordinateur&lt;/h5&gt;
&lt;p&gt;Un simple clic droit sur l’icône de connexion réseau vous donnera l’information.&lt;/p&gt;
&lt;p&gt;C’est tout sur Lubuntu.&lt;/p&gt;
&lt;h4&gt;Sur Mac OS X&lt;/h4&gt;
&lt;p&gt;J’ai fait cette installation avec la version Mountain Lion de OS X. Je pense que cela fonctionne avec les versions antérieures.&lt;/p&gt;
&lt;h5&gt;1) Installer Cyberduck&lt;/h5&gt;
&lt;p&gt;Cyberduck est un logiciel FTP bien connu des Mac users. Il est disponible gratuitement sur le site de &lt;a href="http://cyberduck.ch/" title="Cyberduck"&gt;Cyberduck&lt;/a&gt; (payant sur le Mac App Store).&lt;/p&gt;
&lt;h5&gt;2) Créer une nouvelle connexion SFTP en précisant&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;L’adresse IP&lt;/li&gt;
&lt;li&gt;Le port : 22&lt;/li&gt;
&lt;li&gt;Les login et mot de passe de votre session Lubuntu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dites Ok quand Cyberduck vous pose une question.&lt;/p&gt;
&lt;p&gt;Et comme par magie, vous êtes connecté à Lubuntu, sur l’ensemble du disque dur.&lt;/p&gt;
&lt;p&gt;Et c’est tout sur Mac OS X. Simple, non ?&lt;/p&gt;
&lt;p&gt;Cette solution ne fonctionne qu’avec les deux ordinateurs allumés et uniquement depuis le Mac. Le transfert peut se faire dans les deux sens.&lt;/p&gt;
&lt;p&gt;Encore une fois, cela reste très simple car je ne m’embête pas à gérer des droits utilisateurs, restant dans le cadre d’une utilisation familiale. Mais qu’est ce que c’est pratique ! Plus de copie sur clé USB, et en plus le transfert est hyper rapide.&lt;/p&gt;</content><category term="Mac OS X"/><category term="SFTP"/><category term="Cyberduck"/><category term="Lubuntu"/><category term="Mountain Lion"/><category term="NETATALK"/><category term="openssh-server"/><category term="OS X"/><category term="Réseau"/></entry><entry><title>Transférer des fichiers de Lubuntu vers la freebox HD</title><link href="https://letchap.github.io/2013/02/21/transferer-des-fichiers-de-lubuntu-vers-la-freebox-hd/" rel="alternate"/><published>2013-02-21T20:58:00+01:00</published><updated>2013-02-21T20:58:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-21:/2013/02/21/transferer-des-fichiers-de-lubuntu-vers-la-freebox-hd/</id><summary type="html">&lt;p&gt;J’adore mon Lubuntu, cependant, il a une petite faiblesse sur les connexions réseau. En natif, le gestionnaire de fichiers PCManFM ne gère ni le FTP ni l’AFP (le protocole de Mac OS X).&lt;/p&gt;
&lt;p&gt;Et sans FTP, c’est compliqué de transférer des fichiers vers la Freebox.&lt;/p&gt;
&lt;p&gt;La première …&lt;/p&gt;</summary><content type="html">&lt;p&gt;J’adore mon Lubuntu, cependant, il a une petite faiblesse sur les connexions réseau. En natif, le gestionnaire de fichiers PCManFM ne gère ni le FTP ni l’AFP (le protocole de Mac OS X).&lt;/p&gt;
&lt;p&gt;Et sans FTP, c’est compliqué de transférer des fichiers vers la Freebox.&lt;/p&gt;
&lt;p&gt;La première étape, bien sûr, c’est d’avoir autorisé les transferts ftp sur la console de la freebox (mais bon, ce n’est pas un blog sur la freebox, c’est expliqué partout all over ze web).&lt;/p&gt;
&lt;p&gt;J’imagine que les solutions décrites sont applicables à la Freebox Revolution, mais comme je suis resté sur l’ancienne box, je n’ai pas pu tester, et puis c’est peut être encore plus simple.&lt;/p&gt;
&lt;h3&gt;1ère solution : ftp dans le terminal&lt;/h3&gt;
&lt;p&gt;En fait, pour moi, ça n’a pas été une solution, trop compliqué. Mais en théorie ça doit marcher. Ce premier test infructueux avec la commande ftp m’a cependant permis de trouver la 2ème solution, à savoir la commande lftp.&lt;/p&gt;
&lt;h3&gt;2ème solution : lftp dans le terminal&lt;/h3&gt;
&lt;p&gt;C’est pareil que ftp, mais en plus simple, et là, j’ai tout compris.&lt;/p&gt;
&lt;p&gt;Ci dessous, tout ce qu'il y a à faire :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;lftp&lt;span class="w"&gt; &lt;/span&gt;freebox:@hd1.freebox.fr
lftp&lt;span class="w"&gt; &lt;/span&gt;freebox:@hd1.freebox.fr:~&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Disque&lt;span class="se"&gt;\ &lt;/span&gt;dur/Video
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ok,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/Disque&lt;span class="w"&gt; &lt;/span&gt;dur/Video
lftp&lt;span class="w"&gt; &lt;/span&gt;freebox:@hd1.freebox.fr:/Disque&lt;span class="w"&gt; &lt;/span&gt;dur/Video&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;put&lt;span class="w"&gt; &lt;/span&gt;/adresse/fichier.avi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;D'abord se connecter à lftp. Si vous avez mis un mot de passe pour la connection lftp à votre freebox, il faut l'ajouter entre ":" et "@".&lt;/p&gt;
&lt;p&gt;Une fois sur le prompt lftp, ce que personnellement j’ai trouvé très simple, c’est de pouvoir se balader dans le répertoire de la Freebox avec les commandes du terminal, en particulier "cd" et le "\" (pour gérer les espaces dans le nom des répertoires). Dans l'exemple, je me suis positionné sur le répertoire Video du Disque dur de la Freebox.&lt;/p&gt;
&lt;p&gt;Pour le transfert du fichier lui-même, il ne reste plus qu’à taper la commande put et de faire un copier – coller du fichier (adresse complète va s'afficher toute seule), le transfert démarre.&lt;/p&gt;
&lt;h3&gt;3ème solution : Filezilla&lt;/h3&gt;
&lt;p&gt;Ze solution. Avec Filezilla, tout est devenu encore plus simple et encore plus rapide.&lt;/p&gt;
&lt;p&gt;Je suis venu à Filezilla par hasard, en créant la première version du blog sous Wordpress. Pour créer un blog avec Wordpress, il est expliqué partout qu’il faut utiliser Filezilla pour faire des transferts FTP du contenu du blog. Ah bon, Filezilla fait du transfert FTP sans peine. Mais pourquoi je m’embête avec la ligne de commande (en fait, je ne m’embête jamais avec la ligne de commande, mais bon, des fois autant aller au plus pratique quand même).&lt;/p&gt;
&lt;p&gt;Sur l’écran d’accueil, il suffit de renseigner les informations comme illustrer ci-dessous :&lt;/p&gt;
&lt;p&gt;&lt;img alt="Connexion Filezilla" src="https://letchap.github.io/images/filezilla.png"&gt;&lt;/p&gt;
&lt;p&gt;La fenêtre de gauche est le navigateur de votre disque dur, celle de droite celle de la Freebox. Déployer le répertoire de la Freebox où vous souhaitez transférer le fichier. Il suffit alors de sélectionner le fichier de votre disque dur à transférer, et de faire un clic droit et de choisir "Envoyer".&lt;/p&gt;
&lt;p&gt;Sur mon PC, c’est beaucoup, beaucoup, beaucoup plus rapide que lftp (transfert entre 1,7 et 2,3 Mo/s chez moi).&lt;/p&gt;
&lt;p&gt;Evidemment, ça fonctionne aussi dans l’autre sens.&lt;/p&gt;
&lt;p&gt;Enfin, les paramètres de la connexion sont sauvegardés dans connexion rapide, donc la 2ème connexion sera très simple.&lt;/p&gt;</content><category term="Freebox"/><category term="Filezilla"/><category term="Freebox HD"/><category term="Freebox V5"/><category term="FTP"/><category term="lftp"/><category term="Lubuntu"/><category term="Réseau"/></entry><entry><title>Fabriquer une clé live usb depuis n'importe quelle distribution linux</title><link href="https://letchap.github.io/2013/02/20/fabriquer-une-cle-live-usb-depuis-nimporte-quelle-distribution-linux/" rel="alternate"/><published>2013-02-20T20:51:00+01:00</published><updated>2013-02-20T20:51:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-20:/2013/02/20/fabriquer-une-cle-live-usb-depuis-nimporte-quelle-distribution-linux/</id><summary type="html">&lt;p&gt;J’adore tester de nouvelles distributions Linux, mais j’en ai marre de graver des tonnes de CD. La solution, la clé USB.&lt;/p&gt;
&lt;p&gt;Il existe tout un tas de logiciels, différents selon les distributions pour créer des clés bootables. Trop compliqué pour moi. La solution qui marche sur toutes les …&lt;/p&gt;</summary><content type="html">&lt;p&gt;J’adore tester de nouvelles distributions Linux, mais j’en ai marre de graver des tonnes de CD. La solution, la clé USB.&lt;/p&gt;
&lt;p&gt;Il existe tout un tas de logiciels, différents selon les distributions pour créer des clés bootables. Trop compliqué pour moi. La solution qui marche sur toutes les distributions est hyper simple en 3 commandes dans le terminal : isohybrid, df – h, dd.&lt;/p&gt;
&lt;p&gt;J’ai trouvé l’astuce &lt;a href="http://frederic.bezies.free.fr/blog/?tag=isohybrid" title="Petit truc pour rendre une ISO classique démarrable sur une clé USB"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La première étape consiste à formater une clé USB. Evidemment, il faut que la clé soit suffisamment grande pour contenir le fichier .iso. Pour formater la clé USB, démarrer l’utilitaire de disque et formater la clé (en FAT32 ou EXT4, ça marche très bien).&lt;/p&gt;
&lt;p&gt;Nous allons ensuite passé par le terminal :&lt;/p&gt;
&lt;p&gt;Ouvrez une fenêtre de terminal&lt;/p&gt;
&lt;p&gt;Si vous n’êtes pas familier des commandes cd pour se balader dans les répertoires à partir du terminal, vous aurez copié au préalable votre fichier .iso à la racine de votre répertoire personnel.&lt;/p&gt;
&lt;h3&gt;1) Isohybrid&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;isohybrid&lt;span class="w"&gt; &lt;/span&gt;image.iso
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Les fichiers .iso sont plutôt destinés à être gravé sur CD, cette commande permet de copier le fichier .iso en toute sérénité sur la clé USB (de créer une version hybrid de l’image disque).&lt;/p&gt;
&lt;p&gt;Si vous n'avez pas la commande isohybrid, il faut installer syslinux comme ceci (sous Ubuntu ou apparenté)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;syslinux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2) df –h&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;df&lt;span class="w"&gt; &lt;/span&gt;-h
Sys.&lt;span class="w"&gt; &lt;/span&gt;de&lt;span class="w"&gt; &lt;/span&gt;fichiers&lt;span class="w"&gt; &lt;/span&gt;Taille&lt;span class="w"&gt; &lt;/span&gt;Utilisé&lt;span class="w"&gt; &lt;/span&gt;Dispo&lt;span class="w"&gt; &lt;/span&gt;Uti%&lt;span class="w"&gt; &lt;/span&gt;Monté&lt;span class="w"&gt; &lt;/span&gt;sur
/dev/sda1&lt;span class="w"&gt;           &lt;/span&gt;37G&lt;span class="w"&gt;     &lt;/span&gt;12G&lt;span class="w"&gt;   &lt;/span&gt;23G&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;/
udev&lt;span class="w"&gt;               &lt;/span&gt;241M&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;,0K&lt;span class="w"&gt;  &lt;/span&gt;241M&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;/dev
tmpfs&lt;span class="w"&gt;              &lt;/span&gt;100M&lt;span class="w"&gt;    &lt;/span&gt;816K&lt;span class="w"&gt;   &lt;/span&gt;99M&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;/run
none&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;,0M&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;,0M&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;/run/lock
none&lt;span class="w"&gt;               &lt;/span&gt;248M&lt;span class="w"&gt;     &lt;/span&gt;72K&lt;span class="w"&gt;  &lt;/span&gt;248M&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;/run/shm
/dev/sdb1&lt;span class="w"&gt;         &lt;/span&gt;1004M&lt;span class="w"&gt;    &lt;/span&gt;312M&lt;span class="w"&gt;  &lt;/span&gt;692M&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;/media/USB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cela permet de savoir où copier le fichier .iso. En général, cela ressemble à quelque chose comme /dev/sdb ou /dev/sdb1.&lt;/p&gt;
&lt;h3&gt;3) dd&lt;/h3&gt;
&lt;p&gt;Si vous n’êtes jamais entré dans le terminal, je dois vous mettre en garde, cette commande peut être dangereuse. Mal utilisée, elle peut complètement effacer votre disque dur.&lt;/p&gt;
&lt;p&gt;Si vous avez déjà utilisé le terminal, je dois vous mettre en garde, cette commande peut être dangereuse. Mal utilisée, elle peut complètement effacer votre disque dur.&lt;/p&gt;
&lt;p&gt;Ces précautions prises, en fait c’est très simple, il suffit de taper la commande de la manière suivante :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;dd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;image.iso&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dans le détail :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sudo : cela signifie que nous sommes en super utilisateur, il faut donc ensuite taper son mot de passe.&lt;/li&gt;
&lt;li&gt;dd : c’est la commande de copie&lt;/li&gt;
&lt;li&gt;if : cela signifie input file, le fichier en entrée est bien le fichier .iso&lt;/li&gt;
&lt;li&gt;of : cela signifie output file, le fichier en sortie se trouve bien sur la clé USB. Petite astuce super importante : il faut absolument enlever le numéro de /dev/sdb1 en /dev/sdb, sinon ça ne marche pas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Et nous voyons bien où se trouve le coté dangereux en inversant if et of, on écrase tout avec une clé vide.&lt;/p&gt;
&lt;p&gt;Comme nous avons fait un petit coup d’isohybrid avant, pas de soucis de format au moment de la copie.&lt;/p&gt;
&lt;p&gt;En hop, une clé bootable. Une opération que nous pouvons recommencer à l’infini. Je l'ai testée sur un très grand nombre de distributions, ça marche très bien.&lt;/p&gt;</content><category term="Terminal"/><category term="Boot"/><category term="dd"/><category term="df -h"/><category term="isohybrid"/><category term="Live USB"/><category term="syslinux"/><category term="terminal"/></entry><entry><title>Comment installer Lubuntu 12.04</title><link href="https://letchap.github.io/2013/02/19/comment-installer-lubuntu-12-dot-04/" rel="alternate"/><published>2013-02-19T23:18:00+01:00</published><updated>2013-02-19T23:18:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-19:/2013/02/19/comment-installer-lubuntu-12-dot-04/</id><summary type="html">&lt;p&gt;Le guide d’installation décrit ci-dessous concerne plus particulièrement la version 12.04 de Lubuntu, la version qui est installée sur mon ordinateur. Ne sont exposés que les principes généraux pour une installation réussie, principes qui peuvent s'appliquer à un très grand nombre de distributions, l'important est de comprendre ce …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Le guide d’installation décrit ci-dessous concerne plus particulièrement la version 12.04 de Lubuntu, la version qui est installée sur mon ordinateur. Ne sont exposés que les principes généraux pour une installation réussie, principes qui peuvent s'appliquer à un très grand nombre de distributions, l'important est de comprendre ce que nous sommes en train de faire. Pour plus de détail, les guides d'installation de chacune des distributions sont généralement disponibles sur les sites des dites distributions ou sur des blogs.&lt;/p&gt;
&lt;p&gt;Le principe général est le suivant :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Je cherche la distribution qui me convient,&lt;/li&gt;
&lt;li&gt;Je récupère une image .iso de la distribution que je souhaite installer,&lt;/li&gt;
&lt;li&gt;Je créé un live CD ou un live USB,&lt;/li&gt;
&lt;li&gt;Je démarre (boot en anglais) sur le CD ou sur la clé USB,&lt;/li&gt;
&lt;li&gt;Je choisis de tester la distribution avant de l’installer ou je l’installe directement,&lt;/li&gt;
&lt;li&gt;Lors de l’installation je choisis ou non de conserver mon ancien système d’exploitation,&lt;/li&gt;
&lt;li&gt;Je découvre les joies de Lubuntu.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Avant de démarrer, nous avons besoin :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;d’un CDRom de 700Mo ou d’une clé USB de 1Go (pour la version 12.04 de Lubuntu c’est suffisant, pour certaines versions c'est largement insuffisant),&lt;/li&gt;
&lt;li&gt;d’un ordinateur avec une connexion internet pour télécharger une image disque,&lt;/li&gt;
&lt;li&gt;d’un ordinateur (ça peut être le même) pour graver l’image disque sur le CDRom ou pour la copier sur la clé USB,&lt;/li&gt;
&lt;li&gt;d’un ordinateur, (ça peut toujours être le même) capable de démarrer sur CDRom ou sur une clé USB.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si vous n'avez rien de tout ça, il est possible d'acheter un CD tout prêt avec l'image disque auprès de l'éditeur de la distribution choisie.&lt;/p&gt;
&lt;p&gt;C’est bon, vous avez tout ce qui figure sur la liste des courses, nous allons pouvoir commencer l’installation.&lt;/p&gt;
&lt;h3&gt;1) Je cherche la distribution qui me convient&lt;/h3&gt;
&lt;p&gt;Tout est expliqué &lt;a href="https://letchap.github.io/2013/02/19/quel-linux-choisir/" title="Quel Linux choisir ?"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;2) Je récupère une image disque de la distribution que je souhaite installer&lt;/h3&gt;
&lt;p&gt;Mais bon sang, c’est quoi une image disque ?&lt;/p&gt;
&lt;p&gt;Une image disque est un fichier .iso qui contient la distribution à installer. Pour une même distribution, il peut se trouver plusieurs fichiers .iso, en fonction des versions, des bureaux, ou du processeur (32 ou 64bits).&lt;/p&gt;
&lt;p&gt;Il est aussi souvent possible de les télécharger soit en direct download soit par torrent. Si possible, il est préférable de télécharger par torrent, c’est plus stable et souvent plus rapide.&lt;/p&gt;
&lt;h3&gt;3) Je créé un live CD ou un live USB&lt;/h3&gt;
&lt;p&gt;Créer un live CD ou un live USB consiste à copier le fichier .iso sur le CD ou la clé USB.&lt;/p&gt;
&lt;h4&gt;Créer un live CD&lt;/h4&gt;
&lt;p&gt;Maintenant que j’ai récupéré l’image que je voulais, comment je la grave sur le CDRom ?&lt;/p&gt;
&lt;p&gt;Vous êtes sous Windows : je ne sais pas, je n’ai pas Windows. Mais vous pourrez trouver des tutoriels un peu partout.&lt;/p&gt;
&lt;p&gt;Vous êtes sous OS X : attention, pour graver l’image disque sur le CD, il convient de passer obligatoirement par l’utilitaire de disque et de ne surtout pas faire de clic droit ou cmd clic sur l’image disque pour la graver. Une fois sur l’utilitaire de disque, il n’y a plus qu’à sélectionner « graver une image disque » sur le CDRom.&lt;/p&gt;
&lt;p&gt;Vous êtes déjà sous Linux : je n’ai jamais gravé une image disque sous Linux, je ne sais donc pas comment faire, car une fois sur Lubuntu, je suis rapidement passer à la clé USB.&lt;/p&gt;
&lt;h4&gt;Créer un live USB&lt;/h4&gt;
&lt;p&gt;Toute la procédure est décrite &lt;a href="https://letchap.github.io/2013/02/20/fabriquer-une-cle-live-usb-depuis-nimporte-quelle-distribution-linux/"&gt;ici&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;4) Je démarre (boot en anglais) sur le CD ou sur la clé USB&lt;/h3&gt;
&lt;p&gt;Pourquoi je dois démarrer sur le CDRom, et d’ailleurs ça veut dire quoi ?&lt;/p&gt;
&lt;p&gt;Lorsque vous démarrez l’ordinateur, sa première action est de chercher sur quel support démarrer et de lancer le système d’exploitation qu’il trouve sur ce support. Cela se passe dans le BIOS du PC.&lt;/p&gt;
&lt;p&gt;Par défaut, le PC va démarrer sur le disque dur pour lancer Windows.&lt;/p&gt;
&lt;p&gt;Il est possible de changer les paramètres du BIOS afin qu’il démarre sur le CD ou la clé USB. Sur mon PC (Toshiba Satellite), il faut appuyer la touche F12 au démarrage, puis sélectionner le support. Chaque marque à sa propre façon d’entrer dans le BIOS. Avec une petite recherche sur internet vous trouverez celle de votre PC.&lt;/p&gt;
&lt;p&gt;Attention, cette procédure n'est valable que pour les PC démarrant avec le BIOS. Elle n'est pas valable pour les PC les plus récents démarrant avec UEFI.&lt;/p&gt;
&lt;h3&gt;5) Je choisis de tester la distribution avant de l’installer ou je l’installe directement&lt;/h3&gt;
&lt;p&gt;Il est possible de tester une distribution avant de l’installer définitivement sur son ordinateur, sans toucher à son système d’exploitation. C'est ce qu'on appelle une session live. Que cela soit par CD ou clé USB, l’ordinateur va uniquement utiliser les composants matériel (processeur, mémoire vive, carte video, etc …) sans toucher au disque dur. Tous les accès au système d’exploitation se feront sur le CD ou la clé USB. Et une fois l’ordinateur éteint, c’est comme s’il ne s’était rien passé. Cela permet de tester dans des conditions réelles sa distribution, de se faire une idée de son fonctionnement avant de choisir une installation définitive.&lt;/p&gt;
&lt;p&gt;L’installation définitive peut se faire à partir de cette même session live.&lt;/p&gt;
&lt;p&gt;L’installation définitive peut se faire aussi sans test dès le départ au moment du boot, puisque c’est au début du démarrage sur clé ou CD qu’il est en général demandé soit de tester soit d’installer la distribution.&lt;/p&gt;
&lt;h3&gt;6) Lors de l’installation je choisis ou non de conserver mon ancien système d’exploitation&lt;/h3&gt;
&lt;p&gt;Personnellement, j’ai complètement écrasé l’ancien système, je n’ai donc pas partitionné le disque dur pour installer le nouveau système à coté de l’ancien, mais sachez qu’il est tout à fait possible de garder son ancien OS (et donc toutes ses données) à coté de Linux. Il vous sera alors demandé au redémarrage de choisir entre les deux systèmes celui sur lequel vous voulez démarrer.&lt;/p&gt;
&lt;p&gt;Pour installer le nouveau système à coté de l’ancien, il faudra réserver une place sur le disque dur pour le petit nouveau. Cette action s’appelle partitionner le disque dur, c'est-à-dire créer deux (ou plus) espaces étanches pour chacun des deux OS. Je vous mets en garde si vous ne l'avais jamais fait, une fausse manipulation et vous risquez de tout perdre, donc pensez à sauvegarder avant.&lt;/p&gt;
&lt;h3&gt;7) Je découvre les joies de Lubuntu&lt;/h3&gt;
&lt;p&gt;Il ne reste plus qu’à suivre la procédure d’installation, avec une connexion internet c’est mieux (ainsi les compléments d’installation seront téléchargés au fur et à mesure du processus), redémarrer et goûter au plaisir de votre tout nouvel OS.&lt;/p&gt;</content><category term="Lubuntu"/><category term="12.04"/><category term="BIOS"/><category term="Boot"/><category term="Live CD"/><category term="Live USB"/><category term="Lubuntu"/><category term="LXDE"/></entry><entry><title>Quel Linux choisir?</title><link href="https://letchap.github.io/2013/02/19/quel-linux-choisir/" rel="alternate"/><published>2013-02-19T21:29:00+01:00</published><updated>2013-02-19T21:29:00+01:00</updated><author><name>letchap</name></author><id>tag:letchap.github.io,2013-02-19:/2013/02/19/quel-linux-choisir/</id><summary type="html">&lt;p&gt;Une fois ma décision prise d’installer linux sur mon vieil ordinateur, rapidement je me suis trouvé confronter à une question de taille : Quel Linux choisir ?&lt;/p&gt;
&lt;p&gt;Linux est un OS (Operating System, système d’exploitation en français) libre et ouvert. Chacun a le droit de le modifier et d’en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Une fois ma décision prise d’installer linux sur mon vieil ordinateur, rapidement je me suis trouvé confronter à une question de taille : Quel Linux choisir ?&lt;/p&gt;
&lt;p&gt;Linux est un OS (Operating System, système d’exploitation en français) libre et ouvert. Chacun a le droit de le modifier et d’en proposer sa propre version. Nous parlons alors d’une distribution. Et des distributions, il en existe une foultitude : des jolies, des faciles à installer, des pour brutes épaisses de l'informatique, des complètes pour tout faire comme les OS payants mais en version libre, des spécialisées (pour la video, la sécurité, l’éducation, …) des légères pour faire tourner un vieux PC. Difficile de s’y retrouver dans cette jungle.&lt;/p&gt;
&lt;p&gt;Si vous ne voulez pas chercher trop longtemps, que votre PC n’est pas si ancien que ça, n’hésitez pas, choisissez pour démarrer la dernière distribution de Linux Mint disponible au téléchargement &lt;a href="http://www.linuxmint.com/download.php" title="Linux Mint"&gt;ici&lt;/a&gt; et ne vous posez pas plus de questions. Vous pouvez  également prendre de manière alternative Ubuntu. Pour connaître la dernière version en date, allez &lt;a href="http://www.ubuntu.com/download/desktop" title="site officiel Ubuntu"&gt;ici&lt;/a&gt; pour le site officiel, ou &lt;a href="http://ubuntu-fr.org/" title="Ubuntu en français"&gt;ici&lt;/a&gt; pour la version française.&lt;/p&gt;
&lt;p&gt;Si vous voulez affiner votre choix, sachez qu’il existe plusieurs distributions, et très souvent le choix entre plusieurs bureaux :&lt;/p&gt;
&lt;h3&gt;La distribution :&lt;/h3&gt;
&lt;p&gt;Comme nous l’avons déjà vu, il s’agit d’une version de l’OS. Elles ont dérivées de versions majeures de Linux. Nous pourrons citer sans être exhaustif :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Debian&lt;/li&gt;
&lt;li&gt;Redhat&lt;/li&gt;
&lt;li&gt;OpenSUSE&lt;/li&gt;
&lt;li&gt;Mandriva&lt;/li&gt;
&lt;li&gt;Fedora&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A partir de ces versions majeures nous allons trouver les distributions qui nous intéressent et qui sont plus accessibles au commun des mortels. Parmi celles-ci, nous allons trouver toute la famille Ubuntu (Xubuntu, Kubuntu, Lubuntu) dérivée de Debian. Elle est sans doute la plus connue et celle qui bénéficie du support communautaire le plus actif. &lt;/p&gt;
&lt;p&gt;Il existe quelques belles distributions faciles d'accès comme Linux Mint (basée sur Ubuntu et la plus populaire en ce moment) ou Mageia basée sur Mandriva.&lt;/p&gt;
&lt;p&gt;Pour se faire une idée des distributions les plus populaires, il est possible de suivre le classement des distributions les plus consultées sur le site &lt;a href="http://distrowatch.com/" title="distrowatch"&gt;distrowatch&lt;/a&gt;. En prime, vous trouverez un petit descriptif et les liens vers les sites des dites distributions.&lt;/p&gt;
&lt;p&gt;Si votre ordinateur est vraiment hors d'âge, il existe une distribution ultra légère et en français, &lt;a href="http://toutoulinux.free.fr/&amp;quot;"&gt;toutoulinux&lt;/a&gt;. Je vous la recommande chaudement pour les très vieux PC cacochimes.&lt;/p&gt;
&lt;h3&gt;Le bureau :&lt;/h3&gt;
&lt;p&gt;A chacune ou presque de ces distributions, nous pouvons combiner différents bureaux. Ces bureaux vont se différencier par :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;La liste des applications embarquées ou disponibles&lt;/li&gt;
&lt;li&gt;Le look&lt;/li&gt;
&lt;li&gt;La documentation&lt;/li&gt;
&lt;li&gt;Les compléments&lt;/li&gt;
&lt;li&gt;La possibilité de modifier la configuration&lt;/li&gt;
&lt;li&gt;La simplicité d’installation&lt;/li&gt;
&lt;li&gt;Le poids&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour faire un résumé très subjectif :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unity : le plus controversé&lt;/li&gt;
&lt;li&gt;Cinnamon : le plus à la mode&lt;/li&gt;
&lt;li&gt;Mate : le retour à Gnome&lt;/li&gt;
&lt;li&gt;Xfce : le bon compromis&lt;/li&gt;
&lt;li&gt;Gnome 3 : le plus standard&lt;/li&gt;
&lt;li&gt;KDE 4 : le plus configurable&lt;/li&gt;
&lt;li&gt;Lxde : le plus léger&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Et il existe plein d'autres bureaux ...&lt;/p&gt;
&lt;h3&gt;Non pae&lt;/h3&gt;
&lt;p&gt;Pour les plus vieux ordinateurs comme le mien, attention à bien choisir une version non pae (c'est un gestionnaire de RAM non pris en charge sur les vieux PC), comme Lubuntu 12.04 par exemple (mais pas les suivantes).&lt;/p&gt;
&lt;h3&gt;Mon choix&lt;/h3&gt;
&lt;p&gt;Sur mon vieux PC, dans les prememris temps, j’avais choisi une distribution Lubuntu 12.04, c'est-à-dire basée sur Ubuntu avec un bureau très léger LXDE. Ce n’est pas la dernière version en date de Lubuntu, mais après avoir fait le test, mon pauvre PC refusait d’aller au-delà et supporte mal la version 12.10. Par ailleurs, il refuse carrément la version 13.04 obligatoirement PAE. Pour le débutants avec une petite configuration je recommande formtement Lubuntu 12.04 LTS (Long Time Support).&lt;/p&gt;
&lt;p&gt;Ensuite j'ai installé la distribution Crunchbang (basée sur Debian)avec un bureau openbox qui me donne entière satisfaction autant sur la plan des performances que de la stabilité, mais qui n'est pas réservée aux débutants.&lt;/p&gt;
&lt;h3&gt;Avant de choisir&lt;/h3&gt;
&lt;p&gt;Avant de choisir, il est aussi possible de tester une distribution par la technique du live USB (ou live CD mais bon, il faut graver un CD à chaque fois, ça consomme du CD). Mais là, on n'est déjà plus au stade du grand débutant. J'ai dédié un &lt;a href="https://letchap.github.io/2013/02/20/fabriquer-une-cle-live-usb-depuis-nimporte-quelle-distribution-linux/" title="Fabriquer une clé live USB depuis n'importe quelle distribution Linux"&gt;billet spécial sur le sujet&lt;/a&gt;. Dernière méthode très intéressante pour tester une distribution : la virtualisation (avec Virtualbox par exemple). La encore vous trouverez des explications &lt;a href="https://letchap.github.io/2013/04/09/virtualiser-mageia-2-sur-os-x-mountain-lion-avec-virtualbox/" title="Virtualisation"&gt;ici&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Maintenant à vous sélectionner la distribution qui vous convient, et une fois choisie, vous allez pouvoir l'installer. C'est l'objet du prochain billet sur &lt;a href="https://letchap.github.io/2013/02/19/comment-installer-lubuntu-12-dot-04/" title="Comment installer Lubuntu 12.04"&gt;l'installation d'une distribution Linux&lt;/a&gt;&lt;/p&gt;</content><category term="Linux"/><category term="Distributions"/><category term="Gnome"/><category term="KDE"/><category term="Linux"/><category term="Lubuntu"/><category term="LXDE"/><category term="pae"/><category term="Ubuntu"/><category term="XFCE"/><category term="Mate"/><category term="Cinnamon"/><category term="Linux Mint"/><category term="Mageia"/></entry></feed>